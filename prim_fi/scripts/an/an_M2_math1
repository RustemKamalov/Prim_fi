// analog math-log 1

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT970_CtWdSet1
        P1 =  M2_CT970_CtWdSet2
        P2 =  M2_CT970_MinRaw
        P3 =  M2_CT970_MaxRaw
        P4 =  M2_CT970_MinEU
        P5 =  M2_CT970_MaxEU
        P6 =  M2_CT970_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT970_CtWdSet1
        P1  = M2_CT970_CtWdSet2
        P2  = M2_CT970_CtWd
        P3  = M2_CT970_CtWdSend
        P4  = M2_CT970_MinRaw
        P5  = M2_CT970_MaxRaw
        P6  = M2_CT970_MinEU
        P7  = M2_CT970_MaxEU
        P8  = M2_CT970_ScaleWidth
        P9  = M2_CT970_Raw
        P10 = M2_CT970_Vl
        P11 = M2_CT970_Percent
        P12 = M2_ChDtTrg208
        P13 = M2_CT970_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT970_CtWdSet1
        P1 =  M2_BT970_CtWdSet2
        P2 =  M2_BT970_MinRaw
        P3 =  M2_BT970_MaxRaw
        P4 =  M2_BT970_MinEU
        P5 =  M2_BT970_MaxEU
        P6 =  M2_BT970_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT970_CtWdSet1
        P1  = M2_BT970_CtWdSet2
        P2  = M2_BT970_CtWd
        P3  = M2_BT970_CtWdSend
        P4  = M2_BT970_MinRaw
        P5  = M2_BT970_MaxRaw
        P6  = M2_BT970_MinEU
        P7  = M2_BT970_MaxEU
        P8  = M2_BT970_ScaleWidth
        P9  = M2_BT970_Raw
        P10 = M2_BT970_Vl
        P11 = M2_BT970_Percent
        P12 = M2_ChDtTrg208
        P13 = M2_BT970_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT971_CtWdSet1
        P1 =  M2_CT971_CtWdSet2
        P2 =  M2_CT971_MinRaw
        P3 =  M2_CT971_MaxRaw
        P4 =  M2_CT971_MinEU
        P5 =  M2_CT971_MaxEU
        P6 =  M2_CT971_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT971_CtWdSet1
        P1  = M2_CT971_CtWdSet2
        P2  = M2_CT971_CtWd
        P3  = M2_CT971_CtWdSend
        P4  = M2_CT971_MinRaw
        P5  = M2_CT971_MaxRaw
        P6  = M2_CT971_MinEU
        P7  = M2_CT971_MaxEU
        P8  = M2_CT971_ScaleWidth
        P9  = M2_CT971_Raw
        P10 = M2_CT971_Vl
        P11 = M2_CT971_Percent
        P12 = M2_ChDtTrg208
        P13 = M2_CT971_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT971_CtWdSet1
        P1 =  M2_BT971_CtWdSet2
        P2 =  M2_BT971_MinRaw
        P3 =  M2_BT971_MaxRaw
        P4 =  M2_BT971_MinEU
        P5 =  M2_BT971_MaxEU
        P6 =  M2_BT971_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT971_CtWdSet1
        P1  = M2_BT971_CtWdSet2
        P2  = M2_BT971_CtWd
        P3  = M2_BT971_CtWdSend
        P4  = M2_BT971_MinRaw
        P5  = M2_BT971_MaxRaw
        P6  = M2_BT971_MinEU
        P7  = M2_BT971_MaxEU
        P8  = M2_BT971_ScaleWidth
        P9  = M2_BT971_Raw
        P10 = M2_BT971_Vl
        P11 = M2_BT971_Percent
        P12 = M2_ChDtTrg208
        P13 = M2_BT971_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT972_CtWdSet1
        P1 =  M2_CT972_CtWdSet2
        P2 =  M2_CT972_MinRaw
        P3 =  M2_CT972_MaxRaw
        P4 =  M2_CT972_MinEU
        P5 =  M2_CT972_MaxEU
        P6 =  M2_CT972_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT972_CtWdSet1
        P1  = M2_CT972_CtWdSet2
        P2  = M2_CT972_CtWd
        P3  = M2_CT972_CtWdSend
        P4  = M2_CT972_MinRaw
        P5  = M2_CT972_MaxRaw
        P6  = M2_CT972_MinEU
        P7  = M2_CT972_MaxEU
        P8  = M2_CT972_ScaleWidth
        P9  = M2_CT972_Raw
        P10 = M2_CT972_Vl
        P11 = M2_CT972_Percent
        P12 = M2_ChDtTrg209
        P13 = M2_CT972_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT972_CtWdSet1
        P1 =  M2_BT972_CtWdSet2
        P2 =  M2_BT972_MinRaw
        P3 =  M2_BT972_MaxRaw
        P4 =  M2_BT972_MinEU
        P5 =  M2_BT972_MaxEU
        P6 =  M2_BT972_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT972_CtWdSet1
        P1  = M2_BT972_CtWdSet2
        P2  = M2_BT972_CtWd
        P3  = M2_BT972_CtWdSend
        P4  = M2_BT972_MinRaw
        P5  = M2_BT972_MaxRaw
        P6  = M2_BT972_MinEU
        P7  = M2_BT972_MaxEU
        P8  = M2_BT972_ScaleWidth
        P9  = M2_BT972_Raw
        P10 = M2_BT972_Vl
        P11 = M2_BT972_Percent
        P12 = M2_ChDtTrg209
        P13 = M2_BT972_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT973_CtWdSet1
        P1 =  M2_CT973_CtWdSet2
        P2 =  M2_CT973_MinRaw
        P3 =  M2_CT973_MaxRaw
        P4 =  M2_CT973_MinEU
        P5 =  M2_CT973_MaxEU
        P6 =  M2_CT973_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT973_CtWdSet1
        P1  = M2_CT973_CtWdSet2
        P2  = M2_CT973_CtWd
        P3  = M2_CT973_CtWdSend
        P4  = M2_CT973_MinRaw
        P5  = M2_CT973_MaxRaw
        P6  = M2_CT973_MinEU
        P7  = M2_CT973_MaxEU
        P8  = M2_CT973_ScaleWidth
        P9  = M2_CT973_Raw
        P10 = M2_CT973_Vl
        P11 = M2_CT973_Percent
        P12 = M2_ChDtTrg209
        P13 = M2_CT973_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT973_CtWdSet1
        P1 =  M2_BT973_CtWdSet2
        P2 =  M2_BT973_MinRaw
        P3 =  M2_BT973_MaxRaw
        P4 =  M2_BT973_MinEU
        P5 =  M2_BT973_MaxEU
        P6 =  M2_BT973_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT973_CtWdSet1
        P1  = M2_BT973_CtWdSet2
        P2  = M2_BT973_CtWd
        P3  = M2_BT973_CtWdSend
        P4  = M2_BT973_MinRaw
        P5  = M2_BT973_MaxRaw
        P6  = M2_BT973_MinEU
        P7  = M2_BT973_MaxEU
        P8  = M2_BT973_ScaleWidth
        P9  = M2_BT973_Raw
        P10 = M2_BT973_Vl
        P11 = M2_BT973_Percent
        P12 = M2_ChDtTrg209
        P13 = M2_BT973_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT974_CtWdSet1
        P1 =  M2_CT974_CtWdSet2
        P2 =  M2_CT974_MinRaw
        P3 =  M2_CT974_MaxRaw
        P4 =  M2_CT974_MinEU
        P5 =  M2_CT974_MaxEU
        P6 =  M2_CT974_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT974_CtWdSet1
        P1  = M2_CT974_CtWdSet2
        P2  = M2_CT974_CtWd
        P3  = M2_CT974_CtWdSend
        P4  = M2_CT974_MinRaw
        P5  = M2_CT974_MaxRaw
        P6  = M2_CT974_MinEU
        P7  = M2_CT974_MaxEU
        P8  = M2_CT974_ScaleWidth
        P9  = M2_CT974_Raw
        P10 = M2_CT974_Vl
        P11 = M2_CT974_Percent
        P12 = M2_ChDtTrg210
        P13 = M2_CT974_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT974_CtWdSet1
        P1 =  M2_BT974_CtWdSet2
        P2 =  M2_BT974_MinRaw
        P3 =  M2_BT974_MaxRaw
        P4 =  M2_BT974_MinEU
        P5 =  M2_BT974_MaxEU
        P6 =  M2_BT974_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT974_CtWdSet1
        P1  = M2_BT974_CtWdSet2
        P2  = M2_BT974_CtWd
        P3  = M2_BT974_CtWdSend
        P4  = M2_BT974_MinRaw
        P5  = M2_BT974_MaxRaw
        P6  = M2_BT974_MinEU
        P7  = M2_BT974_MaxEU
        P8  = M2_BT974_ScaleWidth
        P9  = M2_BT974_Raw
        P10 = M2_BT974_Vl
        P11 = M2_BT974_Percent
        P12 = M2_ChDtTrg210
        P13 = M2_BT974_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT975_CtWdSet1
        P1 =  M2_CT975_CtWdSet2
        P2 =  M2_CT975_MinRaw
        P3 =  M2_CT975_MaxRaw
        P4 =  M2_CT975_MinEU
        P5 =  M2_CT975_MaxEU
        P6 =  M2_CT975_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT975_CtWdSet1
        P1  = M2_CT975_CtWdSet2
        P2  = M2_CT975_CtWd
        P3  = M2_CT975_CtWdSend
        P4  = M2_CT975_MinRaw
        P5  = M2_CT975_MaxRaw
        P6  = M2_CT975_MinEU
        P7  = M2_CT975_MaxEU
        P8  = M2_CT975_ScaleWidth
        P9  = M2_CT975_Raw
        P10 = M2_CT975_Vl
        P11 = M2_CT975_Percent
        P12 = M2_ChDtTrg210
        P13 = M2_CT975_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT975_CtWdSet1
        P1 =  M2_BT975_CtWdSet2
        P2 =  M2_BT975_MinRaw
        P3 =  M2_BT975_MaxRaw
        P4 =  M2_BT975_MinEU
        P5 =  M2_BT975_MaxEU
        P6 =  M2_BT975_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT975_CtWdSet1
        P1  = M2_BT975_CtWdSet2
        P2  = M2_BT975_CtWd
        P3  = M2_BT975_CtWdSend
        P4  = M2_BT975_MinRaw
        P5  = M2_BT975_MaxRaw
        P6  = M2_BT975_MinEU
        P7  = M2_BT975_MaxEU
        P8  = M2_BT975_ScaleWidth
        P9  = M2_BT975_Raw
        P10 = M2_BT975_Vl
        P11 = M2_BT975_Percent
        P12 = M2_ChDtTrg210
        P13 = M2_BT975_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT976_CtWdSet1
        P1 =  M2_CT976_CtWdSet2
        P2 =  M2_CT976_MinRaw
        P3 =  M2_CT976_MaxRaw
        P4 =  M2_CT976_MinEU
        P5 =  M2_CT976_MaxEU
        P6 =  M2_CT976_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT976_CtWdSet1
        P1  = M2_CT976_CtWdSet2
        P2  = M2_CT976_CtWd
        P3  = M2_CT976_CtWdSend
        P4  = M2_CT976_MinRaw
        P5  = M2_CT976_MaxRaw
        P6  = M2_CT976_MinEU
        P7  = M2_CT976_MaxEU
        P8  = M2_CT976_ScaleWidth
        P9  = M2_CT976_Raw
        P10 = M2_CT976_Vl
        P11 = M2_CT976_Percent
        P12 = M2_ChDtTrg211
        P13 = M2_CT976_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT976_CtWdSet1
        P1 =  M2_BT976_CtWdSet2
        P2 =  M2_BT976_MinRaw
        P3 =  M2_BT976_MaxRaw
        P4 =  M2_BT976_MinEU
        P5 =  M2_BT976_MaxEU
        P6 =  M2_BT976_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT976_CtWdSet1
        P1  = M2_BT976_CtWdSet2
        P2  = M2_BT976_CtWd
        P3  = M2_BT976_CtWdSend
        P4  = M2_BT976_MinRaw
        P5  = M2_BT976_MaxRaw
        P6  = M2_BT976_MinEU
        P7  = M2_BT976_MaxEU
        P8  = M2_BT976_ScaleWidth
        P9  = M2_BT976_Raw
        P10 = M2_BT976_Vl
        P11 = M2_BT976_Percent
        P12 = M2_ChDtTrg211
        P13 = M2_BT976_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT977_CtWdSet1
        P1 =  M2_CT977_CtWdSet2
        P2 =  M2_CT977_MinRaw
        P3 =  M2_CT977_MaxRaw
        P4 =  M2_CT977_MinEU
        P5 =  M2_CT977_MaxEU
        P6 =  M2_CT977_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT977_CtWdSet1
        P1  = M2_CT977_CtWdSet2
        P2  = M2_CT977_CtWd
        P3  = M2_CT977_CtWdSend
        P4  = M2_CT977_MinRaw
        P5  = M2_CT977_MaxRaw
        P6  = M2_CT977_MinEU
        P7  = M2_CT977_MaxEU
        P8  = M2_CT977_ScaleWidth
        P9  = M2_CT977_Raw
        P10 = M2_CT977_Vl
        P11 = M2_CT977_Percent
        P12 = M2_ChDtTrg211
        P13 = M2_CT977_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT977_CtWdSet1
        P1 =  M2_BT977_CtWdSet2
        P2 =  M2_BT977_MinRaw
        P3 =  M2_BT977_MaxRaw
        P4 =  M2_BT977_MinEU
        P5 =  M2_BT977_MaxEU
        P6 =  M2_BT977_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT977_CtWdSet1
        P1  = M2_BT977_CtWdSet2
        P2  = M2_BT977_CtWd
        P3  = M2_BT977_CtWdSend
        P4  = M2_BT977_MinRaw
        P5  = M2_BT977_MaxRaw
        P6  = M2_BT977_MinEU
        P7  = M2_BT977_MaxEU
        P8  = M2_BT977_ScaleWidth
        P9  = M2_BT977_Raw
        P10 = M2_BT977_Vl
        P11 = M2_BT977_Percent
        P12 = M2_ChDtTrg211
        P13 = M2_BT977_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT978_CtWdSet1
        P1 =  M2_CT978_CtWdSet2
        P2 =  M2_CT978_MinRaw
        P3 =  M2_CT978_MaxRaw
        P4 =  M2_CT978_MinEU
        P5 =  M2_CT978_MaxEU
        P6 =  M2_CT978_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT978_CtWdSet1
        P1  = M2_CT978_CtWdSet2
        P2  = M2_CT978_CtWd
        P3  = M2_CT978_CtWdSend
        P4  = M2_CT978_MinRaw
        P5  = M2_CT978_MaxRaw
        P6  = M2_CT978_MinEU
        P7  = M2_CT978_MaxEU
        P8  = M2_CT978_ScaleWidth
        P9  = M2_CT978_Raw
        P10 = M2_CT978_Vl
        P11 = M2_CT978_Percent
        P12 = M2_ChDtTrg212
        P13 = M2_CT978_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT978_CtWdSet1
        P1 =  M2_BT978_CtWdSet2
        P2 =  M2_BT978_MinRaw
        P3 =  M2_BT978_MaxRaw
        P4 =  M2_BT978_MinEU
        P5 =  M2_BT978_MaxEU
        P6 =  M2_BT978_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT978_CtWdSet1
        P1  = M2_BT978_CtWdSet2
        P2  = M2_BT978_CtWd
        P3  = M2_BT978_CtWdSend
        P4  = M2_BT978_MinRaw
        P5  = M2_BT978_MaxRaw
        P6  = M2_BT978_MinEU
        P7  = M2_BT978_MaxEU
        P8  = M2_BT978_ScaleWidth
        P9  = M2_BT978_Raw
        P10 = M2_BT978_Vl
        P11 = M2_BT978_Percent
        P12 = M2_ChDtTrg212
        P13 = M2_BT978_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT702_CtWdSet1
        P1 =  M2_TT702_CtWdSet2
        P2 =  M2_TT702_MinRaw
        P3 =  M2_TT702_MaxRaw
        P4 =  M2_TT702_MinEU
        P5 =  M2_TT702_MaxEU
        P6 =  M2_TT702_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT702_CtWdSet1
        P1  = M2_TT702_CtWdSet2
        P2  = M2_TT702_CtWd
        P3  = M2_TT702_CtWdSend
        P4  = M2_TT702_MinRaw
        P5  = M2_TT702_MaxRaw
        P6  = M2_TT702_MinEU
        P7  = M2_TT702_MaxEU
        P8  = M2_TT702_ScaleWidth
        P9  = M2_TT702_Raw
        P10 = M2_TT702_Vl
        P11 = M2_TT702_Percent
        P12 = M2_ChDtTrg212
        P13 = M2_TT702_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT702_CtWdSet1
        P1 =  M2_YT702_CtWdSet2
        P2 =  M2_YT702_MinRaw
        P3 =  M2_YT702_MaxRaw
        P4 =  M2_YT702_MinEU
        P5 =  M2_YT702_MaxEU
        P6 =  M2_YT702_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT702_CtWdSet1
        P1  = M2_YT702_CtWdSet2
        P2  = M2_YT702_CtWd
        P3  = M2_YT702_CtWdSend
        P4  = M2_YT702_MinRaw
        P5  = M2_YT702_MaxRaw
        P6  = M2_YT702_MinEU
        P7  = M2_YT702_MaxEU
        P8  = M2_YT702_ScaleWidth
        P9  = M2_YT702_Raw
        P10 = M2_YT702_Vl
        P11 = M2_YT702_Percent
        P12 = M2_ChDtTrg212
        P13 = M2_YT702_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM020_CtWdSet1
        P1 =  M2_RM020_CtWdSet2
        P2 =  M2_RM020_MinRaw
        P3 =  M2_RM020_MaxRaw
        P4 =  M2_RM020_MinEU
        P5 =  M2_RM020_MaxEU
        P6 =  M2_RM020_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM020_CtWdSet1
        P1  = M2_RM020_CtWdSet2
        P2  = M2_RM020_CtWd
        P3  = M2_RM020_CtWdSend
        P4  = M2_RM020_MinRaw
        P5  = M2_RM020_MaxRaw
        P6  = M2_RM020_MinEU
        P7  = M2_RM020_MaxEU
        P8  = M2_RM020_ScaleWidth
        P9  = M2_RM020_Raw
        P10 = M2_RM020_Vl
        P11 = M2_RM020_Percent
        P12 = M2_ChDtTrg213
        P13 = M2_RM020_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM021_CtWdSet1
        P1 =  M2_RM021_CtWdSet2
        P2 =  M2_RM021_MinRaw
        P3 =  M2_RM021_MaxRaw
        P4 =  M2_RM021_MinEU
        P5 =  M2_RM021_MaxEU
        P6 =  M2_RM021_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM021_CtWdSet1
        P1  = M2_RM021_CtWdSet2
        P2  = M2_RM021_CtWd
        P3  = M2_RM021_CtWdSend
        P4  = M2_RM021_MinRaw
        P5  = M2_RM021_MaxRaw
        P6  = M2_RM021_MinEU
        P7  = M2_RM021_MaxEU
        P8  = M2_RM021_ScaleWidth
        P9  = M2_RM021_Raw
        P10 = M2_RM021_Vl
        P11 = M2_RM021_Percent
        P12 = M2_ChDtTrg213
        P13 = M2_RM021_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM022_CtWdSet1
        P1 =  M2_RM022_CtWdSet2
        P2 =  M2_RM022_MinRaw
        P3 =  M2_RM022_MaxRaw
        P4 =  M2_RM022_MinEU
        P5 =  M2_RM022_MaxEU
        P6 =  M2_RM022_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM022_CtWdSet1
        P1  = M2_RM022_CtWdSet2
        P2  = M2_RM022_CtWd
        P3  = M2_RM022_CtWdSend
        P4  = M2_RM022_MinRaw
        P5  = M2_RM022_MaxRaw
        P6  = M2_RM022_MinEU
        P7  = M2_RM022_MaxEU
        P8  = M2_RM022_ScaleWidth
        P9  = M2_RM022_Raw
        P10 = M2_RM022_Vl
        P11 = M2_RM022_Percent
        P12 = M2_ChDtTrg213
        P13 = M2_RM022_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM023_CtWdSet1
        P1 =  M2_RM023_CtWdSet2
        P2 =  M2_RM023_MinRaw
        P3 =  M2_RM023_MaxRaw
        P4 =  M2_RM023_MinEU
        P5 =  M2_RM023_MaxEU
        P6 =  M2_RM023_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM023_CtWdSet1
        P1  = M2_RM023_CtWdSet2
        P2  = M2_RM023_CtWd
        P3  = M2_RM023_CtWdSend
        P4  = M2_RM023_MinRaw
        P5  = M2_RM023_MaxRaw
        P6  = M2_RM023_MinEU
        P7  = M2_RM023_MaxEU
        P8  = M2_RM023_ScaleWidth
        P9  = M2_RM023_Raw
        P10 = M2_RM023_Vl
        P11 = M2_RM023_Percent
        P12 = M2_ChDtTrg213
        P13 = M2_RM023_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT001_CtWdSet1
        P1 =  M2_PT001_CtWdSet2
        P2 =  M2_PT001_MinRaw
        P3 =  M2_PT001_MaxRaw
        P4 =  M2_PT001_MinEU
        P5 =  M2_PT001_MaxEU
        P6 =  M2_PT001_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT001_CtWdSet1
        P1  = M2_PT001_CtWdSet2
        P2  = M2_PT001_CtWd
        P3  = M2_PT001_CtWdSend
        P4  = M2_PT001_MinRaw
        P5  = M2_PT001_MaxRaw
        P6  = M2_PT001_MinEU
        P7  = M2_PT001_MaxEU
        P8  = M2_PT001_ScaleWidth
        P9  = M2_PT001_Raw
        P10 = M2_PT001_Vl
        P11 = M2_PT001_Percent
        P12 = M2_ChDtTrg214
        P13 = M2_PT001_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT002_CtWdSet1
        P1 =  M2_PT002_CtWdSet2
        P2 =  M2_PT002_MinRaw
        P3 =  M2_PT002_MaxRaw
        P4 =  M2_PT002_MinEU
        P5 =  M2_PT002_MaxEU
        P6 =  M2_PT002_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT002_CtWdSet1
        P1  = M2_PT002_CtWdSet2
        P2  = M2_PT002_CtWd
        P3  = M2_PT002_CtWdSend
        P4  = M2_PT002_MinRaw
        P5  = M2_PT002_MaxRaw
        P6  = M2_PT002_MinEU
        P7  = M2_PT002_MaxEU
        P8  = M2_PT002_ScaleWidth
        P9  = M2_PT002_Raw
        P10 = M2_PT002_Vl
        P11 = M2_PT002_Percent
        P12 = M2_ChDtTrg214
        P13 = M2_PT002_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT003_CtWdSet1
        P1 =  M2_PT003_CtWdSet2
        P2 =  M2_PT003_MinRaw
        P3 =  M2_PT003_MaxRaw
        P4 =  M2_PT003_MinEU
        P5 =  M2_PT003_MaxEU
        P6 =  M2_PT003_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT003_CtWdSet1
        P1  = M2_PT003_CtWdSet2
        P2  = M2_PT003_CtWd
        P3  = M2_PT003_CtWdSend
        P4  = M2_PT003_MinRaw
        P5  = M2_PT003_MaxRaw
        P6  = M2_PT003_MinEU
        P7  = M2_PT003_MaxEU
        P8  = M2_PT003_ScaleWidth
        P9  = M2_PT003_Raw
        P10 = M2_PT003_Vl
        P11 = M2_PT003_Percent
        P12 = M2_ChDtTrg214
        P13 = M2_PT003_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM027_CtWdSet1
        P1 =  M2_RM027_CtWdSet2
        P2 =  M2_RM027_MinRaw
        P3 =  M2_RM027_MaxRaw
        P4 =  M2_RM027_MinEU
        P5 =  M2_RM027_MaxEU
        P6 =  M2_RM027_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM027_CtWdSet1
        P1  = M2_RM027_CtWdSet2
        P2  = M2_RM027_CtWd
        P3  = M2_RM027_CtWdSend
        P4  = M2_RM027_MinRaw
        P5  = M2_RM027_MaxRaw
        P6  = M2_RM027_MinEU
        P7  = M2_RM027_MaxEU
        P8  = M2_RM027_ScaleWidth
        P9  = M2_RM027_Raw
        P10 = M2_RM027_Vl
        P11 = M2_RM027_Percent
        P12 = M2_ChDtTrg214
        P13 = M2_RM027_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM028_CtWdSet1
        P1 =  M2_RM028_CtWdSet2
        P2 =  M2_RM028_MinRaw
        P3 =  M2_RM028_MaxRaw
        P4 =  M2_RM028_MinEU
        P5 =  M2_RM028_MaxEU
        P6 =  M2_RM028_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM028_CtWdSet1
        P1  = M2_RM028_CtWdSet2
        P2  = M2_RM028_CtWd
        P3  = M2_RM028_CtWdSend
        P4  = M2_RM028_MinRaw
        P5  = M2_RM028_MaxRaw
        P6  = M2_RM028_MinEU
        P7  = M2_RM028_MaxEU
        P8  = M2_RM028_ScaleWidth
        P9  = M2_RM028_Raw
        P10 = M2_RM028_Vl
        P11 = M2_RM028_Percent
        P12 = M2_ChDtTrg215
        P13 = M2_RM028_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM029_CtWdSet1
        P1 =  M2_RM029_CtWdSet2
        P2 =  M2_RM029_MinRaw
        P3 =  M2_RM029_MaxRaw
        P4 =  M2_RM029_MinEU
        P5 =  M2_RM029_MaxEU
        P6 =  M2_RM029_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM029_CtWdSet1
        P1  = M2_RM029_CtWdSet2
        P2  = M2_RM029_CtWd
        P3  = M2_RM029_CtWdSend
        P4  = M2_RM029_MinRaw
        P5  = M2_RM029_MaxRaw
        P6  = M2_RM029_MinEU
        P7  = M2_RM029_MaxEU
        P8  = M2_RM029_ScaleWidth
        P9  = M2_RM029_Raw
        P10 = M2_RM029_Vl
        P11 = M2_RM029_Percent
        P12 = M2_ChDtTrg215
        P13 = M2_RM029_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM030_CtWdSet1
        P1 =  M2_RM030_CtWdSet2
        P2 =  M2_RM030_MinRaw
        P3 =  M2_RM030_MaxRaw
        P4 =  M2_RM030_MinEU
        P5 =  M2_RM030_MaxEU
        P6 =  M2_RM030_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM030_CtWdSet1
        P1  = M2_RM030_CtWdSet2
        P2  = M2_RM030_CtWd
        P3  = M2_RM030_CtWdSend
        P4  = M2_RM030_MinRaw
        P5  = M2_RM030_MaxRaw
        P6  = M2_RM030_MinEU
        P7  = M2_RM030_MaxEU
        P8  = M2_RM030_ScaleWidth
        P9  = M2_RM030_Raw
        P10 = M2_RM030_Vl
        P11 = M2_RM030_Percent
        P12 = M2_ChDtTrg215
        P13 = M2_RM030_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM031_CtWdSet1
        P1 =  M2_RM031_CtWdSet2
        P2 =  M2_RM031_MinRaw
        P3 =  M2_RM031_MaxRaw
        P4 =  M2_RM031_MinEU
        P5 =  M2_RM031_MaxEU
        P6 =  M2_RM031_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM031_CtWdSet1
        P1  = M2_RM031_CtWdSet2
        P2  = M2_RM031_CtWd
        P3  = M2_RM031_CtWdSend
        P4  = M2_RM031_MinRaw
        P5  = M2_RM031_MaxRaw
        P6  = M2_RM031_MinEU
        P7  = M2_RM031_MaxEU
        P8  = M2_RM031_ScaleWidth
        P9  = M2_RM031_Raw
        P10 = M2_RM031_Vl
        P11 = M2_RM031_Percent
        P12 = M2_ChDtTrg215
        P13 = M2_RM031_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_AT001_CtWdSet1
        P1 =  M2_AT001_CtWdSet2
        P2 =  M2_AT001_MinRaw
        P3 =  M2_AT001_MaxRaw
        P4 =  M2_AT001_MinEU
        P5 =  M2_AT001_MaxEU
        P6 =  M2_AT001_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_AT001_CtWdSet1
        P1  = M2_AT001_CtWdSet2
        P2  = M2_AT001_CtWd
        P3  = M2_AT001_CtWdSend
        P4  = M2_AT001_MinRaw
        P5  = M2_AT001_MaxRaw
        P6  = M2_AT001_MinEU
        P7  = M2_AT001_MaxEU
        P8  = M2_AT001_ScaleWidth
        P9  = M2_AT001_Raw
        P10 = M2_AT001_Vl
        P11 = M2_AT001_Percent
        P12 = M2_ChDtTrg216
        P13 = M2_AT001_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_AT002_CtWdSet1
        P1 =  M2_AT002_CtWdSet2
        P2 =  M2_AT002_MinRaw
        P3 =  M2_AT002_MaxRaw
        P4 =  M2_AT002_MinEU
        P5 =  M2_AT002_MaxEU
        P6 =  M2_AT002_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_AT002_CtWdSet1
        P1  = M2_AT002_CtWdSet2
        P2  = M2_AT002_CtWd
        P3  = M2_AT002_CtWdSend
        P4  = M2_AT002_MinRaw
        P5  = M2_AT002_MaxRaw
        P6  = M2_AT002_MinEU
        P7  = M2_AT002_MaxEU
        P8  = M2_AT002_ScaleWidth
        P9  = M2_AT002_Raw
        P10 = M2_AT002_Vl
        P11 = M2_AT002_Percent
        P12 = M2_ChDtTrg216
        P13 = M2_AT002_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT501_CtWdSet1
        P1 =  M2_YT501_CtWdSet2
        P2 =  M2_YT501_MinRaw
        P3 =  M2_YT501_MaxRaw
        P4 =  M2_YT501_MinEU
        P5 =  M2_YT501_MaxEU
        P6 =  M2_YT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT501_CtWdSet1
        P1  = M2_YT501_CtWdSet2
        P2  = M2_YT501_CtWd
        P3  = M2_YT501_CtWdSend
        P4  = M2_YT501_MinRaw
        P5  = M2_YT501_MaxRaw
        P6  = M2_YT501_MinEU
        P7  = M2_YT501_MaxEU
        P8  = M2_YT501_ScaleWidth
        P9  = M2_YT501_Raw
        P10 = M2_YT501_Vl
        P11 = M2_YT501_Percent
        P12 = M2_ChDtTrg216
        P13 = M2_YT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT602_CtWdSet1
        P1 =  M2_PT602_CtWdSet2
        P2 =  M2_PT602_MinRaw
        P3 =  M2_PT602_MaxRaw
        P4 =  M2_PT602_MinEU
        P5 =  M2_PT602_MaxEU
        P6 =  M2_PT602_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT602_CtWdSet1
        P1  = M2_PT602_CtWdSet2
        P2  = M2_PT602_CtWd
        P3  = M2_PT602_CtWdSend
        P4  = M2_PT602_MinRaw
        P5  = M2_PT602_MaxRaw
        P6  = M2_PT602_MinEU
        P7  = M2_PT602_MaxEU
        P8  = M2_PT602_ScaleWidth
        P9  = M2_PT602_Raw
        P10 = M2_PT602_Vl
        P11 = M2_PT602_Percent
        P12 = M2_ChDtTrg216
        P13 = M2_PT602_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM036_CtWdSet1
        P1 =  M2_RM036_CtWdSet2
        P2 =  M2_RM036_MinRaw
        P3 =  M2_RM036_MaxRaw
        P4 =  M2_RM036_MinEU
        P5 =  M2_RM036_MaxEU
        P6 =  M2_RM036_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM036_CtWdSet1
        P1  = M2_RM036_CtWdSet2
        P2  = M2_RM036_CtWd
        P3  = M2_RM036_CtWdSend
        P4  = M2_RM036_MinRaw
        P5  = M2_RM036_MaxRaw
        P6  = M2_RM036_MinEU
        P7  = M2_RM036_MaxEU
        P8  = M2_RM036_ScaleWidth
        P9  = M2_RM036_Raw
        P10 = M2_RM036_Vl
        P11 = M2_RM036_Percent
        P12 = M2_ChDtTrg217
        P13 = M2_RM036_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM037_CtWdSet1
        P1 =  M2_RM037_CtWdSet2
        P2 =  M2_RM037_MinRaw
        P3 =  M2_RM037_MaxRaw
        P4 =  M2_RM037_MinEU
        P5 =  M2_RM037_MaxEU
        P6 =  M2_RM037_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM037_CtWdSet1
        P1  = M2_RM037_CtWdSet2
        P2  = M2_RM037_CtWd
        P3  = M2_RM037_CtWdSend
        P4  = M2_RM037_MinRaw
        P5  = M2_RM037_MaxRaw
        P6  = M2_RM037_MinEU
        P7  = M2_RM037_MaxEU
        P8  = M2_RM037_ScaleWidth
        P9  = M2_RM037_Raw
        P10 = M2_RM037_Vl
        P11 = M2_RM037_Percent
        P12 = M2_ChDtTrg217
        P13 = M2_RM037_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM038_CtWdSet1
        P1 =  M2_RM038_CtWdSet2
        P2 =  M2_RM038_MinRaw
        P3 =  M2_RM038_MaxRaw
        P4 =  M2_RM038_MinEU
        P5 =  M2_RM038_MaxEU
        P6 =  M2_RM038_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM038_CtWdSet1
        P1  = M2_RM038_CtWdSet2
        P2  = M2_RM038_CtWd
        P3  = M2_RM038_CtWdSend
        P4  = M2_RM038_MinRaw
        P5  = M2_RM038_MaxRaw
        P6  = M2_RM038_MinEU
        P7  = M2_RM038_MaxEU
        P8  = M2_RM038_ScaleWidth
        P9  = M2_RM038_Raw
        P10 = M2_RM038_Vl
        P11 = M2_RM038_Percent
        P12 = M2_ChDtTrg217
        P13 = M2_RM038_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM039_CtWdSet1
        P1 =  M2_RM039_CtWdSet2
        P2 =  M2_RM039_MinRaw
        P3 =  M2_RM039_MaxRaw
        P4 =  M2_RM039_MinEU
        P5 =  M2_RM039_MaxEU
        P6 =  M2_RM039_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM039_CtWdSet1
        P1  = M2_RM039_CtWdSet2
        P2  = M2_RM039_CtWd
        P3  = M2_RM039_CtWdSend
        P4  = M2_RM039_MinRaw
        P5  = M2_RM039_MaxRaw
        P6  = M2_RM039_MinEU
        P7  = M2_RM039_MaxEU
        P8  = M2_RM039_ScaleWidth
        P9  = M2_RM039_Raw
        P10 = M2_RM039_Vl
        P11 = M2_RM039_Percent
        P12 = M2_ChDtTrg217
        P13 = M2_RM039_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT960_CtWdSet1
        P1 =  M2_CT960_CtWdSet2
        P2 =  M2_CT960_MinRaw
        P3 =  M2_CT960_MaxRaw
        P4 =  M2_CT960_MinEU
        P5 =  M2_CT960_MaxEU
        P6 =  M2_CT960_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT960_CtWdSet1
        P1  = M2_CT960_CtWdSet2
        P2  = M2_CT960_CtWd
        P3  = M2_CT960_CtWdSend
        P4  = M2_CT960_MinRaw
        P5  = M2_CT960_MaxRaw
        P6  = M2_CT960_MinEU
        P7  = M2_CT960_MaxEU
        P8  = M2_CT960_ScaleWidth
        P9  = M2_CT960_Raw
        P10 = M2_CT960_Vl
        P11 = M2_CT960_Percent
        P12 = M2_ChDtTrg218
        P13 = M2_CT960_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT960_CtWdSet1
        P1 =  M2_BT960_CtWdSet2
        P2 =  M2_BT960_MinRaw
        P3 =  M2_BT960_MaxRaw
        P4 =  M2_BT960_MinEU
        P5 =  M2_BT960_MaxEU
        P6 =  M2_BT960_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT960_CtWdSet1
        P1  = M2_BT960_CtWdSet2
        P2  = M2_BT960_CtWd
        P3  = M2_BT960_CtWdSend
        P4  = M2_BT960_MinRaw
        P5  = M2_BT960_MaxRaw
        P6  = M2_BT960_MinEU
        P7  = M2_BT960_MaxEU
        P8  = M2_BT960_ScaleWidth
        P9  = M2_BT960_Raw
        P10 = M2_BT960_Vl
        P11 = M2_BT960_Percent
        P12 = M2_ChDtTrg218
        P13 = M2_BT960_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT961_CtWdSet1
        P1 =  M2_CT961_CtWdSet2
        P2 =  M2_CT961_MinRaw
        P3 =  M2_CT961_MaxRaw
        P4 =  M2_CT961_MinEU
        P5 =  M2_CT961_MaxEU
        P6 =  M2_CT961_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT961_CtWdSet1
        P1  = M2_CT961_CtWdSet2
        P2  = M2_CT961_CtWd
        P3  = M2_CT961_CtWdSend
        P4  = M2_CT961_MinRaw
        P5  = M2_CT961_MaxRaw
        P6  = M2_CT961_MinEU
        P7  = M2_CT961_MaxEU
        P8  = M2_CT961_ScaleWidth
        P9  = M2_CT961_Raw
        P10 = M2_CT961_Vl
        P11 = M2_CT961_Percent
        P12 = M2_ChDtTrg218
        P13 = M2_CT961_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT961_CtWdSet1
        P1 =  M2_BT961_CtWdSet2
        P2 =  M2_BT961_MinRaw
        P3 =  M2_BT961_MaxRaw
        P4 =  M2_BT961_MinEU
        P5 =  M2_BT961_MaxEU
        P6 =  M2_BT961_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT961_CtWdSet1
        P1  = M2_BT961_CtWdSet2
        P2  = M2_BT961_CtWd
        P3  = M2_BT961_CtWdSend
        P4  = M2_BT961_MinRaw
        P5  = M2_BT961_MaxRaw
        P6  = M2_BT961_MinEU
        P7  = M2_BT961_MaxEU
        P8  = M2_BT961_ScaleWidth
        P9  = M2_BT961_Raw
        P10 = M2_BT961_Vl
        P11 = M2_BT961_Percent
        P12 = M2_ChDtTrg218
        P13 = M2_BT961_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT962_CtWdSet1
        P1 =  M2_CT962_CtWdSet2
        P2 =  M2_CT962_MinRaw
        P3 =  M2_CT962_MaxRaw
        P4 =  M2_CT962_MinEU
        P5 =  M2_CT962_MaxEU
        P6 =  M2_CT962_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT962_CtWdSet1
        P1  = M2_CT962_CtWdSet2
        P2  = M2_CT962_CtWd
        P3  = M2_CT962_CtWdSend
        P4  = M2_CT962_MinRaw
        P5  = M2_CT962_MaxRaw
        P6  = M2_CT962_MinEU
        P7  = M2_CT962_MaxEU
        P8  = M2_CT962_ScaleWidth
        P9  = M2_CT962_Raw
        P10 = M2_CT962_Vl
        P11 = M2_CT962_Percent
        P12 = M2_ChDtTrg219
        P13 = M2_CT962_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT962_CtWdSet1
        P1 =  M2_BT962_CtWdSet2
        P2 =  M2_BT962_MinRaw
        P3 =  M2_BT962_MaxRaw
        P4 =  M2_BT962_MinEU
        P5 =  M2_BT962_MaxEU
        P6 =  M2_BT962_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT962_CtWdSet1
        P1  = M2_BT962_CtWdSet2
        P2  = M2_BT962_CtWd
        P3  = M2_BT962_CtWdSend
        P4  = M2_BT962_MinRaw
        P5  = M2_BT962_MaxRaw
        P6  = M2_BT962_MinEU
        P7  = M2_BT962_MaxEU
        P8  = M2_BT962_ScaleWidth
        P9  = M2_BT962_Raw
        P10 = M2_BT962_Vl
        P11 = M2_BT962_Percent
        P12 = M2_ChDtTrg219
        P13 = M2_BT962_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT963_CtWdSet1
        P1 =  M2_CT963_CtWdSet2
        P2 =  M2_CT963_MinRaw
        P3 =  M2_CT963_MaxRaw
        P4 =  M2_CT963_MinEU
        P5 =  M2_CT963_MaxEU
        P6 =  M2_CT963_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT963_CtWdSet1
        P1  = M2_CT963_CtWdSet2
        P2  = M2_CT963_CtWd
        P3  = M2_CT963_CtWdSend
        P4  = M2_CT963_MinRaw
        P5  = M2_CT963_MaxRaw
        P6  = M2_CT963_MinEU
        P7  = M2_CT963_MaxEU
        P8  = M2_CT963_ScaleWidth
        P9  = M2_CT963_Raw
        P10 = M2_CT963_Vl
        P11 = M2_CT963_Percent
        P12 = M2_ChDtTrg219
        P13 = M2_CT963_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT963_CtWdSet1
        P1 =  M2_BT963_CtWdSet2
        P2 =  M2_BT963_MinRaw
        P3 =  M2_BT963_MaxRaw
        P4 =  M2_BT963_MinEU
        P5 =  M2_BT963_MaxEU
        P6 =  M2_BT963_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT963_CtWdSet1
        P1  = M2_BT963_CtWdSet2
        P2  = M2_BT963_CtWd
        P3  = M2_BT963_CtWdSend
        P4  = M2_BT963_MinRaw
        P5  = M2_BT963_MaxRaw
        P6  = M2_BT963_MinEU
        P7  = M2_BT963_MaxEU
        P8  = M2_BT963_ScaleWidth
        P9  = M2_BT963_Raw
        P10 = M2_BT963_Vl
        P11 = M2_BT963_Percent
        P12 = M2_ChDtTrg219
        P13 = M2_BT963_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT964_CtWdSet1
        P1 =  M2_CT964_CtWdSet2
        P2 =  M2_CT964_MinRaw
        P3 =  M2_CT964_MaxRaw
        P4 =  M2_CT964_MinEU
        P5 =  M2_CT964_MaxEU
        P6 =  M2_CT964_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT964_CtWdSet1
        P1  = M2_CT964_CtWdSet2
        P2  = M2_CT964_CtWd
        P3  = M2_CT964_CtWdSend
        P4  = M2_CT964_MinRaw
        P5  = M2_CT964_MaxRaw
        P6  = M2_CT964_MinEU
        P7  = M2_CT964_MaxEU
        P8  = M2_CT964_ScaleWidth
        P9  = M2_CT964_Raw
        P10 = M2_CT964_Vl
        P11 = M2_CT964_Percent
        P12 = M2_ChDtTrg220
        P13 = M2_CT964_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT964_CtWdSet1
        P1 =  M2_BT964_CtWdSet2
        P2 =  M2_BT964_MinRaw
        P3 =  M2_BT964_MaxRaw
        P4 =  M2_BT964_MinEU
        P5 =  M2_BT964_MaxEU
        P6 =  M2_BT964_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT964_CtWdSet1
        P1  = M2_BT964_CtWdSet2
        P2  = M2_BT964_CtWd
        P3  = M2_BT964_CtWdSend
        P4  = M2_BT964_MinRaw
        P5  = M2_BT964_MaxRaw
        P6  = M2_BT964_MinEU
        P7  = M2_BT964_MaxEU
        P8  = M2_BT964_ScaleWidth
        P9  = M2_BT964_Raw
        P10 = M2_BT964_Vl
        P11 = M2_BT964_Percent
        P12 = M2_ChDtTrg220
        P13 = M2_BT964_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM050_CtWdSet1
        P1 =  M2_RM050_CtWdSet2
        P2 =  M2_RM050_MinRaw
        P3 =  M2_RM050_MaxRaw
        P4 =  M2_RM050_MinEU
        P5 =  M2_RM050_MaxEU
        P6 =  M2_RM050_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM050_CtWdSet1
        P1  = M2_RM050_CtWdSet2
        P2  = M2_RM050_CtWd
        P3  = M2_RM050_CtWdSend
        P4  = M2_RM050_MinRaw
        P5  = M2_RM050_MaxRaw
        P6  = M2_RM050_MinEU
        P7  = M2_RM050_MaxEU
        P8  = M2_RM050_ScaleWidth
        P9  = M2_RM050_Raw
        P10 = M2_RM050_Vl
        P11 = M2_RM050_Percent
        P12 = M2_ChDtTrg220
        P13 = M2_RM050_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM051_CtWdSet1
        P1 =  M2_RM051_CtWdSet2
        P2 =  M2_RM051_MinRaw
        P3 =  M2_RM051_MaxRaw
        P4 =  M2_RM051_MinEU
        P5 =  M2_RM051_MaxEU
        P6 =  M2_RM051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM051_CtWdSet1
        P1  = M2_RM051_CtWdSet2
        P2  = M2_RM051_CtWd
        P3  = M2_RM051_CtWdSend
        P4  = M2_RM051_MinRaw
        P5  = M2_RM051_MaxRaw
        P6  = M2_RM051_MinEU
        P7  = M2_RM051_MaxEU
        P8  = M2_RM051_ScaleWidth
        P9  = M2_RM051_Raw
        P10 = M2_RM051_Vl
        P11 = M2_RM051_Percent
        P12 = M2_ChDtTrg220
        P13 = M2_RM051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM052_CtWdSet1
        P1 =  M2_RM052_CtWdSet2
        P2 =  M2_RM052_MinRaw
        P3 =  M2_RM052_MaxRaw
        P4 =  M2_RM052_MinEU
        P5 =  M2_RM052_MaxEU
        P6 =  M2_RM052_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM052_CtWdSet1
        P1  = M2_RM052_CtWdSet2
        P2  = M2_RM052_CtWd
        P3  = M2_RM052_CtWdSend
        P4  = M2_RM052_MinRaw
        P5  = M2_RM052_MaxRaw
        P6  = M2_RM052_MinEU
        P7  = M2_RM052_MaxEU
        P8  = M2_RM052_ScaleWidth
        P9  = M2_RM052_Raw
        P10 = M2_RM052_Vl
        P11 = M2_RM052_Percent
        P12 = M2_ChDtTrg221
        P13 = M2_RM052_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM053_CtWdSet1
        P1 =  M2_RM053_CtWdSet2
        P2 =  M2_RM053_MinRaw
        P3 =  M2_RM053_MaxRaw
        P4 =  M2_RM053_MinEU
        P5 =  M2_RM053_MaxEU
        P6 =  M2_RM053_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM053_CtWdSet1
        P1  = M2_RM053_CtWdSet2
        P2  = M2_RM053_CtWd
        P3  = M2_RM053_CtWdSend
        P4  = M2_RM053_MinRaw
        P5  = M2_RM053_MaxRaw
        P6  = M2_RM053_MinEU
        P7  = M2_RM053_MaxEU
        P8  = M2_RM053_ScaleWidth
        P9  = M2_RM053_Raw
        P10 = M2_RM053_Vl
        P11 = M2_RM053_Percent
        P12 = M2_ChDtTrg221
        P13 = M2_RM053_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM054_CtWdSet1
        P1 =  M2_RM054_CtWdSet2
        P2 =  M2_RM054_MinRaw
        P3 =  M2_RM054_MaxRaw
        P4 =  M2_RM054_MinEU
        P5 =  M2_RM054_MaxEU
        P6 =  M2_RM054_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM054_CtWdSet1
        P1  = M2_RM054_CtWdSet2
        P2  = M2_RM054_CtWd
        P3  = M2_RM054_CtWdSend
        P4  = M2_RM054_MinRaw
        P5  = M2_RM054_MaxRaw
        P6  = M2_RM054_MinEU
        P7  = M2_RM054_MaxEU
        P8  = M2_RM054_ScaleWidth
        P9  = M2_RM054_Raw
        P10 = M2_RM054_Vl
        P11 = M2_RM054_Percent
        P12 = M2_ChDtTrg221
        P13 = M2_RM054_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM055_CtWdSet1
        P1 =  M2_RM055_CtWdSet2
        P2 =  M2_RM055_MinRaw
        P3 =  M2_RM055_MaxRaw
        P4 =  M2_RM055_MinEU
        P5 =  M2_RM055_MaxEU
        P6 =  M2_RM055_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM055_CtWdSet1
        P1  = M2_RM055_CtWdSet2
        P2  = M2_RM055_CtWd
        P3  = M2_RM055_CtWdSend
        P4  = M2_RM055_MinRaw
        P5  = M2_RM055_MaxRaw
        P6  = M2_RM055_MinEU
        P7  = M2_RM055_MaxEU
        P8  = M2_RM055_ScaleWidth
        P9  = M2_RM055_Raw
        P10 = M2_RM055_Vl
        P11 = M2_RM055_Percent
        P12 = M2_ChDtTrg221
        P13 = M2_RM055_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT701_CtWdSet1
        P1 =  M2_TT701_CtWdSet2
        P2 =  M2_TT701_MinRaw
        P3 =  M2_TT701_MaxRaw
        P4 =  M2_TT701_MinEU
        P5 =  M2_TT701_MaxEU
        P6 =  M2_TT701_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT701_CtWdSet1
        P1  = M2_TT701_CtWdSet2
        P2  = M2_TT701_CtWd
        P3  = M2_TT701_CtWdSend
        P4  = M2_TT701_MinRaw
        P5  = M2_TT701_MaxRaw
        P6  = M2_TT701_MinEU
        P7  = M2_TT701_MaxEU
        P8  = M2_TT701_ScaleWidth
        P9  = M2_TT701_Raw
        P10 = M2_TT701_Vl
        P11 = M2_TT701_Percent
        P12 = M2_ChDtTrg222
        P13 = M2_TT701_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT751_CtWdSet1
        P1 =  M2_TT751_CtWdSet2
        P2 =  M2_TT751_MinRaw
        P3 =  M2_TT751_MaxRaw
        P4 =  M2_TT751_MinEU
        P5 =  M2_TT751_MaxEU
        P6 =  M2_TT751_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT751_CtWdSet1
        P1  = M2_TT751_CtWdSet2
        P2  = M2_TT751_CtWd
        P3  = M2_TT751_CtWdSend
        P4  = M2_TT751_MinRaw
        P5  = M2_TT751_MaxRaw
        P6  = M2_TT751_MinEU
        P7  = M2_TT751_MaxEU
        P8  = M2_TT751_ScaleWidth
        P9  = M2_TT751_Raw
        P10 = M2_TT751_Vl
        P11 = M2_TT751_Percent
        P12 = M2_ChDtTrg222
        P13 = M2_TT751_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT921_CtWdSet1
        P1 =  M2_TT921_CtWdSet2
        P2 =  M2_TT921_MinRaw
        P3 =  M2_TT921_MaxRaw
        P4 =  M2_TT921_MinEU
        P5 =  M2_TT921_MaxEU
        P6 =  M2_TT921_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT921_CtWdSet1
        P1  = M2_TT921_CtWdSet2
        P2  = M2_TT921_CtWd
        P3  = M2_TT921_CtWdSend
        P4  = M2_TT921_MinRaw
        P5  = M2_TT921_MaxRaw
        P6  = M2_TT921_MinEU
        P7  = M2_TT921_MaxEU
        P8  = M2_TT921_ScaleWidth
        P9  = M2_TT921_Raw
        P10 = M2_TT921_Vl
        P11 = M2_TT921_Percent
        P12 = M2_ChDtTrg222
        P13 = M2_TT921_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT922_CtWdSet1
        P1 =  M2_TT922_CtWdSet2
        P2 =  M2_TT922_MinRaw
        P3 =  M2_TT922_MaxRaw
        P4 =  M2_TT922_MinEU
        P5 =  M2_TT922_MaxEU
        P6 =  M2_TT922_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT922_CtWdSet1
        P1  = M2_TT922_CtWdSet2
        P2  = M2_TT922_CtWd
        P3  = M2_TT922_CtWdSend
        P4  = M2_TT922_MinRaw
        P5  = M2_TT922_MaxRaw
        P6  = M2_TT922_MinEU
        P7  = M2_TT922_MaxEU
        P8  = M2_TT922_ScaleWidth
        P9  = M2_TT922_Raw
        P10 = M2_TT922_Vl
        P11 = M2_TT922_Percent
        P12 = M2_ChDtTrg222
        P13 = M2_TT922_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT926_CtWdSet1
        P1 =  M2_TT926_CtWdSet2
        P2 =  M2_TT926_MinRaw
        P3 =  M2_TT926_MaxRaw
        P4 =  M2_TT926_MinEU
        P5 =  M2_TT926_MaxEU
        P6 =  M2_TT926_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT926_CtWdSet1
        P1  = M2_TT926_CtWdSet2
        P2  = M2_TT926_CtWd
        P3  = M2_TT926_CtWdSend
        P4  = M2_TT926_MinRaw
        P5  = M2_TT926_MaxRaw
        P6  = M2_TT926_MinEU
        P7  = M2_TT926_MaxEU
        P8  = M2_TT926_ScaleWidth
        P9  = M2_TT926_Raw
        P10 = M2_TT926_Vl
        P11 = M2_TT926_Percent
        P12 = M2_ChDtTrg223
        P13 = M2_TT926_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM061_CtWdSet1
        P1 =  M2_RM061_CtWdSet2
        P2 =  M2_RM061_MinRaw
        P3 =  M2_RM061_MaxRaw
        P4 =  M2_RM061_MinEU
        P5 =  M2_RM061_MaxEU
        P6 =  M2_RM061_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM061_CtWdSet1
        P1  = M2_RM061_CtWdSet2
        P2  = M2_RM061_CtWd
        P3  = M2_RM061_CtWdSend
        P4  = M2_RM061_MinRaw
        P5  = M2_RM061_MaxRaw
        P6  = M2_RM061_MinEU
        P7  = M2_RM061_MaxEU
        P8  = M2_RM061_ScaleWidth
        P9  = M2_RM061_Raw
        P10 = M2_RM061_Vl
        P11 = M2_RM061_Percent
        P12 = M2_ChDtTrg223
        P13 = M2_RM061_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM062_CtWdSet1
        P1 =  M2_RM062_CtWdSet2
        P2 =  M2_RM062_MinRaw
        P3 =  M2_RM062_MaxRaw
        P4 =  M2_RM062_MinEU
        P5 =  M2_RM062_MaxEU
        P6 =  M2_RM062_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM062_CtWdSet1
        P1  = M2_RM062_CtWdSet2
        P2  = M2_RM062_CtWd
        P3  = M2_RM062_CtWdSend
        P4  = M2_RM062_MinRaw
        P5  = M2_RM062_MaxRaw
        P6  = M2_RM062_MinEU
        P7  = M2_RM062_MaxEU
        P8  = M2_RM062_ScaleWidth
        P9  = M2_RM062_Raw
        P10 = M2_RM062_Vl
        P11 = M2_RM062_Percent
        P12 = M2_ChDtTrg223
        P13 = M2_RM062_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM063_CtWdSet1
        P1 =  M2_RM063_CtWdSet2
        P2 =  M2_RM063_MinRaw
        P3 =  M2_RM063_MaxRaw
        P4 =  M2_RM063_MinEU
        P5 =  M2_RM063_MaxEU
        P6 =  M2_RM063_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM063_CtWdSet1
        P1  = M2_RM063_CtWdSet2
        P2  = M2_RM063_CtWd
        P3  = M2_RM063_CtWdSend
        P4  = M2_RM063_MinRaw
        P5  = M2_RM063_MaxRaw
        P6  = M2_RM063_MinEU
        P7  = M2_RM063_MaxEU
        P8  = M2_RM063_ScaleWidth
        P9  = M2_RM063_Raw
        P10 = M2_RM063_Vl
        P11 = M2_RM063_Percent
        P12 = M2_ChDtTrg223
        P13 = M2_RM063_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT701_CtWdSet1
        P1 =  M2_YT701_CtWdSet2
        P2 =  M2_YT701_MinRaw
        P3 =  M2_YT701_MaxRaw
        P4 =  M2_YT701_MinEU
        P5 =  M2_YT701_MaxEU
        P6 =  M2_YT701_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT701_CtWdSet1
        P1  = M2_YT701_CtWdSet2
        P2  = M2_YT701_CtWd
        P3  = M2_YT701_CtWdSend
        P4  = M2_YT701_MinRaw
        P5  = M2_YT701_MaxRaw
        P6  = M2_YT701_MinEU
        P7  = M2_YT701_MaxEU
        P8  = M2_YT701_ScaleWidth
        P9  = M2_YT701_Raw
        P10 = M2_YT701_Vl
        P11 = M2_YT701_Percent
        P12 = M2_ChDtTrg224
        P13 = M2_YT701_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT751_CtWdSet1
        P1 =  M2_YT751_CtWdSet2
        P2 =  M2_YT751_MinRaw
        P3 =  M2_YT751_MaxRaw
        P4 =  M2_YT751_MinEU
        P5 =  M2_YT751_MaxEU
        P6 =  M2_YT751_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT751_CtWdSet1
        P1  = M2_YT751_CtWdSet2
        P2  = M2_YT751_CtWd
        P3  = M2_YT751_CtWdSend
        P4  = M2_YT751_MinRaw
        P5  = M2_YT751_MaxRaw
        P6  = M2_YT751_MinEU
        P7  = M2_YT751_MaxEU
        P8  = M2_YT751_ScaleWidth
        P9  = M2_YT751_Raw
        P10 = M2_YT751_Vl
        P11 = M2_YT751_Percent
        P12 = M2_ChDtTrg224
        P13 = M2_YT751_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT752_CtWdSet1
        P1 =  M2_YT752_CtWdSet2
        P2 =  M2_YT752_MinRaw
        P3 =  M2_YT752_MaxRaw
        P4 =  M2_YT752_MinEU
        P5 =  M2_YT752_MaxEU
        P6 =  M2_YT752_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT752_CtWdSet1
        P1  = M2_YT752_CtWdSet2
        P2  = M2_YT752_CtWd
        P3  = M2_YT752_CtWdSend
        P4  = M2_YT752_MinRaw
        P5  = M2_YT752_MaxRaw
        P6  = M2_YT752_MinEU
        P7  = M2_YT752_MaxEU
        P8  = M2_YT752_ScaleWidth
        P9  = M2_YT752_Raw
        P10 = M2_YT752_Vl
        P11 = M2_YT752_Percent
        P12 = M2_ChDtTrg224
        P13 = M2_YT752_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT753_CtWdSet1
        P1 =  M2_YT753_CtWdSet2
        P2 =  M2_YT753_MinRaw
        P3 =  M2_YT753_MaxRaw
        P4 =  M2_YT753_MinEU
        P5 =  M2_YT753_MaxEU
        P6 =  M2_YT753_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT753_CtWdSet1
        P1  = M2_YT753_CtWdSet2
        P2  = M2_YT753_CtWd
        P3  = M2_YT753_CtWdSend
        P4  = M2_YT753_MinRaw
        P5  = M2_YT753_MaxRaw
        P6  = M2_YT753_MinEU
        P7  = M2_YT753_MaxEU
        P8  = M2_YT753_ScaleWidth
        P9  = M2_YT753_Raw
        P10 = M2_YT753_Vl
        P11 = M2_YT753_Percent
        P12 = M2_ChDtTrg224
        P13 = M2_YT753_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM068_CtWdSet1
        P1 =  M2_RM068_CtWdSet2
        P2 =  M2_RM068_MinRaw
        P3 =  M2_RM068_MaxRaw
        P4 =  M2_RM068_MinEU
        P5 =  M2_RM068_MaxEU
        P6 =  M2_RM068_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM068_CtWdSet1
        P1  = M2_RM068_CtWdSet2
        P2  = M2_RM068_CtWd
        P3  = M2_RM068_CtWdSend
        P4  = M2_RM068_MinRaw
        P5  = M2_RM068_MaxRaw
        P6  = M2_RM068_MinEU
        P7  = M2_RM068_MaxEU
        P8  = M2_RM068_ScaleWidth
        P9  = M2_RM068_Raw
        P10 = M2_RM068_Vl
        P11 = M2_RM068_Percent
        P12 = M2_ChDtTrg225
        P13 = M2_RM068_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM069_CtWdSet1
        P1 =  M2_RM069_CtWdSet2
        P2 =  M2_RM069_MinRaw
        P3 =  M2_RM069_MaxRaw
        P4 =  M2_RM069_MinEU
        P5 =  M2_RM069_MaxEU
        P6 =  M2_RM069_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM069_CtWdSet1
        P1  = M2_RM069_CtWdSet2
        P2  = M2_RM069_CtWd
        P3  = M2_RM069_CtWdSend
        P4  = M2_RM069_MinRaw
        P5  = M2_RM069_MaxRaw
        P6  = M2_RM069_MinEU
        P7  = M2_RM069_MaxEU
        P8  = M2_RM069_ScaleWidth
        P9  = M2_RM069_Raw
        P10 = M2_RM069_Vl
        P11 = M2_RM069_Percent
        P12 = M2_ChDtTrg225
        P13 = M2_RM069_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM070_CtWdSet1
        P1 =  M2_RM070_CtWdSet2
        P2 =  M2_RM070_MinRaw
        P3 =  M2_RM070_MaxRaw
        P4 =  M2_RM070_MinEU
        P5 =  M2_RM070_MaxEU
        P6 =  M2_RM070_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM070_CtWdSet1
        P1  = M2_RM070_CtWdSet2
        P2  = M2_RM070_CtWd
        P3  = M2_RM070_CtWdSend
        P4  = M2_RM070_MinRaw
        P5  = M2_RM070_MaxRaw
        P6  = M2_RM070_MinEU
        P7  = M2_RM070_MaxEU
        P8  = M2_RM070_ScaleWidth
        P9  = M2_RM070_Raw
        P10 = M2_RM070_Vl
        P11 = M2_RM070_Percent
        P12 = M2_ChDtTrg225
        P13 = M2_RM070_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM071_CtWdSet1
        P1 =  M2_RM071_CtWdSet2
        P2 =  M2_RM071_MinRaw
        P3 =  M2_RM071_MaxRaw
        P4 =  M2_RM071_MinEU
        P5 =  M2_RM071_MaxEU
        P6 =  M2_RM071_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM071_CtWdSet1
        P1  = M2_RM071_CtWdSet2
        P2  = M2_RM071_CtWd
        P3  = M2_RM071_CtWdSend
        P4  = M2_RM071_MinRaw
        P5  = M2_RM071_MaxRaw
        P6  = M2_RM071_MinEU
        P7  = M2_RM071_MaxEU
        P8  = M2_RM071_ScaleWidth
        P9  = M2_RM071_Raw
        P10 = M2_RM071_Vl
        P11 = M2_RM071_Percent
        P12 = M2_ChDtTrg225
        P13 = M2_RM071_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT657_CtWdSet1
        P1 =  M2_PT657_CtWdSet2
        P2 =  M2_PT657_MinRaw
        P3 =  M2_PT657_MaxRaw
        P4 =  M2_PT657_MinEU
        P5 =  M2_PT657_MaxEU
        P6 =  M2_PT657_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT657_CtWdSet1
        P1  = M2_PT657_CtWdSet2
        P2  = M2_PT657_CtWd
        P3  = M2_PT657_CtWdSend
        P4  = M2_PT657_MinRaw
        P5  = M2_PT657_MaxRaw
        P6  = M2_PT657_MinEU
        P7  = M2_PT657_MaxEU
        P8  = M2_PT657_ScaleWidth
        P9  = M2_PT657_Raw
        P10 = M2_PT657_Vl
        P11 = M2_PT657_Percent
        P12 = M2_ChDtTrg226
        P13 = M2_PT657_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT657_CtWdSet1
        P1 =  M2_TT657_CtWdSet2
        P2 =  M2_TT657_MinRaw
        P3 =  M2_TT657_MaxRaw
        P4 =  M2_TT657_MinEU
        P5 =  M2_TT657_MaxEU
        P6 =  M2_TT657_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT657_CtWdSet1
        P1  = M2_TT657_CtWdSet2
        P2  = M2_TT657_CtWd
        P3  = M2_TT657_CtWdSend
        P4  = M2_TT657_MinRaw
        P5  = M2_TT657_MaxRaw
        P6  = M2_TT657_MinEU
        P7  = M2_TT657_MaxEU
        P8  = M2_TT657_ScaleWidth
        P9  = M2_TT657_Raw
        P10 = M2_TT657_Vl
        P11 = M2_TT657_Percent
        P12 = M2_ChDtTrg226
        P13 = M2_TT657_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT658_CtWdSet1
        P1 =  M2_TT658_CtWdSet2
        P2 =  M2_TT658_MinRaw
        P3 =  M2_TT658_MaxRaw
        P4 =  M2_TT658_MinEU
        P5 =  M2_TT658_MaxEU
        P6 =  M2_TT658_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT658_CtWdSet1
        P1  = M2_TT658_CtWdSet2
        P2  = M2_TT658_CtWd
        P3  = M2_TT658_CtWdSend
        P4  = M2_TT658_MinRaw
        P5  = M2_TT658_MaxRaw
        P6  = M2_TT658_MinEU
        P7  = M2_TT658_MaxEU
        P8  = M2_TT658_ScaleWidth
        P9  = M2_TT658_Raw
        P10 = M2_TT658_Vl
        P11 = M2_TT658_Percent
        P12 = M2_ChDtTrg226
        P13 = M2_TT658_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_TT901_CtWdSet1
        P1 =  M2_TT901_CtWdSet2
        P2 =  M2_TT901_MinRaw
        P3 =  M2_TT901_MaxRaw
        P4 =  M2_TT901_MinEU
        P5 =  M2_TT901_MaxEU
        P6 =  M2_TT901_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_TT901_CtWdSet1
        P1  = M2_TT901_CtWdSet2
        P2  = M2_TT901_CtWd
        P3  = M2_TT901_CtWdSend
        P4  = M2_TT901_MinRaw
        P5  = M2_TT901_MaxRaw
        P6  = M2_TT901_MinEU
        P7  = M2_TT901_MaxEU
        P8  = M2_TT901_ScaleWidth
        P9  = M2_TT901_Raw
        P10 = M2_TT901_Vl
        P11 = M2_TT901_Percent
        P12 = M2_ChDtTrg226
        P13 = M2_TT901_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT611_CtWdSet1
        P1 =  M2_PT611_CtWdSet2
        P2 =  M2_PT611_MinRaw
        P3 =  M2_PT611_MaxRaw
        P4 =  M2_PT611_MinEU
        P5 =  M2_PT611_MaxEU
        P6 =  M2_PT611_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT611_CtWdSet1
        P1  = M2_PT611_CtWdSet2
        P2  = M2_PT611_CtWd
        P3  = M2_PT611_CtWdSend
        P4  = M2_PT611_MinRaw
        P5  = M2_PT611_MaxRaw
        P6  = M2_PT611_MinEU
        P7  = M2_PT611_MaxEU
        P8  = M2_PT611_ScaleWidth
        P9  = M2_PT611_Raw
        P10 = M2_PT611_Vl
        P11 = M2_PT611_Percent
        P12 = M2_ChDtTrg227
        P13 = M2_PT611_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PT612_CtWdSet1
        P1 =  M2_PT612_CtWdSet2
        P2 =  M2_PT612_MinRaw
        P3 =  M2_PT612_MaxRaw
        P4 =  M2_PT612_MinEU
        P5 =  M2_PT612_MaxEU
        P6 =  M2_PT612_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PT612_CtWdSet1
        P1  = M2_PT612_CtWdSet2
        P2  = M2_PT612_CtWd
        P3  = M2_PT612_CtWdSend
        P4  = M2_PT612_MinRaw
        P5  = M2_PT612_MaxRaw
        P6  = M2_PT612_MinEU
        P7  = M2_PT612_MaxEU
        P8  = M2_PT612_ScaleWidth
        P9  = M2_PT612_Raw
        P10 = M2_PT612_Vl
        P11 = M2_PT612_Percent
        P12 = M2_ChDtTrg227
        P13 = M2_PT612_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM078_CtWdSet1
        P1 =  M2_RM078_CtWdSet2
        P2 =  M2_RM078_MinRaw
        P3 =  M2_RM078_MaxRaw
        P4 =  M2_RM078_MinEU
        P5 =  M2_RM078_MaxEU
        P6 =  M2_RM078_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM078_CtWdSet1
        P1  = M2_RM078_CtWdSet2
        P2  = M2_RM078_CtWd
        P3  = M2_RM078_CtWdSend
        P4  = M2_RM078_MinRaw
        P5  = M2_RM078_MaxRaw
        P6  = M2_RM078_MinEU
        P7  = M2_RM078_MaxEU
        P8  = M2_RM078_ScaleWidth
        P9  = M2_RM078_Raw
        P10 = M2_RM078_Vl
        P11 = M2_RM078_Percent
        P12 = M2_ChDtTrg227
        P13 = M2_RM078_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM079_CtWdSet1
        P1 =  M2_RM079_CtWdSet2
        P2 =  M2_RM079_MinRaw
        P3 =  M2_RM079_MaxRaw
        P4 =  M2_RM079_MinEU
        P5 =  M2_RM079_MaxEU
        P6 =  M2_RM079_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM079_CtWdSet1
        P1  = M2_RM079_CtWdSet2
        P2  = M2_RM079_CtWd
        P3  = M2_RM079_CtWdSend
        P4  = M2_RM079_MinRaw
        P5  = M2_RM079_MaxRaw
        P6  = M2_RM079_MinEU
        P7  = M2_RM079_MaxEU
        P8  = M2_RM079_ScaleWidth
        P9  = M2_RM079_Raw
        P10 = M2_RM079_Vl
        P11 = M2_RM079_Percent
        P12 = M2_ChDtTrg227
        P13 = M2_RM079_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT653_CtWdSet1
        P1 =  M2_YT653_CtWdSet2
        P2 =  M2_YT653_MinRaw
        P3 =  M2_YT653_MaxRaw
        P4 =  M2_YT653_MinEU
        P5 =  M2_YT653_MaxEU
        P6 =  M2_YT653_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT653_CtWdSet1
        P1  = M2_YT653_CtWdSet2
        P2  = M2_YT653_CtWd
        P3  = M2_YT653_CtWdSend
        P4  = M2_YT653_MinRaw
        P5  = M2_YT653_MaxRaw
        P6  = M2_YT653_MinEU
        P7  = M2_YT653_MaxEU
        P8  = M2_YT653_ScaleWidth
        P9  = M2_YT653_Raw
        P10 = M2_YT653_Vl
        P11 = M2_YT653_Percent
        P12 = M2_ChDtTrg228
        P13 = M2_YT653_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT655_CtWdSet1
        P1 =  M2_YT655_CtWdSet2
        P2 =  M2_YT655_MinRaw
        P3 =  M2_YT655_MaxRaw
        P4 =  M2_YT655_MinEU
        P5 =  M2_YT655_MaxEU
        P6 =  M2_YT655_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT655_CtWdSet1
        P1  = M2_YT655_CtWdSet2
        P2  = M2_YT655_CtWd
        P3  = M2_YT655_CtWdSend
        P4  = M2_YT655_MinRaw
        P5  = M2_YT655_MaxRaw
        P6  = M2_YT655_MinEU
        P7  = M2_YT655_MaxEU
        P8  = M2_YT655_ScaleWidth
        P9  = M2_YT655_Raw
        P10 = M2_YT655_Vl
        P11 = M2_YT655_Percent
        P12 = M2_ChDtTrg228
        P13 = M2_YT655_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT657_CtWdSet1
        P1 =  M2_YT657_CtWdSet2
        P2 =  M2_YT657_MinRaw
        P3 =  M2_YT657_MaxRaw
        P4 =  M2_YT657_MinEU
        P5 =  M2_YT657_MaxEU
        P6 =  M2_YT657_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT657_CtWdSet1
        P1  = M2_YT657_CtWdSet2
        P2  = M2_YT657_CtWd
        P3  = M2_YT657_CtWdSend
        P4  = M2_YT657_MinRaw
        P5  = M2_YT657_MaxRaw
        P6  = M2_YT657_MinEU
        P7  = M2_YT657_MaxEU
        P8  = M2_YT657_ScaleWidth
        P9  = M2_YT657_Raw
        P10 = M2_YT657_Vl
        P11 = M2_YT657_Percent
        P12 = M2_ChDtTrg228
        P13 = M2_YT657_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_YT659_CtWdSet1
        P1 =  M2_YT659_CtWdSet2
        P2 =  M2_YT659_MinRaw
        P3 =  M2_YT659_MaxRaw
        P4 =  M2_YT659_MinEU
        P5 =  M2_YT659_MaxEU
        P6 =  M2_YT659_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_YT659_CtWdSet1
        P1  = M2_YT659_CtWdSet2
        P2  = M2_YT659_CtWd
        P3  = M2_YT659_CtWdSend
        P4  = M2_YT659_MinRaw
        P5  = M2_YT659_MaxRaw
        P6  = M2_YT659_MinEU
        P7  = M2_YT659_MaxEU
        P8  = M2_YT659_ScaleWidth
        P9  = M2_YT659_Raw
        P10 = M2_YT659_Vl
        P11 = M2_YT659_Percent
        P12 = M2_ChDtTrg228
        P13 = M2_YT659_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM084_CtWdSet1
        P1 =  M2_RM084_CtWdSet2
        P2 =  M2_RM084_MinRaw
        P3 =  M2_RM084_MaxRaw
        P4 =  M2_RM084_MinEU
        P5 =  M2_RM084_MaxEU
        P6 =  M2_RM084_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM084_CtWdSet1
        P1  = M2_RM084_CtWdSet2
        P2  = M2_RM084_CtWd
        P3  = M2_RM084_CtWdSend
        P4  = M2_RM084_MinRaw
        P5  = M2_RM084_MaxRaw
        P6  = M2_RM084_MinEU
        P7  = M2_RM084_MaxEU
        P8  = M2_RM084_ScaleWidth
        P9  = M2_RM084_Raw
        P10 = M2_RM084_Vl
        P11 = M2_RM084_Percent
        P12 = M2_ChDtTrg229
        P13 = M2_RM084_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM085_CtWdSet1
        P1 =  M2_RM085_CtWdSet2
        P2 =  M2_RM085_MinRaw
        P3 =  M2_RM085_MaxRaw
        P4 =  M2_RM085_MinEU
        P5 =  M2_RM085_MaxEU
        P6 =  M2_RM085_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM085_CtWdSet1
        P1  = M2_RM085_CtWdSet2
        P2  = M2_RM085_CtWd
        P3  = M2_RM085_CtWdSend
        P4  = M2_RM085_MinRaw
        P5  = M2_RM085_MaxRaw
        P6  = M2_RM085_MinEU
        P7  = M2_RM085_MaxEU
        P8  = M2_RM085_ScaleWidth
        P9  = M2_RM085_Raw
        P10 = M2_RM085_Vl
        P11 = M2_RM085_Percent
        P12 = M2_ChDtTrg229
        P13 = M2_RM085_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM086_CtWdSet1
        P1 =  M2_RM086_CtWdSet2
        P2 =  M2_RM086_MinRaw
        P3 =  M2_RM086_MaxRaw
        P4 =  M2_RM086_MinEU
        P5 =  M2_RM086_MaxEU
        P6 =  M2_RM086_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM086_CtWdSet1
        P1  = M2_RM086_CtWdSet2
        P2  = M2_RM086_CtWd
        P3  = M2_RM086_CtWdSend
        P4  = M2_RM086_MinRaw
        P5  = M2_RM086_MaxRaw
        P6  = M2_RM086_MinEU
        P7  = M2_RM086_MaxEU
        P8  = M2_RM086_ScaleWidth
        P9  = M2_RM086_Raw
        P10 = M2_RM086_Vl
        P11 = M2_RM086_Percent
        P12 = M2_ChDtTrg229
        P13 = M2_RM086_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM087_CtWdSet1
        P1 =  M2_RM087_CtWdSet2
        P2 =  M2_RM087_MinRaw
        P3 =  M2_RM087_MaxRaw
        P4 =  M2_RM087_MinEU
        P5 =  M2_RM087_MaxEU
        P6 =  M2_RM087_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM087_CtWdSet1
        P1  = M2_RM087_CtWdSet2
        P2  = M2_RM087_CtWd
        P3  = M2_RM087_CtWdSend
        P4  = M2_RM087_MinRaw
        P5  = M2_RM087_MaxRaw
        P6  = M2_RM087_MinEU
        P7  = M2_RM087_MaxEU
        P8  = M2_RM087_ScaleWidth
        P9  = M2_RM087_Raw
        P10 = M2_RM087_Vl
        P11 = M2_RM087_Percent
        P12 = M2_ChDtTrg229
        P13 = M2_RM087_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM088_CtWdSet1
        P1 =  M2_RM088_CtWdSet2
        P2 =  M2_RM088_MinRaw
        P3 =  M2_RM088_MaxRaw
        P4 =  M2_RM088_MinEU
        P5 =  M2_RM088_MaxEU
        P6 =  M2_RM088_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM088_CtWdSet1
        P1  = M2_RM088_CtWdSet2
        P2  = M2_RM088_CtWd
        P3  = M2_RM088_CtWdSend
        P4  = M2_RM088_MinRaw
        P5  = M2_RM088_MaxRaw
        P6  = M2_RM088_MinEU
        P7  = M2_RM088_MaxEU
        P8  = M2_RM088_ScaleWidth
        P9  = M2_RM088_Raw
        P10 = M2_RM088_Vl
        P11 = M2_RM088_Percent
        P12 = M2_ChDtTrg230
        P13 = M2_RM088_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM089_CtWdSet1
        P1 =  M2_RM089_CtWdSet2
        P2 =  M2_RM089_MinRaw
        P3 =  M2_RM089_MaxRaw
        P4 =  M2_RM089_MinEU
        P5 =  M2_RM089_MaxEU
        P6 =  M2_RM089_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM089_CtWdSet1
        P1  = M2_RM089_CtWdSet2
        P2  = M2_RM089_CtWd
        P3  = M2_RM089_CtWdSend
        P4  = M2_RM089_MinRaw
        P5  = M2_RM089_MaxRaw
        P6  = M2_RM089_MinEU
        P7  = M2_RM089_MaxEU
        P8  = M2_RM089_ScaleWidth
        P9  = M2_RM089_Raw
        P10 = M2_RM089_Vl
        P11 = M2_RM089_Percent
        P12 = M2_ChDtTrg230
        P13 = M2_RM089_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM090_CtWdSet1
        P1 =  M2_RM090_CtWdSet2
        P2 =  M2_RM090_MinRaw
        P3 =  M2_RM090_MaxRaw
        P4 =  M2_RM090_MinEU
        P5 =  M2_RM090_MaxEU
        P6 =  M2_RM090_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM090_CtWdSet1
        P1  = M2_RM090_CtWdSet2
        P2  = M2_RM090_CtWd
        P3  = M2_RM090_CtWdSend
        P4  = M2_RM090_MinRaw
        P5  = M2_RM090_MaxRaw
        P6  = M2_RM090_MinEU
        P7  = M2_RM090_MaxEU
        P8  = M2_RM090_ScaleWidth
        P9  = M2_RM090_Raw
        P10 = M2_RM090_Vl
        P11 = M2_RM090_Percent
        P12 = M2_ChDtTrg230
        P13 = M2_RM090_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM091_CtWdSet1
        P1 =  M2_RM091_CtWdSet2
        P2 =  M2_RM091_MinRaw
        P3 =  M2_RM091_MaxRaw
        P4 =  M2_RM091_MinEU
        P5 =  M2_RM091_MaxEU
        P6 =  M2_RM091_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM091_CtWdSet1
        P1  = M2_RM091_CtWdSet2
        P2  = M2_RM091_CtWd
        P3  = M2_RM091_CtWdSend
        P4  = M2_RM091_MinRaw
        P5  = M2_RM091_MaxRaw
        P6  = M2_RM091_MinEU
        P7  = M2_RM091_MaxEU
        P8  = M2_RM091_ScaleWidth
        P9  = M2_RM091_Raw
        P10 = M2_RM091_Vl
        P11 = M2_RM091_Percent
        P12 = M2_ChDtTrg230
        P13 = M2_RM091_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM092_CtWdSet1
        P1 =  M2_RM092_CtWdSet2
        P2 =  M2_RM092_MinRaw
        P3 =  M2_RM092_MaxRaw
        P4 =  M2_RM092_MinEU
        P5 =  M2_RM092_MaxEU
        P6 =  M2_RM092_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM092_CtWdSet1
        P1  = M2_RM092_CtWdSet2
        P2  = M2_RM092_CtWd
        P3  = M2_RM092_CtWdSend
        P4  = M2_RM092_MinRaw
        P5  = M2_RM092_MaxRaw
        P6  = M2_RM092_MinEU
        P7  = M2_RM092_MaxEU
        P8  = M2_RM092_ScaleWidth
        P9  = M2_RM092_Raw
        P10 = M2_RM092_Vl
        P11 = M2_RM092_Percent
        P12 = M2_ChDtTrg231
        P13 = M2_RM092_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM093_CtWdSet1
        P1 =  M2_RM093_CtWdSet2
        P2 =  M2_RM093_MinRaw
        P3 =  M2_RM093_MaxRaw
        P4 =  M2_RM093_MinEU
        P5 =  M2_RM093_MaxEU
        P6 =  M2_RM093_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM093_CtWdSet1
        P1  = M2_RM093_CtWdSet2
        P2  = M2_RM093_CtWd
        P3  = M2_RM093_CtWdSend
        P4  = M2_RM093_MinRaw
        P5  = M2_RM093_MaxRaw
        P6  = M2_RM093_MinEU
        P7  = M2_RM093_MaxEU
        P8  = M2_RM093_ScaleWidth
        P9  = M2_RM093_Raw
        P10 = M2_RM093_Vl
        P11 = M2_RM093_Percent
        P12 = M2_ChDtTrg231
        P13 = M2_RM093_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM094_CtWdSet1
        P1 =  M2_RM094_CtWdSet2
        P2 =  M2_RM094_MinRaw
        P3 =  M2_RM094_MaxRaw
        P4 =  M2_RM094_MinEU
        P5 =  M2_RM094_MaxEU
        P6 =  M2_RM094_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM094_CtWdSet1
        P1  = M2_RM094_CtWdSet2
        P2  = M2_RM094_CtWd
        P3  = M2_RM094_CtWdSend
        P4  = M2_RM094_MinRaw
        P5  = M2_RM094_MaxRaw
        P6  = M2_RM094_MinEU
        P7  = M2_RM094_MaxEU
        P8  = M2_RM094_ScaleWidth
        P9  = M2_RM094_Raw
        P10 = M2_RM094_Vl
        P11 = M2_RM094_Percent
        P12 = M2_ChDtTrg231
        P13 = M2_RM094_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM095_CtWdSet1
        P1 =  M2_RM095_CtWdSet2
        P2 =  M2_RM095_MinRaw
        P3 =  M2_RM095_MaxRaw
        P4 =  M2_RM095_MinEU
        P5 =  M2_RM095_MaxEU
        P6 =  M2_RM095_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM095_CtWdSet1
        P1  = M2_RM095_CtWdSet2
        P2  = M2_RM095_CtWd
        P3  = M2_RM095_CtWdSend
        P4  = M2_RM095_MinRaw
        P5  = M2_RM095_MaxRaw
        P6  = M2_RM095_MinEU
        P7  = M2_RM095_MaxEU
        P8  = M2_RM095_ScaleWidth
        P9  = M2_RM095_Raw
        P10 = M2_RM095_Vl
        P11 = M2_RM095_Percent
        P12 = M2_ChDtTrg231
        P13 = M2_RM095_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM096_CtWdSet1
        P1 =  M2_RM096_CtWdSet2
        P2 =  M2_RM096_MinRaw
        P3 =  M2_RM096_MaxRaw
        P4 =  M2_RM096_MinEU
        P5 =  M2_RM096_MaxEU
        P6 =  M2_RM096_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM096_CtWdSet1
        P1  = M2_RM096_CtWdSet2
        P2  = M2_RM096_CtWd
        P3  = M2_RM096_CtWdSend
        P4  = M2_RM096_MinRaw
        P5  = M2_RM096_MaxRaw
        P6  = M2_RM096_MinEU
        P7  = M2_RM096_MaxEU
        P8  = M2_RM096_ScaleWidth
        P9  = M2_RM096_Raw
        P10 = M2_RM096_Vl
        P11 = M2_RM096_Percent
        P12 = M2_ChDtTrg232
        P13 = M2_RM096_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM097_CtWdSet1
        P1 =  M2_RM097_CtWdSet2
        P2 =  M2_RM097_MinRaw
        P3 =  M2_RM097_MaxRaw
        P4 =  M2_RM097_MinEU
        P5 =  M2_RM097_MaxEU
        P6 =  M2_RM097_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM097_CtWdSet1
        P1  = M2_RM097_CtWdSet2
        P2  = M2_RM097_CtWd
        P3  = M2_RM097_CtWdSend
        P4  = M2_RM097_MinRaw
        P5  = M2_RM097_MaxRaw
        P6  = M2_RM097_MinEU
        P7  = M2_RM097_MaxEU
        P8  = M2_RM097_ScaleWidth
        P9  = M2_RM097_Raw
        P10 = M2_RM097_Vl
        P11 = M2_RM097_Percent
        P12 = M2_ChDtTrg232
        P13 = M2_RM097_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM098_CtWdSet1
        P1 =  M2_RM098_CtWdSet2
        P2 =  M2_RM098_MinRaw
        P3 =  M2_RM098_MaxRaw
        P4 =  M2_RM098_MinEU
        P5 =  M2_RM098_MaxEU
        P6 =  M2_RM098_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM098_CtWdSet1
        P1  = M2_RM098_CtWdSet2
        P2  = M2_RM098_CtWd
        P3  = M2_RM098_CtWdSend
        P4  = M2_RM098_MinRaw
        P5  = M2_RM098_MaxRaw
        P6  = M2_RM098_MinEU
        P7  = M2_RM098_MaxEU
        P8  = M2_RM098_ScaleWidth
        P9  = M2_RM098_Raw
        P10 = M2_RM098_Vl
        P11 = M2_RM098_Percent
        P12 = M2_ChDtTrg232
        P13 = M2_RM098_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM099_CtWdSet1
        P1 =  M2_RM099_CtWdSet2
        P2 =  M2_RM099_MinRaw
        P3 =  M2_RM099_MaxRaw
        P4 =  M2_RM099_MinEU
        P5 =  M2_RM099_MaxEU
        P6 =  M2_RM099_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM099_CtWdSet1
        P1  = M2_RM099_CtWdSet2
        P2  = M2_RM099_CtWd
        P3  = M2_RM099_CtWdSend
        P4  = M2_RM099_MinRaw
        P5  = M2_RM099_MaxRaw
        P6  = M2_RM099_MinEU
        P7  = M2_RM099_MaxEU
        P8  = M2_RM099_ScaleWidth
        P9  = M2_RM099_Raw
        P10 = M2_RM099_Vl
        P11 = M2_RM099_Percent
        P12 = M2_ChDtTrg232
        P13 = M2_RM099_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM100_CtWdSet1
        P1 =  M2_RM100_CtWdSet2
        P2 =  M2_RM100_MinRaw
        P3 =  M2_RM100_MaxRaw
        P4 =  M2_RM100_MinEU
        P5 =  M2_RM100_MaxEU
        P6 =  M2_RM100_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM100_CtWdSet1
        P1  = M2_RM100_CtWdSet2
        P2  = M2_RM100_CtWd
        P3  = M2_RM100_CtWdSend
        P4  = M2_RM100_MinRaw
        P5  = M2_RM100_MaxRaw
        P6  = M2_RM100_MinEU
        P7  = M2_RM100_MaxEU
        P8  = M2_RM100_ScaleWidth
        P9  = M2_RM100_Raw
        P10 = M2_RM100_Vl
        P11 = M2_RM100_Percent
        P12 = M2_ChDtTrg233
        P13 = M2_RM100_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM101_CtWdSet1
        P1 =  M2_RM101_CtWdSet2
        P2 =  M2_RM101_MinRaw
        P3 =  M2_RM101_MaxRaw
        P4 =  M2_RM101_MinEU
        P5 =  M2_RM101_MaxEU
        P6 =  M2_RM101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM101_CtWdSet1
        P1  = M2_RM101_CtWdSet2
        P2  = M2_RM101_CtWd
        P3  = M2_RM101_CtWdSend
        P4  = M2_RM101_MinRaw
        P5  = M2_RM101_MaxRaw
        P6  = M2_RM101_MinEU
        P7  = M2_RM101_MaxEU
        P8  = M2_RM101_ScaleWidth
        P9  = M2_RM101_Raw
        P10 = M2_RM101_Vl
        P11 = M2_RM101_Percent
        P12 = M2_ChDtTrg233
        P13 = M2_RM101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM102_CtWdSet1
        P1 =  M2_RM102_CtWdSet2
        P2 =  M2_RM102_MinRaw
        P3 =  M2_RM102_MaxRaw
        P4 =  M2_RM102_MinEU
        P5 =  M2_RM102_MaxEU
        P6 =  M2_RM102_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM102_CtWdSet1
        P1  = M2_RM102_CtWdSet2
        P2  = M2_RM102_CtWd
        P3  = M2_RM102_CtWdSend
        P4  = M2_RM102_MinRaw
        P5  = M2_RM102_MaxRaw
        P6  = M2_RM102_MinEU
        P7  = M2_RM102_MaxEU
        P8  = M2_RM102_ScaleWidth
        P9  = M2_RM102_Raw
        P10 = M2_RM102_Vl
        P11 = M2_RM102_Percent
        P12 = M2_ChDtTrg233
        P13 = M2_RM102_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM103_CtWdSet1
        P1 =  M2_RM103_CtWdSet2
        P2 =  M2_RM103_MinRaw
        P3 =  M2_RM103_MaxRaw
        P4 =  M2_RM103_MinEU
        P5 =  M2_RM103_MaxEU
        P6 =  M2_RM103_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM103_CtWdSet1
        P1  = M2_RM103_CtWdSet2
        P2  = M2_RM103_CtWd
        P3  = M2_RM103_CtWdSend
        P4  = M2_RM103_MinRaw
        P5  = M2_RM103_MaxRaw
        P6  = M2_RM103_MinEU
        P7  = M2_RM103_MaxEU
        P8  = M2_RM103_ScaleWidth
        P9  = M2_RM103_Raw
        P10 = M2_RM103_Vl
        P11 = M2_RM103_Percent
        P12 = M2_ChDtTrg233
        P13 = M2_RM103_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT921_CtWdSet1
        P1 =  M2_GT921_CtWdSet2
        P2 =  M2_GT921_MinRaw
        P3 =  M2_GT921_MaxRaw
        P4 =  M2_GT921_MinEU
        P5 =  M2_GT921_MaxEU
        P6 =  M2_GT921_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT921_CtWdSet1
        P1  = M2_GT921_CtWdSet2
        P2  = M2_GT921_CtWd
        P3  = M2_GT921_CtWdSend
        P4  = M2_GT921_MinRaw
        P5  = M2_GT921_MaxRaw
        P6  = M2_GT921_MinEU
        P7  = M2_GT921_MaxEU
        P8  = M2_GT921_ScaleWidth
        P9  = M2_GT921_Raw
        P10 = M2_GT921_Vl
        P11 = M2_GT921_Percent
        P12 = M2_ChDtTrg234
        P13 = M2_GT921_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT922_CtWdSet1
        P1 =  M2_GT922_CtWdSet2
        P2 =  M2_GT922_MinRaw
        P3 =  M2_GT922_MaxRaw
        P4 =  M2_GT922_MinEU
        P5 =  M2_GT922_MaxEU
        P6 =  M2_GT922_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT922_CtWdSet1
        P1  = M2_GT922_CtWdSet2
        P2  = M2_GT922_CtWd
        P3  = M2_GT922_CtWdSend
        P4  = M2_GT922_MinRaw
        P5  = M2_GT922_MaxRaw
        P6  = M2_GT922_MinEU
        P7  = M2_GT922_MaxEU
        P8  = M2_GT922_ScaleWidth
        P9  = M2_GT922_Raw
        P10 = M2_GT922_Vl
        P11 = M2_GT922_Percent
        P12 = M2_ChDtTrg234
        P13 = M2_GT922_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT923_CtWdSet1
        P1 =  M2_GT923_CtWdSet2
        P2 =  M2_GT923_MinRaw
        P3 =  M2_GT923_MaxRaw
        P4 =  M2_GT923_MinEU
        P5 =  M2_GT923_MaxEU
        P6 =  M2_GT923_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT923_CtWdSet1
        P1  = M2_GT923_CtWdSet2
        P2  = M2_GT923_CtWd
        P3  = M2_GT923_CtWdSend
        P4  = M2_GT923_MinRaw
        P5  = M2_GT923_MaxRaw
        P6  = M2_GT923_MinEU
        P7  = M2_GT923_MaxEU
        P8  = M2_GT923_ScaleWidth
        P9  = M2_GT923_Raw
        P10 = M2_GT923_Vl
        P11 = M2_GT923_Percent
        P12 = M2_ChDtTrg234
        P13 = M2_GT923_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT924_CtWdSet1
        P1 =  M2_GT924_CtWdSet2
        P2 =  M2_GT924_MinRaw
        P3 =  M2_GT924_MaxRaw
        P4 =  M2_GT924_MinEU
        P5 =  M2_GT924_MaxEU
        P6 =  M2_GT924_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT924_CtWdSet1
        P1  = M2_GT924_CtWdSet2
        P2  = M2_GT924_CtWd
        P3  = M2_GT924_CtWdSend
        P4  = M2_GT924_MinRaw
        P5  = M2_GT924_MaxRaw
        P6  = M2_GT924_MinEU
        P7  = M2_GT924_MaxEU
        P8  = M2_GT924_ScaleWidth
        P9  = M2_GT924_Raw
        P10 = M2_GT924_Vl
        P11 = M2_GT924_Percent
        P12 = M2_ChDtTrg234
        P13 = M2_GT924_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT925_CtWdSet1
        P1 =  M2_GT925_CtWdSet2
        P2 =  M2_GT925_MinRaw
        P3 =  M2_GT925_MaxRaw
        P4 =  M2_GT925_MinEU
        P5 =  M2_GT925_MaxEU
        P6 =  M2_GT925_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT925_CtWdSet1
        P1  = M2_GT925_CtWdSet2
        P2  = M2_GT925_CtWd
        P3  = M2_GT925_CtWdSend
        P4  = M2_GT925_MinRaw
        P5  = M2_GT925_MaxRaw
        P6  = M2_GT925_MinEU
        P7  = M2_GT925_MaxEU
        P8  = M2_GT925_ScaleWidth
        P9  = M2_GT925_Raw
        P10 = M2_GT925_Vl
        P11 = M2_GT925_Percent
        P12 = M2_ChDtTrg235
        P13 = M2_GT925_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT926_CtWdSet1
        P1 =  M2_GT926_CtWdSet2
        P2 =  M2_GT926_MinRaw
        P3 =  M2_GT926_MaxRaw
        P4 =  M2_GT926_MinEU
        P5 =  M2_GT926_MaxEU
        P6 =  M2_GT926_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT926_CtWdSet1
        P1  = M2_GT926_CtWdSet2
        P2  = M2_GT926_CtWd
        P3  = M2_GT926_CtWdSend
        P4  = M2_GT926_MinRaw
        P5  = M2_GT926_MaxRaw
        P6  = M2_GT926_MinEU
        P7  = M2_GT926_MaxEU
        P8  = M2_GT926_ScaleWidth
        P9  = M2_GT926_Raw
        P10 = M2_GT926_Vl
        P11 = M2_GT926_Percent
        P12 = M2_ChDtTrg235
        P13 = M2_GT926_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT927_CtWdSet1
        P1 =  M2_GT927_CtWdSet2
        P2 =  M2_GT927_MinRaw
        P3 =  M2_GT927_MaxRaw
        P4 =  M2_GT927_MinEU
        P5 =  M2_GT927_MaxEU
        P6 =  M2_GT927_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT927_CtWdSet1
        P1  = M2_GT927_CtWdSet2
        P2  = M2_GT927_CtWd
        P3  = M2_GT927_CtWdSend
        P4  = M2_GT927_MinRaw
        P5  = M2_GT927_MaxRaw
        P6  = M2_GT927_MinEU
        P7  = M2_GT927_MaxEU
        P8  = M2_GT927_ScaleWidth
        P9  = M2_GT927_Raw
        P10 = M2_GT927_Vl
        P11 = M2_GT927_Percent
        P12 = M2_ChDtTrg235
        P13 = M2_GT927_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT928_CtWdSet1
        P1 =  M2_GT928_CtWdSet2
        P2 =  M2_GT928_MinRaw
        P3 =  M2_GT928_MaxRaw
        P4 =  M2_GT928_MinEU
        P5 =  M2_GT928_MaxEU
        P6 =  M2_GT928_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT928_CtWdSet1
        P1  = M2_GT928_CtWdSet2
        P2  = M2_GT928_CtWd
        P3  = M2_GT928_CtWdSend
        P4  = M2_GT928_MinRaw
        P5  = M2_GT928_MaxRaw
        P6  = M2_GT928_MinEU
        P7  = M2_GT928_MaxEU
        P8  = M2_GT928_ScaleWidth
        P9  = M2_GT928_Raw
        P10 = M2_GT928_Vl
        P11 = M2_GT928_Percent
        P12 = M2_ChDtTrg235
        P13 = M2_GT928_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT929_CtWdSet1
        P1 =  M2_GT929_CtWdSet2
        P2 =  M2_GT929_MinRaw
        P3 =  M2_GT929_MaxRaw
        P4 =  M2_GT929_MinEU
        P5 =  M2_GT929_MaxEU
        P6 =  M2_GT929_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT929_CtWdSet1
        P1  = M2_GT929_CtWdSet2
        P2  = M2_GT929_CtWd
        P3  = M2_GT929_CtWdSend
        P4  = M2_GT929_MinRaw
        P5  = M2_GT929_MaxRaw
        P6  = M2_GT929_MinEU
        P7  = M2_GT929_MaxEU
        P8  = M2_GT929_ScaleWidth
        P9  = M2_GT929_Raw
        P10 = M2_GT929_Vl
        P11 = M2_GT929_Percent
        P12 = M2_ChDtTrg236
        P13 = M2_GT929_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT930_CtWdSet1
        P1 =  M2_GT930_CtWdSet2
        P2 =  M2_GT930_MinRaw
        P3 =  M2_GT930_MaxRaw
        P4 =  M2_GT930_MinEU
        P5 =  M2_GT930_MaxEU
        P6 =  M2_GT930_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT930_CtWdSet1
        P1  = M2_GT930_CtWdSet2
        P2  = M2_GT930_CtWd
        P3  = M2_GT930_CtWdSend
        P4  = M2_GT930_MinRaw
        P5  = M2_GT930_MaxRaw
        P6  = M2_GT930_MinEU
        P7  = M2_GT930_MaxEU
        P8  = M2_GT930_ScaleWidth
        P9  = M2_GT930_Raw
        P10 = M2_GT930_Vl
        P11 = M2_GT930_Percent
        P12 = M2_ChDtTrg236
        P13 = M2_GT930_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT931_CtWdSet1
        P1 =  M2_GT931_CtWdSet2
        P2 =  M2_GT931_MinRaw
        P3 =  M2_GT931_MaxRaw
        P4 =  M2_GT931_MinEU
        P5 =  M2_GT931_MaxEU
        P6 =  M2_GT931_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT931_CtWdSet1
        P1  = M2_GT931_CtWdSet2
        P2  = M2_GT931_CtWd
        P3  = M2_GT931_CtWdSend
        P4  = M2_GT931_MinRaw
        P5  = M2_GT931_MaxRaw
        P6  = M2_GT931_MinEU
        P7  = M2_GT931_MaxEU
        P8  = M2_GT931_ScaleWidth
        P9  = M2_GT931_Raw
        P10 = M2_GT931_Vl
        P11 = M2_GT931_Percent
        P12 = M2_ChDtTrg236
        P13 = M2_GT931_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_GT932_CtWdSet1
        P1 =  M2_GT932_CtWdSet2
        P2 =  M2_GT932_MinRaw
        P3 =  M2_GT932_MaxRaw
        P4 =  M2_GT932_MinEU
        P5 =  M2_GT932_MaxEU
        P6 =  M2_GT932_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_GT932_CtWdSet1
        P1  = M2_GT932_CtWdSet2
        P2  = M2_GT932_CtWd
        P3  = M2_GT932_CtWdSend
        P4  = M2_GT932_MinRaw
        P5  = M2_GT932_MaxRaw
        P6  = M2_GT932_MinEU
        P7  = M2_GT932_MaxEU
        P8  = M2_GT932_ScaleWidth
        P9  = M2_GT932_Raw
        P10 = M2_GT932_Vl
        P11 = M2_GT932_Percent
        P12 = M2_ChDtTrg236
        P13 = M2_GT932_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM116_CtWdSet1
        P1 =  M2_RM116_CtWdSet2
        P2 =  M2_RM116_MinRaw
        P3 =  M2_RM116_MaxRaw
        P4 =  M2_RM116_MinEU
        P5 =  M2_RM116_MaxEU
        P6 =  M2_RM116_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM116_CtWdSet1
        P1  = M2_RM116_CtWdSet2
        P2  = M2_RM116_CtWd
        P3  = M2_RM116_CtWdSend
        P4  = M2_RM116_MinRaw
        P5  = M2_RM116_MaxRaw
        P6  = M2_RM116_MinEU
        P7  = M2_RM116_MaxEU
        P8  = M2_RM116_ScaleWidth
        P9  = M2_RM116_Raw
        P10 = M2_RM116_Vl
        P11 = M2_RM116_Percent
        P12 = M2_ChDtTrg237
        P13 = M2_RM116_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM117_CtWdSet1
        P1 =  M2_RM117_CtWdSet2
        P2 =  M2_RM117_MinRaw
        P3 =  M2_RM117_MaxRaw
        P4 =  M2_RM117_MinEU
        P5 =  M2_RM117_MaxEU
        P6 =  M2_RM117_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM117_CtWdSet1
        P1  = M2_RM117_CtWdSet2
        P2  = M2_RM117_CtWd
        P3  = M2_RM117_CtWdSend
        P4  = M2_RM117_MinRaw
        P5  = M2_RM117_MaxRaw
        P6  = M2_RM117_MinEU
        P7  = M2_RM117_MaxEU
        P8  = M2_RM117_ScaleWidth
        P9  = M2_RM117_Raw
        P10 = M2_RM117_Vl
        P11 = M2_RM117_Percent
        P12 = M2_ChDtTrg237
        P13 = M2_RM117_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM118_CtWdSet1
        P1 =  M2_RM118_CtWdSet2
        P2 =  M2_RM118_MinRaw
        P3 =  M2_RM118_MaxRaw
        P4 =  M2_RM118_MinEU
        P5 =  M2_RM118_MaxEU
        P6 =  M2_RM118_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM118_CtWdSet1
        P1  = M2_RM118_CtWdSet2
        P2  = M2_RM118_CtWd
        P3  = M2_RM118_CtWdSend
        P4  = M2_RM118_MinRaw
        P5  = M2_RM118_MaxRaw
        P6  = M2_RM118_MinEU
        P7  = M2_RM118_MaxEU
        P8  = M2_RM118_ScaleWidth
        P9  = M2_RM118_Raw
        P10 = M2_RM118_Vl
        P11 = M2_RM118_Percent
        P12 = M2_ChDtTrg237
        P13 = M2_RM118_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM119_CtWdSet1
        P1 =  M2_RM119_CtWdSet2
        P2 =  M2_RM119_MinRaw
        P3 =  M2_RM119_MaxRaw
        P4 =  M2_RM119_MinEU
        P5 =  M2_RM119_MaxEU
        P6 =  M2_RM119_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM119_CtWdSet1
        P1  = M2_RM119_CtWdSet2
        P2  = M2_RM119_CtWd
        P3  = M2_RM119_CtWdSend
        P4  = M2_RM119_MinRaw
        P5  = M2_RM119_MaxRaw
        P6  = M2_RM119_MinEU
        P7  = M2_RM119_MaxEU
        P8  = M2_RM119_ScaleWidth
        P9  = M2_RM119_Raw
        P10 = M2_RM119_Vl
        P11 = M2_RM119_Percent
        P12 = M2_ChDtTrg237
        P13 = M2_RM119_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT101_CtWdSet1
        P1 =  M2_CT101_CtWdSet2
        P2 =  M2_CT101_MinRaw
        P3 =  M2_CT101_MaxRaw
        P4 =  M2_CT101_MinEU
        P5 =  M2_CT101_MaxEU
        P6 =  M2_CT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT101_CtWdSet1
        P1  = M2_CT101_CtWdSet2
        P2  = M2_CT101_CtWd
        P3  = M2_CT101_CtWdSend
        P4  = M2_CT101_MinRaw
        P5  = M2_CT101_MaxRaw
        P6  = M2_CT101_MinEU
        P7  = M2_CT101_MaxEU
        P8  = M2_CT101_ScaleWidth
        P9  = M2_CT101_Raw
        P10 = M2_CT101_Vl
        P11 = M2_CT101_Percent
        P12 = M2_ChDtTrg238
        P13 = M2_CT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT201_CtWdSet1
        P1 =  M2_CT201_CtWdSet2
        P2 =  M2_CT201_MinRaw
        P3 =  M2_CT201_MaxRaw
        P4 =  M2_CT201_MinEU
        P5 =  M2_CT201_MaxEU
        P6 =  M2_CT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT201_CtWdSet1
        P1  = M2_CT201_CtWdSet2
        P2  = M2_CT201_CtWd
        P3  = M2_CT201_CtWdSend
        P4  = M2_CT201_MinRaw
        P5  = M2_CT201_MaxRaw
        P6  = M2_CT201_MinEU
        P7  = M2_CT201_MaxEU
        P8  = M2_CT201_ScaleWidth
        P9  = M2_CT201_Raw
        P10 = M2_CT201_Vl
        P11 = M2_CT201_Percent
        P12 = M2_ChDtTrg238
        P13 = M2_CT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT301_CtWdSet1
        P1 =  M2_CT301_CtWdSet2
        P2 =  M2_CT301_MinRaw
        P3 =  M2_CT301_MaxRaw
        P4 =  M2_CT301_MinEU
        P5 =  M2_CT301_MaxEU
        P6 =  M2_CT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT301_CtWdSet1
        P1  = M2_CT301_CtWdSet2
        P2  = M2_CT301_CtWd
        P3  = M2_CT301_CtWdSend
        P4  = M2_CT301_MinRaw
        P5  = M2_CT301_MaxRaw
        P6  = M2_CT301_MinEU
        P7  = M2_CT301_MaxEU
        P8  = M2_CT301_ScaleWidth
        P9  = M2_CT301_Raw
        P10 = M2_CT301_Vl
        P11 = M2_CT301_Percent
        P12 = M2_ChDtTrg238
        P13 = M2_CT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT401_CtWdSet1
        P1 =  M2_CT401_CtWdSet2
        P2 =  M2_CT401_MinRaw
        P3 =  M2_CT401_MaxRaw
        P4 =  M2_CT401_MinEU
        P5 =  M2_CT401_MaxEU
        P6 =  M2_CT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT401_CtWdSet1
        P1  = M2_CT401_CtWdSet2
        P2  = M2_CT401_CtWd
        P3  = M2_CT401_CtWdSend
        P4  = M2_CT401_MinRaw
        P5  = M2_CT401_MaxRaw
        P6  = M2_CT401_MinEU
        P7  = M2_CT401_MaxEU
        P8  = M2_CT401_ScaleWidth
        P9  = M2_CT401_Raw
        P10 = M2_CT401_Vl
        P11 = M2_CT401_Percent
        P12 = M2_ChDtTrg238
        P13 = M2_CT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT501_CtWdSet1
        P1 =  M2_CT501_CtWdSet2
        P2 =  M2_CT501_MinRaw
        P3 =  M2_CT501_MaxRaw
        P4 =  M2_CT501_MinEU
        P5 =  M2_CT501_MaxEU
        P6 =  M2_CT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT501_CtWdSet1
        P1  = M2_CT501_CtWdSet2
        P2  = M2_CT501_CtWd
        P3  = M2_CT501_CtWdSend
        P4  = M2_CT501_MinRaw
        P5  = M2_CT501_MaxRaw
        P6  = M2_CT501_MinEU
        P7  = M2_CT501_MaxEU
        P8  = M2_CT501_ScaleWidth
        P9  = M2_CT501_Raw
        P10 = M2_CT501_Vl
        P11 = M2_CT501_Percent
        P12 = M2_ChDtTrg239
        P13 = M2_CT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT101_CtWdSet1
        P1 =  M2_BT101_CtWdSet2
        P2 =  M2_BT101_MinRaw
        P3 =  M2_BT101_MaxRaw
        P4 =  M2_BT101_MinEU
        P5 =  M2_BT101_MaxEU
        P6 =  M2_BT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT101_CtWdSet1
        P1  = M2_BT101_CtWdSet2
        P2  = M2_BT101_CtWd
        P3  = M2_BT101_CtWdSend
        P4  = M2_BT101_MinRaw
        P5  = M2_BT101_MaxRaw
        P6  = M2_BT101_MinEU
        P7  = M2_BT101_MaxEU
        P8  = M2_BT101_ScaleWidth
        P9  = M2_BT101_Raw
        P10 = M2_BT101_Vl
        P11 = M2_BT101_Percent
        P12 = M2_ChDtTrg239
        P13 = M2_BT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT201_CtWdSet1
        P1 =  M2_BT201_CtWdSet2
        P2 =  M2_BT201_MinRaw
        P3 =  M2_BT201_MaxRaw
        P4 =  M2_BT201_MinEU
        P5 =  M2_BT201_MaxEU
        P6 =  M2_BT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT201_CtWdSet1
        P1  = M2_BT201_CtWdSet2
        P2  = M2_BT201_CtWd
        P3  = M2_BT201_CtWdSend
        P4  = M2_BT201_MinRaw
        P5  = M2_BT201_MaxRaw
        P6  = M2_BT201_MinEU
        P7  = M2_BT201_MaxEU
        P8  = M2_BT201_ScaleWidth
        P9  = M2_BT201_Raw
        P10 = M2_BT201_Vl
        P11 = M2_BT201_Percent
        P12 = M2_ChDtTrg239
        P13 = M2_BT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT301_CtWdSet1
        P1 =  M2_BT301_CtWdSet2
        P2 =  M2_BT301_MinRaw
        P3 =  M2_BT301_MaxRaw
        P4 =  M2_BT301_MinEU
        P5 =  M2_BT301_MaxEU
        P6 =  M2_BT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT301_CtWdSet1
        P1  = M2_BT301_CtWdSet2
        P2  = M2_BT301_CtWd
        P3  = M2_BT301_CtWdSend
        P4  = M2_BT301_MinRaw
        P5  = M2_BT301_MaxRaw
        P6  = M2_BT301_MinEU
        P7  = M2_BT301_MaxEU
        P8  = M2_BT301_ScaleWidth
        P9  = M2_BT301_Raw
        P10 = M2_BT301_Vl
        P11 = M2_BT301_Percent
        P12 = M2_ChDtTrg239
        P13 = M2_BT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT401_CtWdSet1
        P1 =  M2_BT401_CtWdSet2
        P2 =  M2_BT401_MinRaw
        P3 =  M2_BT401_MaxRaw
        P4 =  M2_BT401_MinEU
        P5 =  M2_BT401_MaxEU
        P6 =  M2_BT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT401_CtWdSet1
        P1  = M2_BT401_CtWdSet2
        P2  = M2_BT401_CtWd
        P3  = M2_BT401_CtWdSend
        P4  = M2_BT401_MinRaw
        P5  = M2_BT401_MaxRaw
        P6  = M2_BT401_MinEU
        P7  = M2_BT401_MaxEU
        P8  = M2_BT401_ScaleWidth
        P9  = M2_BT401_Raw
        P10 = M2_BT401_Vl
        P11 = M2_BT401_Percent
        P12 = M2_ChDtTrg240
        P13 = M2_BT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT501_CtWdSet1
        P1 =  M2_BT501_CtWdSet2
        P2 =  M2_BT501_MinRaw
        P3 =  M2_BT501_MaxRaw
        P4 =  M2_BT501_MinEU
        P5 =  M2_BT501_MaxEU
        P6 =  M2_BT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT501_CtWdSet1
        P1  = M2_BT501_CtWdSet2
        P2  = M2_BT501_CtWd
        P3  = M2_BT501_CtWdSend
        P4  = M2_BT501_MinRaw
        P5  = M2_BT501_MaxRaw
        P6  = M2_BT501_MinEU
        P7  = M2_BT501_MaxEU
        P8  = M2_BT501_ScaleWidth
        P9  = M2_BT501_Raw
        P10 = M2_BT501_Vl
        P11 = M2_BT501_Percent
        P12 = M2_ChDtTrg240
        P13 = M2_BT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT101_CtWdSet1
        P1 =  M2_MT101_CtWdSet2
        P2 =  M2_MT101_MinRaw
        P3 =  M2_MT101_MaxRaw
        P4 =  M2_MT101_MinEU
        P5 =  M2_MT101_MaxEU
        P6 =  M2_MT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT101_CtWdSet1
        P1  = M2_MT101_CtWdSet2
        P2  = M2_MT101_CtWd
        P3  = M2_MT101_CtWdSend
        P4  = M2_MT101_MinRaw
        P5  = M2_MT101_MaxRaw
        P6  = M2_MT101_MinEU
        P7  = M2_MT101_MaxEU
        P8  = M2_MT101_ScaleWidth
        P9  = M2_MT101_Raw
        P10 = M2_MT101_Vl
        P11 = M2_MT101_Percent
        P12 = M2_ChDtTrg240
        P13 = M2_MT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT201_CtWdSet1
        P1 =  M2_MT201_CtWdSet2
        P2 =  M2_MT201_MinRaw
        P3 =  M2_MT201_MaxRaw
        P4 =  M2_MT201_MinEU
        P5 =  M2_MT201_MaxEU
        P6 =  M2_MT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT201_CtWdSet1
        P1  = M2_MT201_CtWdSet2
        P2  = M2_MT201_CtWd
        P3  = M2_MT201_CtWdSend
        P4  = M2_MT201_MinRaw
        P5  = M2_MT201_MaxRaw
        P6  = M2_MT201_MinEU
        P7  = M2_MT201_MaxEU
        P8  = M2_MT201_ScaleWidth
        P9  = M2_MT201_Raw
        P10 = M2_MT201_Vl
        P11 = M2_MT201_Percent
        P12 = M2_ChDtTrg240
        P13 = M2_MT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT301_CtWdSet1
        P1 =  M2_MT301_CtWdSet2
        P2 =  M2_MT301_MinRaw
        P3 =  M2_MT301_MaxRaw
        P4 =  M2_MT301_MinEU
        P5 =  M2_MT301_MaxEU
        P6 =  M2_MT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT301_CtWdSet1
        P1  = M2_MT301_CtWdSet2
        P2  = M2_MT301_CtWd
        P3  = M2_MT301_CtWdSend
        P4  = M2_MT301_MinRaw
        P5  = M2_MT301_MaxRaw
        P6  = M2_MT301_MinEU
        P7  = M2_MT301_MaxEU
        P8  = M2_MT301_ScaleWidth
        P9  = M2_MT301_Raw
        P10 = M2_MT301_Vl
        P11 = M2_MT301_Percent
        P12 = M2_ChDtTrg241
        P13 = M2_MT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT401_CtWdSet1
        P1 =  M2_MT401_CtWdSet2
        P2 =  M2_MT401_MinRaw
        P3 =  M2_MT401_MaxRaw
        P4 =  M2_MT401_MinEU
        P5 =  M2_MT401_MaxEU
        P6 =  M2_MT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT401_CtWdSet1
        P1  = M2_MT401_CtWdSet2
        P2  = M2_MT401_CtWd
        P3  = M2_MT401_CtWdSend
        P4  = M2_MT401_MinRaw
        P5  = M2_MT401_MaxRaw
        P6  = M2_MT401_MinEU
        P7  = M2_MT401_MaxEU
        P8  = M2_MT401_ScaleWidth
        P9  = M2_MT401_Raw
        P10 = M2_MT401_Vl
        P11 = M2_MT401_Percent
        P12 = M2_ChDtTrg241
        P13 = M2_MT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT501_CtWdSet1
        P1 =  M2_MT501_CtWdSet2
        P2 =  M2_MT501_MinRaw
        P3 =  M2_MT501_MaxRaw
        P4 =  M2_MT501_MinEU
        P5 =  M2_MT501_MaxEU
        P6 =  M2_MT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT501_CtWdSet1
        P1  = M2_MT501_CtWdSet2
        P2  = M2_MT501_CtWd
        P3  = M2_MT501_CtWdSend
        P4  = M2_MT501_MinRaw
        P5  = M2_MT501_MaxRaw
        P6  = M2_MT501_MinEU
        P7  = M2_MT501_MaxEU
        P8  = M2_MT501_ScaleWidth
        P9  = M2_MT501_Raw
        P10 = M2_MT501_Vl
        P11 = M2_MT501_Percent
        P12 = M2_ChDtTrg241
        P13 = M2_MT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT102_CtWdSet1
        P1 =  M2_MT102_CtWdSet2
        P2 =  M2_MT102_MinRaw
        P3 =  M2_MT102_MaxRaw
        P4 =  M2_MT102_MinEU
        P5 =  M2_MT102_MaxEU
        P6 =  M2_MT102_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT102_CtWdSet1
        P1  = M2_MT102_CtWdSet2
        P2  = M2_MT102_CtWd
        P3  = M2_MT102_CtWdSend
        P4  = M2_MT102_MinRaw
        P5  = M2_MT102_MaxRaw
        P6  = M2_MT102_MinEU
        P7  = M2_MT102_MaxEU
        P8  = M2_MT102_ScaleWidth
        P9  = M2_MT102_Raw
        P10 = M2_MT102_Vl
        P11 = M2_MT102_Percent
        P12 = M2_ChDtTrg241
        P13 = M2_MT102_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT202_CtWdSet1
        P1 =  M2_MT202_CtWdSet2
        P2 =  M2_MT202_MinRaw
        P3 =  M2_MT202_MaxRaw
        P4 =  M2_MT202_MinEU
        P5 =  M2_MT202_MaxEU
        P6 =  M2_MT202_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT202_CtWdSet1
        P1  = M2_MT202_CtWdSet2
        P2  = M2_MT202_CtWd
        P3  = M2_MT202_CtWdSend
        P4  = M2_MT202_MinRaw
        P5  = M2_MT202_MaxRaw
        P6  = M2_MT202_MinEU
        P7  = M2_MT202_MaxEU
        P8  = M2_MT202_ScaleWidth
        P9  = M2_MT202_Raw
        P10 = M2_MT202_Vl
        P11 = M2_MT202_Percent
        P12 = M2_ChDtTrg242
        P13 = M2_MT202_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT302_CtWdSet1
        P1 =  M2_MT302_CtWdSet2
        P2 =  M2_MT302_MinRaw
        P3 =  M2_MT302_MaxRaw
        P4 =  M2_MT302_MinEU
        P5 =  M2_MT302_MaxEU
        P6 =  M2_MT302_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT302_CtWdSet1
        P1  = M2_MT302_CtWdSet2
        P2  = M2_MT302_CtWd
        P3  = M2_MT302_CtWdSend
        P4  = M2_MT302_MinRaw
        P5  = M2_MT302_MaxRaw
        P6  = M2_MT302_MinEU
        P7  = M2_MT302_MaxEU
        P8  = M2_MT302_ScaleWidth
        P9  = M2_MT302_Raw
        P10 = M2_MT302_Vl
        P11 = M2_MT302_Percent
        P12 = M2_ChDtTrg242
        P13 = M2_MT302_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT402_CtWdSet1
        P1 =  M2_MT402_CtWdSet2
        P2 =  M2_MT402_MinRaw
        P3 =  M2_MT402_MaxRaw
        P4 =  M2_MT402_MinEU
        P5 =  M2_MT402_MaxEU
        P6 =  M2_MT402_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT402_CtWdSet1
        P1  = M2_MT402_CtWdSet2
        P2  = M2_MT402_CtWd
        P3  = M2_MT402_CtWdSend
        P4  = M2_MT402_MinRaw
        P5  = M2_MT402_MaxRaw
        P6  = M2_MT402_MinEU
        P7  = M2_MT402_MaxEU
        P8  = M2_MT402_ScaleWidth
        P9  = M2_MT402_Raw
        P10 = M2_MT402_Vl
        P11 = M2_MT402_Percent
        P12 = M2_ChDtTrg242
        P13 = M2_MT402_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT502_CtWdSet1
        P1 =  M2_MT502_CtWdSet2
        P2 =  M2_MT502_MinRaw
        P3 =  M2_MT502_MaxRaw
        P4 =  M2_MT502_MinEU
        P5 =  M2_MT502_MaxEU
        P6 =  M2_MT502_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT502_CtWdSet1
        P1  = M2_MT502_CtWdSet2
        P2  = M2_MT502_CtWd
        P3  = M2_MT502_CtWdSend
        P4  = M2_MT502_MinRaw
        P5  = M2_MT502_MaxRaw
        P6  = M2_MT502_MinEU
        P7  = M2_MT502_MaxEU
        P8  = M2_MT502_ScaleWidth
        P9  = M2_MT502_Raw
        P10 = M2_MT502_Vl
        P11 = M2_MT502_Percent
        P12 = M2_ChDtTrg242
        P13 = M2_MT502_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_FT101_CtWdSet1
        P1 =  M2_FT101_CtWdSet2
        P2 =  M2_FT101_MinRaw
        P3 =  M2_FT101_MaxRaw
        P4 =  M2_FT101_MinEU
        P5 =  M2_FT101_MaxEU
        P6 =  M2_FT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_FT101_CtWdSet1
        P1  = M2_FT101_CtWdSet2
        P2  = M2_FT101_CtWd
        P3  = M2_FT101_CtWdSend
        P4  = M2_FT101_MinRaw
        P5  = M2_FT101_MaxRaw
        P6  = M2_FT101_MinEU
        P7  = M2_FT101_MaxEU
        P8  = M2_FT101_ScaleWidth
        P9  = M2_FT101_Raw
        P10 = M2_FT101_Vl
        P11 = M2_FT101_Percent
        P12 = M2_ChDtTrg243
        P13 = M2_FT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_FT201_CtWdSet1
        P1 =  M2_FT201_CtWdSet2
        P2 =  M2_FT201_MinRaw
        P3 =  M2_FT201_MaxRaw
        P4 =  M2_FT201_MinEU
        P5 =  M2_FT201_MaxEU
        P6 =  M2_FT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_FT201_CtWdSet1
        P1  = M2_FT201_CtWdSet2
        P2  = M2_FT201_CtWd
        P3  = M2_FT201_CtWdSend
        P4  = M2_FT201_MinRaw
        P5  = M2_FT201_MaxRaw
        P6  = M2_FT201_MinEU
        P7  = M2_FT201_MaxEU
        P8  = M2_FT201_ScaleWidth
        P9  = M2_FT201_Raw
        P10 = M2_FT201_Vl
        P11 = M2_FT201_Percent
        P12 = M2_ChDtTrg243
        P13 = M2_FT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_FT301_CtWdSet1
        P1 =  M2_FT301_CtWdSet2
        P2 =  M2_FT301_MinRaw
        P3 =  M2_FT301_MaxRaw
        P4 =  M2_FT301_MinEU
        P5 =  M2_FT301_MaxEU
        P6 =  M2_FT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_FT301_CtWdSet1
        P1  = M2_FT301_CtWdSet2
        P2  = M2_FT301_CtWd
        P3  = M2_FT301_CtWdSend
        P4  = M2_FT301_MinRaw
        P5  = M2_FT301_MaxRaw
        P6  = M2_FT301_MinEU
        P7  = M2_FT301_MaxEU
        P8  = M2_FT301_ScaleWidth
        P9  = M2_FT301_Raw
        P10 = M2_FT301_Vl
        P11 = M2_FT301_Percent
        P12 = M2_ChDtTrg243
        P13 = M2_FT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_FT401_CtWdSet1
        P1 =  M2_FT401_CtWdSet2
        P2 =  M2_FT401_MinRaw
        P3 =  M2_FT401_MaxRaw
        P4 =  M2_FT401_MinEU
        P5 =  M2_FT401_MaxEU
        P6 =  M2_FT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_FT401_CtWdSet1
        P1  = M2_FT401_CtWdSet2
        P2  = M2_FT401_CtWd
        P3  = M2_FT401_CtWdSend
        P4  = M2_FT401_MinRaw
        P5  = M2_FT401_MaxRaw
        P6  = M2_FT401_MinEU
        P7  = M2_FT401_MaxEU
        P8  = M2_FT401_ScaleWidth
        P9  = M2_FT401_Raw
        P10 = M2_FT401_Vl
        P11 = M2_FT401_Percent
        P12 = M2_ChDtTrg243
        P13 = M2_FT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_FT501_CtWdSet1
        P1 =  M2_FT501_CtWdSet2
        P2 =  M2_FT501_MinRaw
        P3 =  M2_FT501_MaxRaw
        P4 =  M2_FT501_MinEU
        P5 =  M2_FT501_MaxEU
        P6 =  M2_FT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_FT501_CtWdSet1
        P1  = M2_FT501_CtWdSet2
        P2  = M2_FT501_CtWd
        P3  = M2_FT501_CtWdSend
        P4  = M2_FT501_MinRaw
        P5  = M2_FT501_MaxRaw
        P6  = M2_FT501_MinEU
        P7  = M2_FT501_MaxEU
        P8  = M2_FT501_ScaleWidth
        P9  = M2_FT501_Raw
        P10 = M2_FT501_Vl
        P11 = M2_FT501_Percent
        P12 = M2_ChDtTrg244
        P13 = M2_FT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT051_CtWdSet1
        P1 =  M2_CT051_CtWdSet2
        P2 =  M2_CT051_MinRaw
        P3 =  M2_CT051_MaxRaw
        P4 =  M2_CT051_MinEU
        P5 =  M2_CT051_MaxEU
        P6 =  M2_CT051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT051_CtWdSet1
        P1  = M2_CT051_CtWdSet2
        P2  = M2_CT051_CtWd
        P3  = M2_CT051_CtWdSend
        P4  = M2_CT051_MinRaw
        P5  = M2_CT051_MaxRaw
        P6  = M2_CT051_MinEU
        P7  = M2_CT051_MaxEU
        P8  = M2_CT051_ScaleWidth
        P9  = M2_CT051_Raw
        P10 = M2_CT051_Vl
        P11 = M2_CT051_Percent
        P12 = M2_ChDtTrg244
        P13 = M2_CT051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_CT061_CtWdSet1
        P1 =  M2_CT061_CtWdSet2
        P2 =  M2_CT061_MinRaw
        P3 =  M2_CT061_MaxRaw
        P4 =  M2_CT061_MinEU
        P5 =  M2_CT061_MaxEU
        P6 =  M2_CT061_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_CT061_CtWdSet1
        P1  = M2_CT061_CtWdSet2
        P2  = M2_CT061_CtWd
        P3  = M2_CT061_CtWdSend
        P4  = M2_CT061_MinRaw
        P5  = M2_CT061_MaxRaw
        P6  = M2_CT061_MinEU
        P7  = M2_CT061_MaxEU
        P8  = M2_CT061_ScaleWidth
        P9  = M2_CT061_Raw
        P10 = M2_CT061_Vl
        P11 = M2_CT061_Percent
        P12 = M2_ChDtTrg244
        P13 = M2_CT061_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT051_CtWdSet1
        P1 =  M2_BT051_CtWdSet2
        P2 =  M2_BT051_MinRaw
        P3 =  M2_BT051_MaxRaw
        P4 =  M2_BT051_MinEU
        P5 =  M2_BT051_MaxEU
        P6 =  M2_BT051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT051_CtWdSet1
        P1  = M2_BT051_CtWdSet2
        P2  = M2_BT051_CtWd
        P3  = M2_BT051_CtWdSend
        P4  = M2_BT051_MinRaw
        P5  = M2_BT051_MaxRaw
        P6  = M2_BT051_MinEU
        P7  = M2_BT051_MaxEU
        P8  = M2_BT051_ScaleWidth
        P9  = M2_BT051_Raw
        P10 = M2_BT051_Vl
        P11 = M2_BT051_Percent
        P12 = M2_ChDtTrg244
        P13 = M2_BT051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_BT061_CtWdSet1
        P1 =  M2_BT061_CtWdSet2
        P2 =  M2_BT061_MinRaw
        P3 =  M2_BT061_MaxRaw
        P4 =  M2_BT061_MinEU
        P5 =  M2_BT061_MaxEU
        P6 =  M2_BT061_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_BT061_CtWdSet1
        P1  = M2_BT061_CtWdSet2
        P2  = M2_BT061_CtWd
        P3  = M2_BT061_CtWdSend
        P4  = M2_BT061_MinRaw
        P5  = M2_BT061_MaxRaw
        P6  = M2_BT061_MinEU
        P7  = M2_BT061_MaxEU
        P8  = M2_BT061_ScaleWidth
        P9  = M2_BT061_Raw
        P10 = M2_BT061_Vl
        P11 = M2_BT061_Percent
        P12 = M2_ChDtTrg245
        P13 = M2_BT061_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT051_CtWdSet1
        P1 =  M2_MT051_CtWdSet2
        P2 =  M2_MT051_MinRaw
        P3 =  M2_MT051_MaxRaw
        P4 =  M2_MT051_MinEU
        P5 =  M2_MT051_MaxEU
        P6 =  M2_MT051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT051_CtWdSet1
        P1  = M2_MT051_CtWdSet2
        P2  = M2_MT051_CtWd
        P3  = M2_MT051_CtWdSend
        P4  = M2_MT051_MinRaw
        P5  = M2_MT051_MaxRaw
        P6  = M2_MT051_MinEU
        P7  = M2_MT051_MaxEU
        P8  = M2_MT051_ScaleWidth
        P9  = M2_MT051_Raw
        P10 = M2_MT051_Vl
        P11 = M2_MT051_Percent
        P12 = M2_ChDtTrg245
        P13 = M2_MT051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT061_CtWdSet1
        P1 =  M2_MT061_CtWdSet2
        P2 =  M2_MT061_MinRaw
        P3 =  M2_MT061_MaxRaw
        P4 =  M2_MT061_MinEU
        P5 =  M2_MT061_MaxEU
        P6 =  M2_MT061_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT061_CtWdSet1
        P1  = M2_MT061_CtWdSet2
        P2  = M2_MT061_CtWd
        P3  = M2_MT061_CtWdSend
        P4  = M2_MT061_MinRaw
        P5  = M2_MT061_MaxRaw
        P6  = M2_MT061_MinEU
        P7  = M2_MT061_MaxEU
        P8  = M2_MT061_ScaleWidth
        P9  = M2_MT061_Raw
        P10 = M2_MT061_Vl
        P11 = M2_MT061_Percent
        P12 = M2_ChDtTrg245
        P13 = M2_MT061_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT052_CtWdSet1
        P1 =  M2_MT052_CtWdSet2
        P2 =  M2_MT052_MinRaw
        P3 =  M2_MT052_MaxRaw
        P4 =  M2_MT052_MinEU
        P5 =  M2_MT052_MaxEU
        P6 =  M2_MT052_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT052_CtWdSet1
        P1  = M2_MT052_CtWdSet2
        P2  = M2_MT052_CtWd
        P3  = M2_MT052_CtWdSend
        P4  = M2_MT052_MinRaw
        P5  = M2_MT052_MaxRaw
        P6  = M2_MT052_MinEU
        P7  = M2_MT052_MaxEU
        P8  = M2_MT052_ScaleWidth
        P9  = M2_MT052_Raw
        P10 = M2_MT052_Vl
        P11 = M2_MT052_Percent
        P12 = M2_ChDtTrg245
        P13 = M2_MT052_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_MT062_CtWdSet1
        P1 =  M2_MT062_CtWdSet2
        P2 =  M2_MT062_MinRaw
        P3 =  M2_MT062_MaxRaw
        P4 =  M2_MT062_MinEU
        P5 =  M2_MT062_MaxEU
        P6 =  M2_MT062_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_MT062_CtWdSet1
        P1  = M2_MT062_CtWdSet2
        P2  = M2_MT062_CtWd
        P3  = M2_MT062_CtWdSend
        P4  = M2_MT062_MinRaw
        P5  = M2_MT062_MaxRaw
        P6  = M2_MT062_MinEU
        P7  = M2_MT062_MaxEU
        P8  = M2_MT062_ScaleWidth
        P9  = M2_MT062_Raw
        P10 = M2_MT062_Vl
        P11 = M2_MT062_Percent
        P12 = M2_ChDtTrg246
        P13 = M2_MT062_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PF051_CtWdSet1
        P1 =  M2_PF051_CtWdSet2
        P2 =  M2_PF051_MinRaw
        P3 =  M2_PF051_MaxRaw
        P4 =  M2_PF051_MinEU
        P5 =  M2_PF051_MaxEU
        P6 =  M2_PF051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PF051_CtWdSet1
        P1  = M2_PF051_CtWdSet2
        P2  = M2_PF051_CtWd
        P3  = M2_PF051_CtWdSend
        P4  = M2_PF051_MinRaw
        P5  = M2_PF051_MaxRaw
        P6  = M2_PF051_MinEU
        P7  = M2_PF051_MaxEU
        P8  = M2_PF051_ScaleWidth
        P9  = M2_PF051_Raw
        P10 = M2_PF051_Vl
        P11 = M2_PF051_Percent
        P12 = M2_ChDtTrg246
        P13 = M2_PF051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_PF061_CtWdSet1
        P1 =  M2_PF061_CtWdSet2
        P2 =  M2_PF061_MinRaw
        P3 =  M2_PF061_MaxRaw
        P4 =  M2_PF061_MinEU
        P5 =  M2_PF061_MaxEU
        P6 =  M2_PF061_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_PF061_CtWdSet1
        P1  = M2_PF061_CtWdSet2
        P2  = M2_PF061_CtWd
        P3  = M2_PF061_CtWdSend
        P4  = M2_PF061_MinRaw
        P5  = M2_PF061_MaxRaw
        P6  = M2_PF061_MinEU
        P7  = M2_PF061_MaxEU
        P8  = M2_PF061_ScaleWidth
        P9  = M2_PF061_Raw
        P10 = M2_PF061_Vl
        P11 = M2_PF061_Percent
        P12 = M2_ChDtTrg246
        P13 = M2_PF061_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM155_CtWdSet1
        P1 =  M2_RM155_CtWdSet2
        P2 =  M2_RM155_MinRaw
        P3 =  M2_RM155_MaxRaw
        P4 =  M2_RM155_MinEU
        P5 =  M2_RM155_MaxEU
        P6 =  M2_RM155_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM155_CtWdSet1
        P1  = M2_RM155_CtWdSet2
        P2  = M2_RM155_CtWd
        P3  = M2_RM155_CtWdSend
        P4  = M2_RM155_MinRaw
        P5  = M2_RM155_MaxRaw
        P6  = M2_RM155_MinEU
        P7  = M2_RM155_MaxEU
        P8  = M2_RM155_ScaleWidth
        P9  = M2_RM155_Raw
        P10 = M2_RM155_Vl
        P11 = M2_RM155_Percent
        P12 = M2_ChDtTrg246
        P13 = M2_RM155_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM156_CtWdSet1
        P1 =  M2_RM156_CtWdSet2
        P2 =  M2_RM156_MinRaw
        P3 =  M2_RM156_MaxRaw
        P4 =  M2_RM156_MinEU
        P5 =  M2_RM156_MaxEU
        P6 =  M2_RM156_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM156_CtWdSet1
        P1  = M2_RM156_CtWdSet2
        P2  = M2_RM156_CtWd
        P3  = M2_RM156_CtWdSend
        P4  = M2_RM156_MinRaw
        P5  = M2_RM156_MaxRaw
        P6  = M2_RM156_MinEU
        P7  = M2_RM156_MaxEU
        P8  = M2_RM156_ScaleWidth
        P9  = M2_RM156_Raw
        P10 = M2_RM156_Vl
        P11 = M2_RM156_Percent
        P12 = M2_ChDtTrg247
        P13 = M2_RM156_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM157_CtWdSet1
        P1 =  M2_RM157_CtWdSet2
        P2 =  M2_RM157_MinRaw
        P3 =  M2_RM157_MaxRaw
        P4 =  M2_RM157_MinEU
        P5 =  M2_RM157_MaxEU
        P6 =  M2_RM157_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM157_CtWdSet1
        P1  = M2_RM157_CtWdSet2
        P2  = M2_RM157_CtWd
        P3  = M2_RM157_CtWdSend
        P4  = M2_RM157_MinRaw
        P5  = M2_RM157_MaxRaw
        P6  = M2_RM157_MinEU
        P7  = M2_RM157_MaxEU
        P8  = M2_RM157_ScaleWidth
        P9  = M2_RM157_Raw
        P10 = M2_RM157_Vl
        P11 = M2_RM157_Percent
        P12 = M2_ChDtTrg247
        P13 = M2_RM157_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM158_CtWdSet1
        P1 =  M2_RM158_CtWdSet2
        P2 =  M2_RM158_MinRaw
        P3 =  M2_RM158_MaxRaw
        P4 =  M2_RM158_MinEU
        P5 =  M2_RM158_MaxEU
        P6 =  M2_RM158_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM158_CtWdSet1
        P1  = M2_RM158_CtWdSet2
        P2  = M2_RM158_CtWd
        P3  = M2_RM158_CtWdSend
        P4  = M2_RM158_MinRaw
        P5  = M2_RM158_MaxRaw
        P6  = M2_RM158_MinEU
        P7  = M2_RM158_MaxEU
        P8  = M2_RM158_ScaleWidth
        P9  = M2_RM158_Raw
        P10 = M2_RM158_Vl
        P11 = M2_RM158_Percent
        P12 = M2_ChDtTrg247
        P13 = M2_RM158_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M2_Analog
    CPAR:
        P0 =  M2_RM159_CtWdSet1
        P1 =  M2_RM159_CtWdSet2
        P2 =  M2_RM159_MinRaw
        P3 =  M2_RM159_MaxRaw
        P4 =  M2_RM159_MinEU
        P5 =  M2_RM159_MaxEU
        P6 =  M2_RM159_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M2_RM159_CtWdSet1
        P1  = M2_RM159_CtWdSet2
        P2  = M2_RM159_CtWd
        P3  = M2_RM159_CtWdSend
        P4  = M2_RM159_MinRaw
        P5  = M2_RM159_MaxRaw
        P6  = M2_RM159_MinEU
        P7  = M2_RM159_MaxEU
        P8  = M2_RM159_ScaleWidth
        P9  = M2_RM159_Raw
        P10 = M2_RM159_Vl
        P11 = M2_RM159_Percent
        P12 = M2_ChDtTrg247
        P13 = M2_RM159_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

