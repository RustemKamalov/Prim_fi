// analog math-log 1

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT551_CtWdSet1
        P1 =  M1_XT551_CtWdSet2
        P2 =  M1_XT551_MinRaw
        P3 =  M1_XT551_MaxRaw
        P4 =  M1_XT551_MinEU
        P5 =  M1_XT551_MaxEU
        P6 =  M1_XT551_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT551_CtWdSet1
        P1  = M1_XT551_CtWdSet2
        P2  = M1_XT551_CtWd
        P3  = M1_XT551_CtWdSend
        P4  = M1_XT551_MinRaw
        P5  = M1_XT551_MaxRaw
        P6  = M1_XT551_MinEU
        P7  = M1_XT551_MaxEU
        P8  = M1_XT551_ScaleWidth
        P9  = M1_XT551_Raw
        P10 = M1_XT551_Vl
        P11 = M1_XT551_Percent
        P12 = M1_ChDtTrg208
        P13 = M1_XT551_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT552_CtWdSet1
        P1 =  M1_XT552_CtWdSet2
        P2 =  M1_XT552_MinRaw
        P3 =  M1_XT552_MaxRaw
        P4 =  M1_XT552_MinEU
        P5 =  M1_XT552_MaxEU
        P6 =  M1_XT552_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT552_CtWdSet1
        P1  = M1_XT552_CtWdSet2
        P2  = M1_XT552_CtWd
        P3  = M1_XT552_CtWdSend
        P4  = M1_XT552_MinRaw
        P5  = M1_XT552_MaxRaw
        P6  = M1_XT552_MinEU
        P7  = M1_XT552_MaxEU
        P8  = M1_XT552_ScaleWidth
        P9  = M1_XT552_Raw
        P10 = M1_XT552_Vl
        P11 = M1_XT552_Percent
        P12 = M1_ChDtTrg208
        P13 = M1_XT552_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT553_CtWdSet1
        P1 =  M1_XT553_CtWdSet2
        P2 =  M1_XT553_MinRaw
        P3 =  M1_XT553_MaxRaw
        P4 =  M1_XT553_MinEU
        P5 =  M1_XT553_MaxEU
        P6 =  M1_XT553_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT553_CtWdSet1
        P1  = M1_XT553_CtWdSet2
        P2  = M1_XT553_CtWd
        P3  = M1_XT553_CtWdSend
        P4  = M1_XT553_MinRaw
        P5  = M1_XT553_MaxRaw
        P6  = M1_XT553_MinEU
        P7  = M1_XT553_MaxEU
        P8  = M1_XT553_ScaleWidth
        P9  = M1_XT553_Raw
        P10 = M1_XT553_Vl
        P11 = M1_XT553_Percent
        P12 = M1_ChDtTrg208
        P13 = M1_XT553_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT554_CtWdSet1
        P1 =  M1_XT554_CtWdSet2
        P2 =  M1_XT554_MinRaw
        P3 =  M1_XT554_MaxRaw
        P4 =  M1_XT554_MinEU
        P5 =  M1_XT554_MaxEU
        P6 =  M1_XT554_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT554_CtWdSet1
        P1  = M1_XT554_CtWdSet2
        P2  = M1_XT554_CtWd
        P3  = M1_XT554_CtWdSend
        P4  = M1_XT554_MinRaw
        P5  = M1_XT554_MaxRaw
        P6  = M1_XT554_MinEU
        P7  = M1_XT554_MaxEU
        P8  = M1_XT554_ScaleWidth
        P9  = M1_XT554_Raw
        P10 = M1_XT554_Vl
        P11 = M1_XT554_Percent
        P12 = M1_ChDtTrg208
        P13 = M1_XT554_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT561_CtWdSet1
        P1 =  M1_XT561_CtWdSet2
        P2 =  M1_XT561_MinRaw
        P3 =  M1_XT561_MaxRaw
        P4 =  M1_XT561_MinEU
        P5 =  M1_XT561_MaxEU
        P6 =  M1_XT561_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT561_CtWdSet1
        P1  = M1_XT561_CtWdSet2
        P2  = M1_XT561_CtWd
        P3  = M1_XT561_CtWdSend
        P4  = M1_XT561_MinRaw
        P5  = M1_XT561_MaxRaw
        P6  = M1_XT561_MinEU
        P7  = M1_XT561_MaxEU
        P8  = M1_XT561_ScaleWidth
        P9  = M1_XT561_Raw
        P10 = M1_XT561_Vl
        P11 = M1_XT561_Percent
        P12 = M1_ChDtTrg209
        P13 = M1_XT561_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT562_CtWdSet1
        P1 =  M1_XT562_CtWdSet2
        P2 =  M1_XT562_MinRaw
        P3 =  M1_XT562_MaxRaw
        P4 =  M1_XT562_MinEU
        P5 =  M1_XT562_MaxEU
        P6 =  M1_XT562_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT562_CtWdSet1
        P1  = M1_XT562_CtWdSet2
        P2  = M1_XT562_CtWd
        P3  = M1_XT562_CtWdSend
        P4  = M1_XT562_MinRaw
        P5  = M1_XT562_MaxRaw
        P6  = M1_XT562_MinEU
        P7  = M1_XT562_MaxEU
        P8  = M1_XT562_ScaleWidth
        P9  = M1_XT562_Raw
        P10 = M1_XT562_Vl
        P11 = M1_XT562_Percent
        P12 = M1_ChDtTrg209
        P13 = M1_XT562_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT563_CtWdSet1
        P1 =  M1_XT563_CtWdSet2
        P2 =  M1_XT563_MinRaw
        P3 =  M1_XT563_MaxRaw
        P4 =  M1_XT563_MinEU
        P5 =  M1_XT563_MaxEU
        P6 =  M1_XT563_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT563_CtWdSet1
        P1  = M1_XT563_CtWdSet2
        P2  = M1_XT563_CtWd
        P3  = M1_XT563_CtWdSend
        P4  = M1_XT563_MinRaw
        P5  = M1_XT563_MaxRaw
        P6  = M1_XT563_MinEU
        P7  = M1_XT563_MaxEU
        P8  = M1_XT563_ScaleWidth
        P9  = M1_XT563_Raw
        P10 = M1_XT563_Vl
        P11 = M1_XT563_Percent
        P12 = M1_ChDtTrg209
        P13 = M1_XT563_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT564_CtWdSet1
        P1 =  M1_XT564_CtWdSet2
        P2 =  M1_XT564_MinRaw
        P3 =  M1_XT564_MaxRaw
        P4 =  M1_XT564_MinEU
        P5 =  M1_XT564_MaxEU
        P6 =  M1_XT564_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT564_CtWdSet1
        P1  = M1_XT564_CtWdSet2
        P2  = M1_XT564_CtWd
        P3  = M1_XT564_CtWdSend
        P4  = M1_XT564_MinRaw
        P5  = M1_XT564_MaxRaw
        P6  = M1_XT564_MinEU
        P7  = M1_XT564_MaxEU
        P8  = M1_XT564_ScaleWidth
        P9  = M1_XT564_Raw
        P10 = M1_XT564_Vl
        P11 = M1_XT564_Percent
        P12 = M1_ChDtTrg209
        P13 = M1_XT564_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT571_CtWdSet1
        P1 =  M1_XT571_CtWdSet2
        P2 =  M1_XT571_MinRaw
        P3 =  M1_XT571_MaxRaw
        P4 =  M1_XT571_MinEU
        P5 =  M1_XT571_MaxEU
        P6 =  M1_XT571_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT571_CtWdSet1
        P1  = M1_XT571_CtWdSet2
        P2  = M1_XT571_CtWd
        P3  = M1_XT571_CtWdSend
        P4  = M1_XT571_MinRaw
        P5  = M1_XT571_MaxRaw
        P6  = M1_XT571_MinEU
        P7  = M1_XT571_MaxEU
        P8  = M1_XT571_ScaleWidth
        P9  = M1_XT571_Raw
        P10 = M1_XT571_Vl
        P11 = M1_XT571_Percent
        P12 = M1_ChDtTrg210
        P13 = M1_XT571_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT572_CtWdSet1
        P1 =  M1_XT572_CtWdSet2
        P2 =  M1_XT572_MinRaw
        P3 =  M1_XT572_MaxRaw
        P4 =  M1_XT572_MinEU
        P5 =  M1_XT572_MaxEU
        P6 =  M1_XT572_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT572_CtWdSet1
        P1  = M1_XT572_CtWdSet2
        P2  = M1_XT572_CtWd
        P3  = M1_XT572_CtWdSend
        P4  = M1_XT572_MinRaw
        P5  = M1_XT572_MaxRaw
        P6  = M1_XT572_MinEU
        P7  = M1_XT572_MaxEU
        P8  = M1_XT572_ScaleWidth
        P9  = M1_XT572_Raw
        P10 = M1_XT572_Vl
        P11 = M1_XT572_Percent
        P12 = M1_ChDtTrg210
        P13 = M1_XT572_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT573_CtWdSet1
        P1 =  M1_XT573_CtWdSet2
        P2 =  M1_XT573_MinRaw
        P3 =  M1_XT573_MaxRaw
        P4 =  M1_XT573_MinEU
        P5 =  M1_XT573_MaxEU
        P6 =  M1_XT573_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT573_CtWdSet1
        P1  = M1_XT573_CtWdSet2
        P2  = M1_XT573_CtWd
        P3  = M1_XT573_CtWdSend
        P4  = M1_XT573_MinRaw
        P5  = M1_XT573_MaxRaw
        P6  = M1_XT573_MinEU
        P7  = M1_XT573_MaxEU
        P8  = M1_XT573_ScaleWidth
        P9  = M1_XT573_Raw
        P10 = M1_XT573_Vl
        P11 = M1_XT573_Percent
        P12 = M1_ChDtTrg210
        P13 = M1_XT573_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT574_CtWdSet1
        P1 =  M1_XT574_CtWdSet2
        P2 =  M1_XT574_MinRaw
        P3 =  M1_XT574_MaxRaw
        P4 =  M1_XT574_MinEU
        P5 =  M1_XT574_MaxEU
        P6 =  M1_XT574_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT574_CtWdSet1
        P1  = M1_XT574_CtWdSet2
        P2  = M1_XT574_CtWd
        P3  = M1_XT574_CtWdSend
        P4  = M1_XT574_MinRaw
        P5  = M1_XT574_MaxRaw
        P6  = M1_XT574_MinEU
        P7  = M1_XT574_MaxEU
        P8  = M1_XT574_ScaleWidth
        P9  = M1_XT574_Raw
        P10 = M1_XT574_Vl
        P11 = M1_XT574_Percent
        P12 = M1_ChDtTrg210
        P13 = M1_XT574_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT581_CtWdSet1
        P1 =  M1_XT581_CtWdSet2
        P2 =  M1_XT581_MinRaw
        P3 =  M1_XT581_MaxRaw
        P4 =  M1_XT581_MinEU
        P5 =  M1_XT581_MaxEU
        P6 =  M1_XT581_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT581_CtWdSet1
        P1  = M1_XT581_CtWdSet2
        P2  = M1_XT581_CtWd
        P3  = M1_XT581_CtWdSend
        P4  = M1_XT581_MinRaw
        P5  = M1_XT581_MaxRaw
        P6  = M1_XT581_MinEU
        P7  = M1_XT581_MaxEU
        P8  = M1_XT581_ScaleWidth
        P9  = M1_XT581_Raw
        P10 = M1_XT581_Vl
        P11 = M1_XT581_Percent
        P12 = M1_ChDtTrg211
        P13 = M1_XT581_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT582_CtWdSet1
        P1 =  M1_XT582_CtWdSet2
        P2 =  M1_XT582_MinRaw
        P3 =  M1_XT582_MaxRaw
        P4 =  M1_XT582_MinEU
        P5 =  M1_XT582_MaxEU
        P6 =  M1_XT582_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT582_CtWdSet1
        P1  = M1_XT582_CtWdSet2
        P2  = M1_XT582_CtWd
        P3  = M1_XT582_CtWdSend
        P4  = M1_XT582_MinRaw
        P5  = M1_XT582_MaxRaw
        P6  = M1_XT582_MinEU
        P7  = M1_XT582_MaxEU
        P8  = M1_XT582_ScaleWidth
        P9  = M1_XT582_Raw
        P10 = M1_XT582_Vl
        P11 = M1_XT582_Percent
        P12 = M1_ChDtTrg211
        P13 = M1_XT582_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT583_CtWdSet1
        P1 =  M1_XT583_CtWdSet2
        P2 =  M1_XT583_MinRaw
        P3 =  M1_XT583_MaxRaw
        P4 =  M1_XT583_MinEU
        P5 =  M1_XT583_MaxEU
        P6 =  M1_XT583_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT583_CtWdSet1
        P1  = M1_XT583_CtWdSet2
        P2  = M1_XT583_CtWd
        P3  = M1_XT583_CtWdSend
        P4  = M1_XT583_MinRaw
        P5  = M1_XT583_MaxRaw
        P6  = M1_XT583_MinEU
        P7  = M1_XT583_MaxEU
        P8  = M1_XT583_ScaleWidth
        P9  = M1_XT583_Raw
        P10 = M1_XT583_Vl
        P11 = M1_XT583_Percent
        P12 = M1_ChDtTrg211
        P13 = M1_XT583_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT584_CtWdSet1
        P1 =  M1_XT584_CtWdSet2
        P2 =  M1_XT584_MinRaw
        P3 =  M1_XT584_MaxRaw
        P4 =  M1_XT584_MinEU
        P5 =  M1_XT584_MaxEU
        P6 =  M1_XT584_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT584_CtWdSet1
        P1  = M1_XT584_CtWdSet2
        P2  = M1_XT584_CtWd
        P3  = M1_XT584_CtWdSend
        P4  = M1_XT584_MinRaw
        P5  = M1_XT584_MaxRaw
        P6  = M1_XT584_MinEU
        P7  = M1_XT584_MaxEU
        P8  = M1_XT584_ScaleWidth
        P9  = M1_XT584_Raw
        P10 = M1_XT584_Vl
        P11 = M1_XT584_Percent
        P12 = M1_ChDtTrg211
        P13 = M1_XT584_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT591_CtWdSet1
        P1 =  M1_XT591_CtWdSet2
        P2 =  M1_XT591_MinRaw
        P3 =  M1_XT591_MaxRaw
        P4 =  M1_XT591_MinEU
        P5 =  M1_XT591_MaxEU
        P6 =  M1_XT591_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT591_CtWdSet1
        P1  = M1_XT591_CtWdSet2
        P2  = M1_XT591_CtWd
        P3  = M1_XT591_CtWdSend
        P4  = M1_XT591_MinRaw
        P5  = M1_XT591_MaxRaw
        P6  = M1_XT591_MinEU
        P7  = M1_XT591_MaxEU
        P8  = M1_XT591_ScaleWidth
        P9  = M1_XT591_Raw
        P10 = M1_XT591_Vl
        P11 = M1_XT591_Percent
        P12 = M1_ChDtTrg212
        P13 = M1_XT591_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT592_CtWdSet1
        P1 =  M1_XT592_CtWdSet2
        P2 =  M1_XT592_MinRaw
        P3 =  M1_XT592_MaxRaw
        P4 =  M1_XT592_MinEU
        P5 =  M1_XT592_MaxEU
        P6 =  M1_XT592_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT592_CtWdSet1
        P1  = M1_XT592_CtWdSet2
        P2  = M1_XT592_CtWd
        P3  = M1_XT592_CtWdSend
        P4  = M1_XT592_MinRaw
        P5  = M1_XT592_MaxRaw
        P6  = M1_XT592_MinEU
        P7  = M1_XT592_MaxEU
        P8  = M1_XT592_ScaleWidth
        P9  = M1_XT592_Raw
        P10 = M1_XT592_Vl
        P11 = M1_XT592_Percent
        P12 = M1_ChDtTrg212
        P13 = M1_XT592_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT593_CtWdSet1
        P1 =  M1_XT593_CtWdSet2
        P2 =  M1_XT593_MinRaw
        P3 =  M1_XT593_MaxRaw
        P4 =  M1_XT593_MinEU
        P5 =  M1_XT593_MaxEU
        P6 =  M1_XT593_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT593_CtWdSet1
        P1  = M1_XT593_CtWdSet2
        P2  = M1_XT593_CtWd
        P3  = M1_XT593_CtWdSend
        P4  = M1_XT593_MinRaw
        P5  = M1_XT593_MaxRaw
        P6  = M1_XT593_MinEU
        P7  = M1_XT593_MaxEU
        P8  = M1_XT593_ScaleWidth
        P9  = M1_XT593_Raw
        P10 = M1_XT593_Vl
        P11 = M1_XT593_Percent
        P12 = M1_ChDtTrg212
        P13 = M1_XT593_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_XT594_CtWdSet1
        P1 =  M1_XT594_CtWdSet2
        P2 =  M1_XT594_MinRaw
        P3 =  M1_XT594_MaxRaw
        P4 =  M1_XT594_MinEU
        P5 =  M1_XT594_MaxEU
        P6 =  M1_XT594_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_XT594_CtWdSet1
        P1  = M1_XT594_CtWdSet2
        P2  = M1_XT594_CtWd
        P3  = M1_XT594_CtWdSend
        P4  = M1_XT594_MinRaw
        P5  = M1_XT594_MaxRaw
        P6  = M1_XT594_MinEU
        P7  = M1_XT594_MaxEU
        P8  = M1_XT594_ScaleWidth
        P9  = M1_XT594_Raw
        P10 = M1_XT594_Vl
        P11 = M1_XT594_Percent
        P12 = M1_ChDtTrg212
        P13 = M1_XT594_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM020_CtWdSet1
        P1 =  M1_RM020_CtWdSet2
        P2 =  M1_RM020_MinRaw
        P3 =  M1_RM020_MaxRaw
        P4 =  M1_RM020_MinEU
        P5 =  M1_RM020_MaxEU
        P6 =  M1_RM020_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM020_CtWdSet1
        P1  = M1_RM020_CtWdSet2
        P2  = M1_RM020_CtWd
        P3  = M1_RM020_CtWdSend
        P4  = M1_RM020_MinRaw
        P5  = M1_RM020_MaxRaw
        P6  = M1_RM020_MinEU
        P7  = M1_RM020_MaxEU
        P8  = M1_RM020_ScaleWidth
        P9  = M1_RM020_Raw
        P10 = M1_RM020_Vl
        P11 = M1_RM020_Percent
        P12 = M1_ChDtTrg213
        P13 = M1_RM020_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM021_CtWdSet1
        P1 =  M1_RM021_CtWdSet2
        P2 =  M1_RM021_MinRaw
        P3 =  M1_RM021_MaxRaw
        P4 =  M1_RM021_MinEU
        P5 =  M1_RM021_MaxEU
        P6 =  M1_RM021_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM021_CtWdSet1
        P1  = M1_RM021_CtWdSet2
        P2  = M1_RM021_CtWd
        P3  = M1_RM021_CtWdSend
        P4  = M1_RM021_MinRaw
        P5  = M1_RM021_MaxRaw
        P6  = M1_RM021_MinEU
        P7  = M1_RM021_MaxEU
        P8  = M1_RM021_ScaleWidth
        P9  = M1_RM021_Raw
        P10 = M1_RM021_Vl
        P11 = M1_RM021_Percent
        P12 = M1_ChDtTrg213
        P13 = M1_RM021_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM022_CtWdSet1
        P1 =  M1_RM022_CtWdSet2
        P2 =  M1_RM022_MinRaw
        P3 =  M1_RM022_MaxRaw
        P4 =  M1_RM022_MinEU
        P5 =  M1_RM022_MaxEU
        P6 =  M1_RM022_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM022_CtWdSet1
        P1  = M1_RM022_CtWdSet2
        P2  = M1_RM022_CtWd
        P3  = M1_RM022_CtWdSend
        P4  = M1_RM022_MinRaw
        P5  = M1_RM022_MaxRaw
        P6  = M1_RM022_MinEU
        P7  = M1_RM022_MaxEU
        P8  = M1_RM022_ScaleWidth
        P9  = M1_RM022_Raw
        P10 = M1_RM022_Vl
        P11 = M1_RM022_Percent
        P12 = M1_ChDtTrg213
        P13 = M1_RM022_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM023_CtWdSet1
        P1 =  M1_RM023_CtWdSet2
        P2 =  M1_RM023_MinRaw
        P3 =  M1_RM023_MaxRaw
        P4 =  M1_RM023_MinEU
        P5 =  M1_RM023_MaxEU
        P6 =  M1_RM023_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM023_CtWdSet1
        P1  = M1_RM023_CtWdSet2
        P2  = M1_RM023_CtWd
        P3  = M1_RM023_CtWdSend
        P4  = M1_RM023_MinRaw
        P5  = M1_RM023_MaxRaw
        P6  = M1_RM023_MinEU
        P7  = M1_RM023_MaxEU
        P8  = M1_RM023_ScaleWidth
        P9  = M1_RM023_Raw
        P10 = M1_RM023_Vl
        P11 = M1_RM023_Percent
        P12 = M1_ChDtTrg213
        P13 = M1_RM023_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT001_CtWdSet1
        P1 =  M1_TT001_CtWdSet2
        P2 =  M1_TT001_MinRaw
        P3 =  M1_TT001_MaxRaw
        P4 =  M1_TT001_MinEU
        P5 =  M1_TT001_MaxEU
        P6 =  M1_TT001_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT001_CtWdSet1
        P1  = M1_TT001_CtWdSet2
        P2  = M1_TT001_CtWd
        P3  = M1_TT001_CtWdSend
        P4  = M1_TT001_MinRaw
        P5  = M1_TT001_MaxRaw
        P6  = M1_TT001_MinEU
        P7  = M1_TT001_MaxEU
        P8  = M1_TT001_ScaleWidth
        P9  = M1_TT001_Raw
        P10 = M1_TT001_Vl
        P11 = M1_TT001_Percent
        P12 = M1_ChDtTrg214
        P13 = M1_TT001_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT923_CtWdSet1
        P1 =  M1_TT923_CtWdSet2
        P2 =  M1_TT923_MinRaw
        P3 =  M1_TT923_MaxRaw
        P4 =  M1_TT923_MinEU
        P5 =  M1_TT923_MaxEU
        P6 =  M1_TT923_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT923_CtWdSet1
        P1  = M1_TT923_CtWdSet2
        P2  = M1_TT923_CtWd
        P3  = M1_TT923_CtWdSend
        P4  = M1_TT923_MinRaw
        P5  = M1_TT923_MaxRaw
        P6  = M1_TT923_MinEU
        P7  = M1_TT923_MaxEU
        P8  = M1_TT923_ScaleWidth
        P9  = M1_TT923_Raw
        P10 = M1_TT923_Vl
        P11 = M1_TT923_Percent
        P12 = M1_ChDtTrg214
        P13 = M1_TT923_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT924_CtWdSet1
        P1 =  M1_TT924_CtWdSet2
        P2 =  M1_TT924_MinRaw
        P3 =  M1_TT924_MaxRaw
        P4 =  M1_TT924_MinEU
        P5 =  M1_TT924_MaxEU
        P6 =  M1_TT924_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT924_CtWdSet1
        P1  = M1_TT924_CtWdSet2
        P2  = M1_TT924_CtWd
        P3  = M1_TT924_CtWdSend
        P4  = M1_TT924_MinRaw
        P5  = M1_TT924_MaxRaw
        P6  = M1_TT924_MinEU
        P7  = M1_TT924_MaxEU
        P8  = M1_TT924_ScaleWidth
        P9  = M1_TT924_Raw
        P10 = M1_TT924_Vl
        P11 = M1_TT924_Percent
        P12 = M1_ChDtTrg214
        P13 = M1_TT924_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT925_CtWdSet1
        P1 =  M1_TT925_CtWdSet2
        P2 =  M1_TT925_MinRaw
        P3 =  M1_TT925_MaxRaw
        P4 =  M1_TT925_MinEU
        P5 =  M1_TT925_MaxEU
        P6 =  M1_TT925_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT925_CtWdSet1
        P1  = M1_TT925_CtWdSet2
        P2  = M1_TT925_CtWd
        P3  = M1_TT925_CtWdSend
        P4  = M1_TT925_MinRaw
        P5  = M1_TT925_MaxRaw
        P6  = M1_TT925_MinEU
        P7  = M1_TT925_MaxEU
        P8  = M1_TT925_ScaleWidth
        P9  = M1_TT925_Raw
        P10 = M1_TT925_Vl
        P11 = M1_TT925_Percent
        P12 = M1_ChDtTrg214
        P13 = M1_TT925_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT927_CtWdSet1
        P1 =  M1_TT927_CtWdSet2
        P2 =  M1_TT927_MinRaw
        P3 =  M1_TT927_MaxRaw
        P4 =  M1_TT927_MinEU
        P5 =  M1_TT927_MaxEU
        P6 =  M1_TT927_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT927_CtWdSet1
        P1  = M1_TT927_CtWdSet2
        P2  = M1_TT927_CtWd
        P3  = M1_TT927_CtWdSend
        P4  = M1_TT927_MinRaw
        P5  = M1_TT927_MaxRaw
        P6  = M1_TT927_MinEU
        P7  = M1_TT927_MaxEU
        P8  = M1_TT927_ScaleWidth
        P9  = M1_TT927_Raw
        P10 = M1_TT927_Vl
        P11 = M1_TT927_Percent
        P12 = M1_ChDtTrg215
        P13 = M1_TT927_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT681_CtWdSet1
        P1 =  M1_TT681_CtWdSet2
        P2 =  M1_TT681_MinRaw
        P3 =  M1_TT681_MaxRaw
        P4 =  M1_TT681_MinEU
        P5 =  M1_TT681_MaxEU
        P6 =  M1_TT681_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT681_CtWdSet1
        P1  = M1_TT681_CtWdSet2
        P2  = M1_TT681_CtWd
        P3  = M1_TT681_CtWdSend
        P4  = M1_TT681_MinRaw
        P5  = M1_TT681_MaxRaw
        P6  = M1_TT681_MinEU
        P7  = M1_TT681_MaxEU
        P8  = M1_TT681_ScaleWidth
        P9  = M1_TT681_Raw
        P10 = M1_TT681_Vl
        P11 = M1_TT681_Percent
        P12 = M1_ChDtTrg215
        P13 = M1_TT681_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM030_CtWdSet1
        P1 =  M1_RM030_CtWdSet2
        P2 =  M1_RM030_MinRaw
        P3 =  M1_RM030_MaxRaw
        P4 =  M1_RM030_MinEU
        P5 =  M1_RM030_MaxEU
        P6 =  M1_RM030_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM030_CtWdSet1
        P1  = M1_RM030_CtWdSet2
        P2  = M1_RM030_CtWd
        P3  = M1_RM030_CtWdSend
        P4  = M1_RM030_MinRaw
        P5  = M1_RM030_MaxRaw
        P6  = M1_RM030_MinEU
        P7  = M1_RM030_MaxEU
        P8  = M1_RM030_ScaleWidth
        P9  = M1_RM030_Raw
        P10 = M1_RM030_Vl
        P11 = M1_RM030_Percent
        P12 = M1_ChDtTrg215
        P13 = M1_RM030_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM031_CtWdSet1
        P1 =  M1_RM031_CtWdSet2
        P2 =  M1_RM031_MinRaw
        P3 =  M1_RM031_MaxRaw
        P4 =  M1_RM031_MinEU
        P5 =  M1_RM031_MaxEU
        P6 =  M1_RM031_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM031_CtWdSet1
        P1  = M1_RM031_CtWdSet2
        P2  = M1_RM031_CtWd
        P3  = M1_RM031_CtWdSend
        P4  = M1_RM031_MinRaw
        P5  = M1_RM031_MaxRaw
        P6  = M1_RM031_MinEU
        P7  = M1_RM031_MaxEU
        P8  = M1_RM031_ScaleWidth
        P9  = M1_RM031_Raw
        P10 = M1_RM031_Vl
        P11 = M1_RM031_Percent
        P12 = M1_ChDtTrg215
        P13 = M1_RM031_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT703_CtWdSet1
        P1 =  M1_YT703_CtWdSet2
        P2 =  M1_YT703_MinRaw
        P3 =  M1_YT703_MaxRaw
        P4 =  M1_YT703_MinEU
        P5 =  M1_YT703_MaxEU
        P6 =  M1_YT703_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT703_CtWdSet1
        P1  = M1_YT703_CtWdSet2
        P2  = M1_YT703_CtWd
        P3  = M1_YT703_CtWdSend
        P4  = M1_YT703_MinRaw
        P5  = M1_YT703_MaxRaw
        P6  = M1_YT703_MinEU
        P7  = M1_YT703_MaxEU
        P8  = M1_YT703_ScaleWidth
        P9  = M1_YT703_Raw
        P10 = M1_YT703_Vl
        P11 = M1_YT703_Percent
        P12 = M1_ChDtTrg216
        P13 = M1_YT703_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT704_CtWdSet1
        P1 =  M1_YT704_CtWdSet2
        P2 =  M1_YT704_MinRaw
        P3 =  M1_YT704_MaxRaw
        P4 =  M1_YT704_MinEU
        P5 =  M1_YT704_MaxEU
        P6 =  M1_YT704_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT704_CtWdSet1
        P1  = M1_YT704_CtWdSet2
        P2  = M1_YT704_CtWd
        P3  = M1_YT704_CtWdSend
        P4  = M1_YT704_MinRaw
        P5  = M1_YT704_MaxRaw
        P6  = M1_YT704_MinEU
        P7  = M1_YT704_MaxEU
        P8  = M1_YT704_ScaleWidth
        P9  = M1_YT704_Raw
        P10 = M1_YT704_Vl
        P11 = M1_YT704_Percent
        P12 = M1_ChDtTrg216
        P13 = M1_YT704_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT802_CtWdSet1
        P1 =  M1_YT802_CtWdSet2
        P2 =  M1_YT802_MinRaw
        P3 =  M1_YT802_MaxRaw
        P4 =  M1_YT802_MinEU
        P5 =  M1_YT802_MaxEU
        P6 =  M1_YT802_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT802_CtWdSet1
        P1  = M1_YT802_CtWdSet2
        P2  = M1_YT802_CtWd
        P3  = M1_YT802_CtWdSend
        P4  = M1_YT802_MinRaw
        P5  = M1_YT802_MaxRaw
        P6  = M1_YT802_MinEU
        P7  = M1_YT802_MaxEU
        P8  = M1_YT802_ScaleWidth
        P9  = M1_YT802_Raw
        P10 = M1_YT802_Vl
        P11 = M1_YT802_Percent
        P12 = M1_ChDtTrg216
        P13 = M1_YT802_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT803_CtWdSet1
        P1 =  M1_YT803_CtWdSet2
        P2 =  M1_YT803_MinRaw
        P3 =  M1_YT803_MaxRaw
        P4 =  M1_YT803_MinEU
        P5 =  M1_YT803_MaxEU
        P6 =  M1_YT803_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT803_CtWdSet1
        P1  = M1_YT803_CtWdSet2
        P2  = M1_YT803_CtWd
        P3  = M1_YT803_CtWdSend
        P4  = M1_YT803_MinRaw
        P5  = M1_YT803_MaxRaw
        P6  = M1_YT803_MinEU
        P7  = M1_YT803_MaxEU
        P8  = M1_YT803_ScaleWidth
        P9  = M1_YT803_Raw
        P10 = M1_YT803_Vl
        P11 = M1_YT803_Percent
        P12 = M1_ChDtTrg216
        P13 = M1_YT803_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM036_CtWdSet1
        P1 =  M1_RM036_CtWdSet2
        P2 =  M1_RM036_MinRaw
        P3 =  M1_RM036_MaxRaw
        P4 =  M1_RM036_MinEU
        P5 =  M1_RM036_MaxEU
        P6 =  M1_RM036_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM036_CtWdSet1
        P1  = M1_RM036_CtWdSet2
        P2  = M1_RM036_CtWd
        P3  = M1_RM036_CtWdSend
        P4  = M1_RM036_MinRaw
        P5  = M1_RM036_MaxRaw
        P6  = M1_RM036_MinEU
        P7  = M1_RM036_MaxEU
        P8  = M1_RM036_ScaleWidth
        P9  = M1_RM036_Raw
        P10 = M1_RM036_Vl
        P11 = M1_RM036_Percent
        P12 = M1_ChDtTrg217
        P13 = M1_RM036_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM037_CtWdSet1
        P1 =  M1_RM037_CtWdSet2
        P2 =  M1_RM037_MinRaw
        P3 =  M1_RM037_MaxRaw
        P4 =  M1_RM037_MinEU
        P5 =  M1_RM037_MaxEU
        P6 =  M1_RM037_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM037_CtWdSet1
        P1  = M1_RM037_CtWdSet2
        P2  = M1_RM037_CtWd
        P3  = M1_RM037_CtWdSend
        P4  = M1_RM037_MinRaw
        P5  = M1_RM037_MaxRaw
        P6  = M1_RM037_MinEU
        P7  = M1_RM037_MaxEU
        P8  = M1_RM037_ScaleWidth
        P9  = M1_RM037_Raw
        P10 = M1_RM037_Vl
        P11 = M1_RM037_Percent
        P12 = M1_ChDtTrg217
        P13 = M1_RM037_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM038_CtWdSet1
        P1 =  M1_RM038_CtWdSet2
        P2 =  M1_RM038_MinRaw
        P3 =  M1_RM038_MaxRaw
        P4 =  M1_RM038_MinEU
        P5 =  M1_RM038_MaxEU
        P6 =  M1_RM038_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM038_CtWdSet1
        P1  = M1_RM038_CtWdSet2
        P2  = M1_RM038_CtWd
        P3  = M1_RM038_CtWdSend
        P4  = M1_RM038_MinRaw
        P5  = M1_RM038_MaxRaw
        P6  = M1_RM038_MinEU
        P7  = M1_RM038_MaxEU
        P8  = M1_RM038_ScaleWidth
        P9  = M1_RM038_Raw
        P10 = M1_RM038_Vl
        P11 = M1_RM038_Percent
        P12 = M1_ChDtTrg217
        P13 = M1_RM038_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM039_CtWdSet1
        P1 =  M1_RM039_CtWdSet2
        P2 =  M1_RM039_MinRaw
        P3 =  M1_RM039_MaxRaw
        P4 =  M1_RM039_MinEU
        P5 =  M1_RM039_MaxEU
        P6 =  M1_RM039_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM039_CtWdSet1
        P1  = M1_RM039_CtWdSet2
        P2  = M1_RM039_CtWd
        P3  = M1_RM039_CtWdSend
        P4  = M1_RM039_MinRaw
        P5  = M1_RM039_MaxRaw
        P6  = M1_RM039_MinEU
        P7  = M1_RM039_MaxEU
        P8  = M1_RM039_ScaleWidth
        P9  = M1_RM039_Raw
        P10 = M1_RM039_Vl
        P11 = M1_RM039_Percent
        P12 = M1_ChDtTrg217
        P13 = M1_RM039_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT711_CtWdSet1
        P1 =  M1_CT711_CtWdSet2
        P2 =  M1_CT711_MinRaw
        P3 =  M1_CT711_MaxRaw
        P4 =  M1_CT711_MinEU
        P5 =  M1_CT711_MaxEU
        P6 =  M1_CT711_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT711_CtWdSet1
        P1  = M1_CT711_CtWdSet2
        P2  = M1_CT711_CtWd
        P3  = M1_CT711_CtWdSend
        P4  = M1_CT711_MinRaw
        P5  = M1_CT711_MaxRaw
        P6  = M1_CT711_MinEU
        P7  = M1_CT711_MaxEU
        P8  = M1_CT711_ScaleWidth
        P9  = M1_CT711_Raw
        P10 = M1_CT711_Vl
        P11 = M1_CT711_Percent
        P12 = M1_ChDtTrg218
        P13 = M1_CT711_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT721_CtWdSet1
        P1 =  M1_CT721_CtWdSet2
        P2 =  M1_CT721_MinRaw
        P3 =  M1_CT721_MaxRaw
        P4 =  M1_CT721_MinEU
        P5 =  M1_CT721_MaxEU
        P6 =  M1_CT721_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT721_CtWdSet1
        P1  = M1_CT721_CtWdSet2
        P2  = M1_CT721_CtWd
        P3  = M1_CT721_CtWdSend
        P4  = M1_CT721_MinRaw
        P5  = M1_CT721_MaxRaw
        P6  = M1_CT721_MinEU
        P7  = M1_CT721_MaxEU
        P8  = M1_CT721_ScaleWidth
        P9  = M1_CT721_Raw
        P10 = M1_CT721_Vl
        P11 = M1_CT721_Percent
        P12 = M1_ChDtTrg218
        P13 = M1_CT721_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT731_CtWdSet1
        P1 =  M1_CT731_CtWdSet2
        P2 =  M1_CT731_MinRaw
        P3 =  M1_CT731_MaxRaw
        P4 =  M1_CT731_MinEU
        P5 =  M1_CT731_MaxEU
        P6 =  M1_CT731_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT731_CtWdSet1
        P1  = M1_CT731_CtWdSet2
        P2  = M1_CT731_CtWd
        P3  = M1_CT731_CtWdSend
        P4  = M1_CT731_MinRaw
        P5  = M1_CT731_MaxRaw
        P6  = M1_CT731_MinEU
        P7  = M1_CT731_MaxEU
        P8  = M1_CT731_ScaleWidth
        P9  = M1_CT731_Raw
        P10 = M1_CT731_Vl
        P11 = M1_CT731_Percent
        P12 = M1_ChDtTrg218
        P13 = M1_CT731_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT741_CtWdSet1
        P1 =  M1_CT741_CtWdSet2
        P2 =  M1_CT741_MinRaw
        P3 =  M1_CT741_MaxRaw
        P4 =  M1_CT741_MinEU
        P5 =  M1_CT741_MaxEU
        P6 =  M1_CT741_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT741_CtWdSet1
        P1  = M1_CT741_CtWdSet2
        P2  = M1_CT741_CtWd
        P3  = M1_CT741_CtWdSend
        P4  = M1_CT741_MinRaw
        P5  = M1_CT741_MaxRaw
        P6  = M1_CT741_MinEU
        P7  = M1_CT741_MaxEU
        P8  = M1_CT741_ScaleWidth
        P9  = M1_CT741_Raw
        P10 = M1_CT741_Vl
        P11 = M1_CT741_Percent
        P12 = M1_ChDtTrg218
        P13 = M1_CT741_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM044_CtWdSet1
        P1 =  M1_RM044_CtWdSet2
        P2 =  M1_RM044_MinRaw
        P3 =  M1_RM044_MaxRaw
        P4 =  M1_RM044_MinEU
        P5 =  M1_RM044_MaxEU
        P6 =  M1_RM044_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM044_CtWdSet1
        P1  = M1_RM044_CtWdSet2
        P2  = M1_RM044_CtWd
        P3  = M1_RM044_CtWdSend
        P4  = M1_RM044_MinRaw
        P5  = M1_RM044_MaxRaw
        P6  = M1_RM044_MinEU
        P7  = M1_RM044_MaxEU
        P8  = M1_RM044_ScaleWidth
        P9  = M1_RM044_Raw
        P10 = M1_RM044_Vl
        P11 = M1_RM044_Percent
        P12 = M1_ChDtTrg219
        P13 = M1_RM044_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM045_CtWdSet1
        P1 =  M1_RM045_CtWdSet2
        P2 =  M1_RM045_MinRaw
        P3 =  M1_RM045_MaxRaw
        P4 =  M1_RM045_MinEU
        P5 =  M1_RM045_MaxEU
        P6 =  M1_RM045_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM045_CtWdSet1
        P1  = M1_RM045_CtWdSet2
        P2  = M1_RM045_CtWd
        P3  = M1_RM045_CtWdSend
        P4  = M1_RM045_MinRaw
        P5  = M1_RM045_MaxRaw
        P6  = M1_RM045_MinEU
        P7  = M1_RM045_MaxEU
        P8  = M1_RM045_ScaleWidth
        P9  = M1_RM045_Raw
        P10 = M1_RM045_Vl
        P11 = M1_RM045_Percent
        P12 = M1_ChDtTrg219
        P13 = M1_RM045_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM046_CtWdSet1
        P1 =  M1_RM046_CtWdSet2
        P2 =  M1_RM046_MinRaw
        P3 =  M1_RM046_MaxRaw
        P4 =  M1_RM046_MinEU
        P5 =  M1_RM046_MaxEU
        P6 =  M1_RM046_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM046_CtWdSet1
        P1  = M1_RM046_CtWdSet2
        P2  = M1_RM046_CtWd
        P3  = M1_RM046_CtWdSend
        P4  = M1_RM046_MinRaw
        P5  = M1_RM046_MaxRaw
        P6  = M1_RM046_MinEU
        P7  = M1_RM046_MaxEU
        P8  = M1_RM046_ScaleWidth
        P9  = M1_RM046_Raw
        P10 = M1_RM046_Vl
        P11 = M1_RM046_Percent
        P12 = M1_ChDtTrg219
        P13 = M1_RM046_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM047_CtWdSet1
        P1 =  M1_RM047_CtWdSet2
        P2 =  M1_RM047_MinRaw
        P3 =  M1_RM047_MaxRaw
        P4 =  M1_RM047_MinEU
        P5 =  M1_RM047_MaxEU
        P6 =  M1_RM047_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM047_CtWdSet1
        P1  = M1_RM047_CtWdSet2
        P2  = M1_RM047_CtWd
        P3  = M1_RM047_CtWdSend
        P4  = M1_RM047_MinRaw
        P5  = M1_RM047_MaxRaw
        P6  = M1_RM047_MinEU
        P7  = M1_RM047_MaxEU
        P8  = M1_RM047_ScaleWidth
        P9  = M1_RM047_Raw
        P10 = M1_RM047_Vl
        P11 = M1_RM047_Percent
        P12 = M1_ChDtTrg219
        P13 = M1_RM047_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT551_CtWdSet1
        P1 =  M1_PT551_CtWdSet2
        P2 =  M1_PT551_MinRaw
        P3 =  M1_PT551_MaxRaw
        P4 =  M1_PT551_MinEU
        P5 =  M1_PT551_MaxEU
        P6 =  M1_PT551_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT551_CtWdSet1
        P1  = M1_PT551_CtWdSet2
        P2  = M1_PT551_CtWd
        P3  = M1_PT551_CtWdSend
        P4  = M1_PT551_MinRaw
        P5  = M1_PT551_MaxRaw
        P6  = M1_PT551_MinEU
        P7  = M1_PT551_MaxEU
        P8  = M1_PT551_ScaleWidth
        P9  = M1_PT551_Raw
        P10 = M1_PT551_Vl
        P11 = M1_PT551_Percent
        P12 = M1_ChDtTrg220
        P13 = M1_PT551_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT561_CtWdSet1
        P1 =  M1_PT561_CtWdSet2
        P2 =  M1_PT561_MinRaw
        P3 =  M1_PT561_MaxRaw
        P4 =  M1_PT561_MinEU
        P5 =  M1_PT561_MaxEU
        P6 =  M1_PT561_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT561_CtWdSet1
        P1  = M1_PT561_CtWdSet2
        P2  = M1_PT561_CtWd
        P3  = M1_PT561_CtWdSend
        P4  = M1_PT561_MinRaw
        P5  = M1_PT561_MaxRaw
        P6  = M1_PT561_MinEU
        P7  = M1_PT561_MaxEU
        P8  = M1_PT561_ScaleWidth
        P9  = M1_PT561_Raw
        P10 = M1_PT561_Vl
        P11 = M1_PT561_Percent
        P12 = M1_ChDtTrg220
        P13 = M1_PT561_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT571_CtWdSet1
        P1 =  M1_PT571_CtWdSet2
        P2 =  M1_PT571_MinRaw
        P3 =  M1_PT571_MaxRaw
        P4 =  M1_PT571_MinEU
        P5 =  M1_PT571_MaxEU
        P6 =  M1_PT571_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT571_CtWdSet1
        P1  = M1_PT571_CtWdSet2
        P2  = M1_PT571_CtWd
        P3  = M1_PT571_CtWdSend
        P4  = M1_PT571_MinRaw
        P5  = M1_PT571_MaxRaw
        P6  = M1_PT571_MinEU
        P7  = M1_PT571_MaxEU
        P8  = M1_PT571_ScaleWidth
        P9  = M1_PT571_Raw
        P10 = M1_PT571_Vl
        P11 = M1_PT571_Percent
        P12 = M1_ChDtTrg220
        P13 = M1_PT571_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT581_CtWdSet1
        P1 =  M1_PT581_CtWdSet2
        P2 =  M1_PT581_MinRaw
        P3 =  M1_PT581_MaxRaw
        P4 =  M1_PT581_MinEU
        P5 =  M1_PT581_MaxEU
        P6 =  M1_PT581_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT581_CtWdSet1
        P1  = M1_PT581_CtWdSet2
        P2  = M1_PT581_CtWd
        P3  = M1_PT581_CtWdSend
        P4  = M1_PT581_MinRaw
        P5  = M1_PT581_MaxRaw
        P6  = M1_PT581_MinEU
        P7  = M1_PT581_MaxEU
        P8  = M1_PT581_ScaleWidth
        P9  = M1_PT581_Raw
        P10 = M1_PT581_Vl
        P11 = M1_PT581_Percent
        P12 = M1_ChDtTrg220
        P13 = M1_PT581_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT591_CtWdSet1
        P1 =  M1_PT591_CtWdSet2
        P2 =  M1_PT591_MinRaw
        P3 =  M1_PT591_MaxRaw
        P4 =  M1_PT591_MinEU
        P5 =  M1_PT591_MaxEU
        P6 =  M1_PT591_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT591_CtWdSet1
        P1  = M1_PT591_CtWdSet2
        P2  = M1_PT591_CtWd
        P3  = M1_PT591_CtWdSend
        P4  = M1_PT591_MinRaw
        P5  = M1_PT591_MaxRaw
        P6  = M1_PT591_MinEU
        P7  = M1_PT591_MaxEU
        P8  = M1_PT591_ScaleWidth
        P9  = M1_PT591_Raw
        P10 = M1_PT591_Vl
        P11 = M1_PT591_Percent
        P12 = M1_ChDtTrg221
        P13 = M1_PT591_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM053_CtWdSet1
        P1 =  M1_RM053_CtWdSet2
        P2 =  M1_RM053_MinRaw
        P3 =  M1_RM053_MaxRaw
        P4 =  M1_RM053_MinEU
        P5 =  M1_RM053_MaxEU
        P6 =  M1_RM053_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM053_CtWdSet1
        P1  = M1_RM053_CtWdSet2
        P2  = M1_RM053_CtWd
        P3  = M1_RM053_CtWdSend
        P4  = M1_RM053_MinRaw
        P5  = M1_RM053_MaxRaw
        P6  = M1_RM053_MinEU
        P7  = M1_RM053_MaxEU
        P8  = M1_RM053_ScaleWidth
        P9  = M1_RM053_Raw
        P10 = M1_RM053_Vl
        P11 = M1_RM053_Percent
        P12 = M1_ChDtTrg221
        P13 = M1_RM053_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM054_CtWdSet1
        P1 =  M1_RM054_CtWdSet2
        P2 =  M1_RM054_MinRaw
        P3 =  M1_RM054_MaxRaw
        P4 =  M1_RM054_MinEU
        P5 =  M1_RM054_MaxEU
        P6 =  M1_RM054_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM054_CtWdSet1
        P1  = M1_RM054_CtWdSet2
        P2  = M1_RM054_CtWd
        P3  = M1_RM054_CtWdSend
        P4  = M1_RM054_MinRaw
        P5  = M1_RM054_MaxRaw
        P6  = M1_RM054_MinEU
        P7  = M1_RM054_MaxEU
        P8  = M1_RM054_ScaleWidth
        P9  = M1_RM054_Raw
        P10 = M1_RM054_Vl
        P11 = M1_RM054_Percent
        P12 = M1_ChDtTrg221
        P13 = M1_RM054_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM055_CtWdSet1
        P1 =  M1_RM055_CtWdSet2
        P2 =  M1_RM055_MinRaw
        P3 =  M1_RM055_MaxRaw
        P4 =  M1_RM055_MinEU
        P5 =  M1_RM055_MaxEU
        P6 =  M1_RM055_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM055_CtWdSet1
        P1  = M1_RM055_CtWdSet2
        P2  = M1_RM055_CtWd
        P3  = M1_RM055_CtWdSend
        P4  = M1_RM055_MinRaw
        P5  = M1_RM055_MaxRaw
        P6  = M1_RM055_MinEU
        P7  = M1_RM055_MaxEU
        P8  = M1_RM055_ScaleWidth
        P9  = M1_RM055_Raw
        P10 = M1_RM055_Vl
        P11 = M1_RM055_Percent
        P12 = M1_ChDtTrg221
        P13 = M1_RM055_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT551_CtWdSet1
        P1 =  M1_TT551_CtWdSet2
        P2 =  M1_TT551_MinRaw
        P3 =  M1_TT551_MaxRaw
        P4 =  M1_TT551_MinEU
        P5 =  M1_TT551_MaxEU
        P6 =  M1_TT551_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT551_CtWdSet1
        P1  = M1_TT551_CtWdSet2
        P2  = M1_TT551_CtWd
        P3  = M1_TT551_CtWdSend
        P4  = M1_TT551_MinRaw
        P5  = M1_TT551_MaxRaw
        P6  = M1_TT551_MinEU
        P7  = M1_TT551_MaxEU
        P8  = M1_TT551_ScaleWidth
        P9  = M1_TT551_Raw
        P10 = M1_TT551_Vl
        P11 = M1_TT551_Percent
        P12 = M1_ChDtTrg222
        P13 = M1_TT551_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT552_CtWdSet1
        P1 =  M1_TT552_CtWdSet2
        P2 =  M1_TT552_MinRaw
        P3 =  M1_TT552_MaxRaw
        P4 =  M1_TT552_MinEU
        P5 =  M1_TT552_MaxEU
        P6 =  M1_TT552_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT552_CtWdSet1
        P1  = M1_TT552_CtWdSet2
        P2  = M1_TT552_CtWd
        P3  = M1_TT552_CtWdSend
        P4  = M1_TT552_MinRaw
        P5  = M1_TT552_MaxRaw
        P6  = M1_TT552_MinEU
        P7  = M1_TT552_MaxEU
        P8  = M1_TT552_ScaleWidth
        P9  = M1_TT552_Raw
        P10 = M1_TT552_Vl
        P11 = M1_TT552_Percent
        P12 = M1_ChDtTrg222
        P13 = M1_TT552_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT553_CtWdSet1
        P1 =  M1_TT553_CtWdSet2
        P2 =  M1_TT553_MinRaw
        P3 =  M1_TT553_MaxRaw
        P4 =  M1_TT553_MinEU
        P5 =  M1_TT553_MaxEU
        P6 =  M1_TT553_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT553_CtWdSet1
        P1  = M1_TT553_CtWdSet2
        P2  = M1_TT553_CtWd
        P3  = M1_TT553_CtWdSend
        P4  = M1_TT553_MinRaw
        P5  = M1_TT553_MaxRaw
        P6  = M1_TT553_MinEU
        P7  = M1_TT553_MaxEU
        P8  = M1_TT553_ScaleWidth
        P9  = M1_TT553_Raw
        P10 = M1_TT553_Vl
        P11 = M1_TT553_Percent
        P12 = M1_ChDtTrg222
        P13 = M1_TT553_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT554_CtWdSet1
        P1 =  M1_TT554_CtWdSet2
        P2 =  M1_TT554_MinRaw
        P3 =  M1_TT554_MaxRaw
        P4 =  M1_TT554_MinEU
        P5 =  M1_TT554_MaxEU
        P6 =  M1_TT554_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT554_CtWdSet1
        P1  = M1_TT554_CtWdSet2
        P2  = M1_TT554_CtWd
        P3  = M1_TT554_CtWdSend
        P4  = M1_TT554_MinRaw
        P5  = M1_TT554_MaxRaw
        P6  = M1_TT554_MinEU
        P7  = M1_TT554_MaxEU
        P8  = M1_TT554_ScaleWidth
        P9  = M1_TT554_Raw
        P10 = M1_TT554_Vl
        P11 = M1_TT554_Percent
        P12 = M1_ChDtTrg222
        P13 = M1_TT554_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT555_CtWdSet1
        P1 =  M1_TT555_CtWdSet2
        P2 =  M1_TT555_MinRaw
        P3 =  M1_TT555_MaxRaw
        P4 =  M1_TT555_MinEU
        P5 =  M1_TT555_MaxEU
        P6 =  M1_TT555_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT555_CtWdSet1
        P1  = M1_TT555_CtWdSet2
        P2  = M1_TT555_CtWd
        P3  = M1_TT555_CtWdSend
        P4  = M1_TT555_MinRaw
        P5  = M1_TT555_MaxRaw
        P6  = M1_TT555_MinEU
        P7  = M1_TT555_MaxEU
        P8  = M1_TT555_ScaleWidth
        P9  = M1_TT555_Raw
        P10 = M1_TT555_Vl
        P11 = M1_TT555_Percent
        P12 = M1_ChDtTrg223
        P13 = M1_TT555_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT556_CtWdSet1
        P1 =  M1_TT556_CtWdSet2
        P2 =  M1_TT556_MinRaw
        P3 =  M1_TT556_MaxRaw
        P4 =  M1_TT556_MinEU
        P5 =  M1_TT556_MaxEU
        P6 =  M1_TT556_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT556_CtWdSet1
        P1  = M1_TT556_CtWdSet2
        P2  = M1_TT556_CtWd
        P3  = M1_TT556_CtWdSend
        P4  = M1_TT556_MinRaw
        P5  = M1_TT556_MaxRaw
        P6  = M1_TT556_MinEU
        P7  = M1_TT556_MaxEU
        P8  = M1_TT556_ScaleWidth
        P9  = M1_TT556_Raw
        P10 = M1_TT556_Vl
        P11 = M1_TT556_Percent
        P12 = M1_ChDtTrg223
        P13 = M1_TT556_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT561_CtWdSet1
        P1 =  M1_TT561_CtWdSet2
        P2 =  M1_TT561_MinRaw
        P3 =  M1_TT561_MaxRaw
        P4 =  M1_TT561_MinEU
        P5 =  M1_TT561_MaxEU
        P6 =  M1_TT561_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT561_CtWdSet1
        P1  = M1_TT561_CtWdSet2
        P2  = M1_TT561_CtWd
        P3  = M1_TT561_CtWdSend
        P4  = M1_TT561_MinRaw
        P5  = M1_TT561_MaxRaw
        P6  = M1_TT561_MinEU
        P7  = M1_TT561_MaxEU
        P8  = M1_TT561_ScaleWidth
        P9  = M1_TT561_Raw
        P10 = M1_TT561_Vl
        P11 = M1_TT561_Percent
        P12 = M1_ChDtTrg223
        P13 = M1_TT561_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT562_CtWdSet1
        P1 =  M1_TT562_CtWdSet2
        P2 =  M1_TT562_MinRaw
        P3 =  M1_TT562_MaxRaw
        P4 =  M1_TT562_MinEU
        P5 =  M1_TT562_MaxEU
        P6 =  M1_TT562_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT562_CtWdSet1
        P1  = M1_TT562_CtWdSet2
        P2  = M1_TT562_CtWd
        P3  = M1_TT562_CtWdSend
        P4  = M1_TT562_MinRaw
        P5  = M1_TT562_MaxRaw
        P6  = M1_TT562_MinEU
        P7  = M1_TT562_MaxEU
        P8  = M1_TT562_ScaleWidth
        P9  = M1_TT562_Raw
        P10 = M1_TT562_Vl
        P11 = M1_TT562_Percent
        P12 = M1_ChDtTrg223
        P13 = M1_TT562_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT563_CtWdSet1
        P1 =  M1_TT563_CtWdSet2
        P2 =  M1_TT563_MinRaw
        P3 =  M1_TT563_MaxRaw
        P4 =  M1_TT563_MinEU
        P5 =  M1_TT563_MaxEU
        P6 =  M1_TT563_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT563_CtWdSet1
        P1  = M1_TT563_CtWdSet2
        P2  = M1_TT563_CtWd
        P3  = M1_TT563_CtWdSend
        P4  = M1_TT563_MinRaw
        P5  = M1_TT563_MaxRaw
        P6  = M1_TT563_MinEU
        P7  = M1_TT563_MaxEU
        P8  = M1_TT563_ScaleWidth
        P9  = M1_TT563_Raw
        P10 = M1_TT563_Vl
        P11 = M1_TT563_Percent
        P12 = M1_ChDtTrg224
        P13 = M1_TT563_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT564_CtWdSet1
        P1 =  M1_TT564_CtWdSet2
        P2 =  M1_TT564_MinRaw
        P3 =  M1_TT564_MaxRaw
        P4 =  M1_TT564_MinEU
        P5 =  M1_TT564_MaxEU
        P6 =  M1_TT564_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT564_CtWdSet1
        P1  = M1_TT564_CtWdSet2
        P2  = M1_TT564_CtWd
        P3  = M1_TT564_CtWdSend
        P4  = M1_TT564_MinRaw
        P5  = M1_TT564_MaxRaw
        P6  = M1_TT564_MinEU
        P7  = M1_TT564_MaxEU
        P8  = M1_TT564_ScaleWidth
        P9  = M1_TT564_Raw
        P10 = M1_TT564_Vl
        P11 = M1_TT564_Percent
        P12 = M1_ChDtTrg224
        P13 = M1_TT564_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT565_CtWdSet1
        P1 =  M1_TT565_CtWdSet2
        P2 =  M1_TT565_MinRaw
        P3 =  M1_TT565_MaxRaw
        P4 =  M1_TT565_MinEU
        P5 =  M1_TT565_MaxEU
        P6 =  M1_TT565_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT565_CtWdSet1
        P1  = M1_TT565_CtWdSet2
        P2  = M1_TT565_CtWd
        P3  = M1_TT565_CtWdSend
        P4  = M1_TT565_MinRaw
        P5  = M1_TT565_MaxRaw
        P6  = M1_TT565_MinEU
        P7  = M1_TT565_MaxEU
        P8  = M1_TT565_ScaleWidth
        P9  = M1_TT565_Raw
        P10 = M1_TT565_Vl
        P11 = M1_TT565_Percent
        P12 = M1_ChDtTrg224
        P13 = M1_TT565_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT566_CtWdSet1
        P1 =  M1_TT566_CtWdSet2
        P2 =  M1_TT566_MinRaw
        P3 =  M1_TT566_MaxRaw
        P4 =  M1_TT566_MinEU
        P5 =  M1_TT566_MaxEU
        P6 =  M1_TT566_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT566_CtWdSet1
        P1  = M1_TT566_CtWdSet2
        P2  = M1_TT566_CtWd
        P3  = M1_TT566_CtWdSend
        P4  = M1_TT566_MinRaw
        P5  = M1_TT566_MaxRaw
        P6  = M1_TT566_MinEU
        P7  = M1_TT566_MaxEU
        P8  = M1_TT566_ScaleWidth
        P9  = M1_TT566_Raw
        P10 = M1_TT566_Vl
        P11 = M1_TT566_Percent
        P12 = M1_ChDtTrg224
        P13 = M1_TT566_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT571_CtWdSet1
        P1 =  M1_TT571_CtWdSet2
        P2 =  M1_TT571_MinRaw
        P3 =  M1_TT571_MaxRaw
        P4 =  M1_TT571_MinEU
        P5 =  M1_TT571_MaxEU
        P6 =  M1_TT571_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT571_CtWdSet1
        P1  = M1_TT571_CtWdSet2
        P2  = M1_TT571_CtWd
        P3  = M1_TT571_CtWdSend
        P4  = M1_TT571_MinRaw
        P5  = M1_TT571_MaxRaw
        P6  = M1_TT571_MinEU
        P7  = M1_TT571_MaxEU
        P8  = M1_TT571_ScaleWidth
        P9  = M1_TT571_Raw
        P10 = M1_TT571_Vl
        P11 = M1_TT571_Percent
        P12 = M1_ChDtTrg225
        P13 = M1_TT571_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT572_CtWdSet1
        P1 =  M1_TT572_CtWdSet2
        P2 =  M1_TT572_MinRaw
        P3 =  M1_TT572_MaxRaw
        P4 =  M1_TT572_MinEU
        P5 =  M1_TT572_MaxEU
        P6 =  M1_TT572_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT572_CtWdSet1
        P1  = M1_TT572_CtWdSet2
        P2  = M1_TT572_CtWd
        P3  = M1_TT572_CtWdSend
        P4  = M1_TT572_MinRaw
        P5  = M1_TT572_MaxRaw
        P6  = M1_TT572_MinEU
        P7  = M1_TT572_MaxEU
        P8  = M1_TT572_ScaleWidth
        P9  = M1_TT572_Raw
        P10 = M1_TT572_Vl
        P11 = M1_TT572_Percent
        P12 = M1_ChDtTrg225
        P13 = M1_TT572_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT573_CtWdSet1
        P1 =  M1_TT573_CtWdSet2
        P2 =  M1_TT573_MinRaw
        P3 =  M1_TT573_MaxRaw
        P4 =  M1_TT573_MinEU
        P5 =  M1_TT573_MaxEU
        P6 =  M1_TT573_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT573_CtWdSet1
        P1  = M1_TT573_CtWdSet2
        P2  = M1_TT573_CtWd
        P3  = M1_TT573_CtWdSend
        P4  = M1_TT573_MinRaw
        P5  = M1_TT573_MaxRaw
        P6  = M1_TT573_MinEU
        P7  = M1_TT573_MaxEU
        P8  = M1_TT573_ScaleWidth
        P9  = M1_TT573_Raw
        P10 = M1_TT573_Vl
        P11 = M1_TT573_Percent
        P12 = M1_ChDtTrg225
        P13 = M1_TT573_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT574_CtWdSet1
        P1 =  M1_TT574_CtWdSet2
        P2 =  M1_TT574_MinRaw
        P3 =  M1_TT574_MaxRaw
        P4 =  M1_TT574_MinEU
        P5 =  M1_TT574_MaxEU
        P6 =  M1_TT574_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT574_CtWdSet1
        P1  = M1_TT574_CtWdSet2
        P2  = M1_TT574_CtWd
        P3  = M1_TT574_CtWdSend
        P4  = M1_TT574_MinRaw
        P5  = M1_TT574_MaxRaw
        P6  = M1_TT574_MinEU
        P7  = M1_TT574_MaxEU
        P8  = M1_TT574_ScaleWidth
        P9  = M1_TT574_Raw
        P10 = M1_TT574_Vl
        P11 = M1_TT574_Percent
        P12 = M1_ChDtTrg225
        P13 = M1_TT574_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT575_CtWdSet1
        P1 =  M1_TT575_CtWdSet2
        P2 =  M1_TT575_MinRaw
        P3 =  M1_TT575_MaxRaw
        P4 =  M1_TT575_MinEU
        P5 =  M1_TT575_MaxEU
        P6 =  M1_TT575_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT575_CtWdSet1
        P1  = M1_TT575_CtWdSet2
        P2  = M1_TT575_CtWd
        P3  = M1_TT575_CtWdSend
        P4  = M1_TT575_MinRaw
        P5  = M1_TT575_MaxRaw
        P6  = M1_TT575_MinEU
        P7  = M1_TT575_MaxEU
        P8  = M1_TT575_ScaleWidth
        P9  = M1_TT575_Raw
        P10 = M1_TT575_Vl
        P11 = M1_TT575_Percent
        P12 = M1_ChDtTrg226
        P13 = M1_TT575_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT576_CtWdSet1
        P1 =  M1_TT576_CtWdSet2
        P2 =  M1_TT576_MinRaw
        P3 =  M1_TT576_MaxRaw
        P4 =  M1_TT576_MinEU
        P5 =  M1_TT576_MaxEU
        P6 =  M1_TT576_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT576_CtWdSet1
        P1  = M1_TT576_CtWdSet2
        P2  = M1_TT576_CtWd
        P3  = M1_TT576_CtWdSend
        P4  = M1_TT576_MinRaw
        P5  = M1_TT576_MaxRaw
        P6  = M1_TT576_MinEU
        P7  = M1_TT576_MaxEU
        P8  = M1_TT576_ScaleWidth
        P9  = M1_TT576_Raw
        P10 = M1_TT576_Vl
        P11 = M1_TT576_Percent
        P12 = M1_ChDtTrg226
        P13 = M1_TT576_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT581_CtWdSet1
        P1 =  M1_TT581_CtWdSet2
        P2 =  M1_TT581_MinRaw
        P3 =  M1_TT581_MaxRaw
        P4 =  M1_TT581_MinEU
        P5 =  M1_TT581_MaxEU
        P6 =  M1_TT581_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT581_CtWdSet1
        P1  = M1_TT581_CtWdSet2
        P2  = M1_TT581_CtWd
        P3  = M1_TT581_CtWdSend
        P4  = M1_TT581_MinRaw
        P5  = M1_TT581_MaxRaw
        P6  = M1_TT581_MinEU
        P7  = M1_TT581_MaxEU
        P8  = M1_TT581_ScaleWidth
        P9  = M1_TT581_Raw
        P10 = M1_TT581_Vl
        P11 = M1_TT581_Percent
        P12 = M1_ChDtTrg226
        P13 = M1_TT581_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT582_CtWdSet1
        P1 =  M1_TT582_CtWdSet2
        P2 =  M1_TT582_MinRaw
        P3 =  M1_TT582_MaxRaw
        P4 =  M1_TT582_MinEU
        P5 =  M1_TT582_MaxEU
        P6 =  M1_TT582_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT582_CtWdSet1
        P1  = M1_TT582_CtWdSet2
        P2  = M1_TT582_CtWd
        P3  = M1_TT582_CtWdSend
        P4  = M1_TT582_MinRaw
        P5  = M1_TT582_MaxRaw
        P6  = M1_TT582_MinEU
        P7  = M1_TT582_MaxEU
        P8  = M1_TT582_ScaleWidth
        P9  = M1_TT582_Raw
        P10 = M1_TT582_Vl
        P11 = M1_TT582_Percent
        P12 = M1_ChDtTrg226
        P13 = M1_TT582_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT583_CtWdSet1
        P1 =  M1_TT583_CtWdSet2
        P2 =  M1_TT583_MinRaw
        P3 =  M1_TT583_MaxRaw
        P4 =  M1_TT583_MinEU
        P5 =  M1_TT583_MaxEU
        P6 =  M1_TT583_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT583_CtWdSet1
        P1  = M1_TT583_CtWdSet2
        P2  = M1_TT583_CtWd
        P3  = M1_TT583_CtWdSend
        P4  = M1_TT583_MinRaw
        P5  = M1_TT583_MaxRaw
        P6  = M1_TT583_MinEU
        P7  = M1_TT583_MaxEU
        P8  = M1_TT583_ScaleWidth
        P9  = M1_TT583_Raw
        P10 = M1_TT583_Vl
        P11 = M1_TT583_Percent
        P12 = M1_ChDtTrg227
        P13 = M1_TT583_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT584_CtWdSet1
        P1 =  M1_TT584_CtWdSet2
        P2 =  M1_TT584_MinRaw
        P3 =  M1_TT584_MaxRaw
        P4 =  M1_TT584_MinEU
        P5 =  M1_TT584_MaxEU
        P6 =  M1_TT584_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT584_CtWdSet1
        P1  = M1_TT584_CtWdSet2
        P2  = M1_TT584_CtWd
        P3  = M1_TT584_CtWdSend
        P4  = M1_TT584_MinRaw
        P5  = M1_TT584_MaxRaw
        P6  = M1_TT584_MinEU
        P7  = M1_TT584_MaxEU
        P8  = M1_TT584_ScaleWidth
        P9  = M1_TT584_Raw
        P10 = M1_TT584_Vl
        P11 = M1_TT584_Percent
        P12 = M1_ChDtTrg227
        P13 = M1_TT584_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT585_CtWdSet1
        P1 =  M1_TT585_CtWdSet2
        P2 =  M1_TT585_MinRaw
        P3 =  M1_TT585_MaxRaw
        P4 =  M1_TT585_MinEU
        P5 =  M1_TT585_MaxEU
        P6 =  M1_TT585_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT585_CtWdSet1
        P1  = M1_TT585_CtWdSet2
        P2  = M1_TT585_CtWd
        P3  = M1_TT585_CtWdSend
        P4  = M1_TT585_MinRaw
        P5  = M1_TT585_MaxRaw
        P6  = M1_TT585_MinEU
        P7  = M1_TT585_MaxEU
        P8  = M1_TT585_ScaleWidth
        P9  = M1_TT585_Raw
        P10 = M1_TT585_Vl
        P11 = M1_TT585_Percent
        P12 = M1_ChDtTrg227
        P13 = M1_TT585_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT586_CtWdSet1
        P1 =  M1_TT586_CtWdSet2
        P2 =  M1_TT586_MinRaw
        P3 =  M1_TT586_MaxRaw
        P4 =  M1_TT586_MinEU
        P5 =  M1_TT586_MaxEU
        P6 =  M1_TT586_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT586_CtWdSet1
        P1  = M1_TT586_CtWdSet2
        P2  = M1_TT586_CtWd
        P3  = M1_TT586_CtWdSend
        P4  = M1_TT586_MinRaw
        P5  = M1_TT586_MaxRaw
        P6  = M1_TT586_MinEU
        P7  = M1_TT586_MaxEU
        P8  = M1_TT586_ScaleWidth
        P9  = M1_TT586_Raw
        P10 = M1_TT586_Vl
        P11 = M1_TT586_Percent
        P12 = M1_ChDtTrg227
        P13 = M1_TT586_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT591_CtWdSet1
        P1 =  M1_TT591_CtWdSet2
        P2 =  M1_TT591_MinRaw
        P3 =  M1_TT591_MaxRaw
        P4 =  M1_TT591_MinEU
        P5 =  M1_TT591_MaxEU
        P6 =  M1_TT591_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT591_CtWdSet1
        P1  = M1_TT591_CtWdSet2
        P2  = M1_TT591_CtWd
        P3  = M1_TT591_CtWdSend
        P4  = M1_TT591_MinRaw
        P5  = M1_TT591_MaxRaw
        P6  = M1_TT591_MinEU
        P7  = M1_TT591_MaxEU
        P8  = M1_TT591_ScaleWidth
        P9  = M1_TT591_Raw
        P10 = M1_TT591_Vl
        P11 = M1_TT591_Percent
        P12 = M1_ChDtTrg228
        P13 = M1_TT591_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT592_CtWdSet1
        P1 =  M1_TT592_CtWdSet2
        P2 =  M1_TT592_MinRaw
        P3 =  M1_TT592_MaxRaw
        P4 =  M1_TT592_MinEU
        P5 =  M1_TT592_MaxEU
        P6 =  M1_TT592_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT592_CtWdSet1
        P1  = M1_TT592_CtWdSet2
        P2  = M1_TT592_CtWd
        P3  = M1_TT592_CtWdSend
        P4  = M1_TT592_MinRaw
        P5  = M1_TT592_MaxRaw
        P6  = M1_TT592_MinEU
        P7  = M1_TT592_MaxEU
        P8  = M1_TT592_ScaleWidth
        P9  = M1_TT592_Raw
        P10 = M1_TT592_Vl
        P11 = M1_TT592_Percent
        P12 = M1_ChDtTrg228
        P13 = M1_TT592_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT593_CtWdSet1
        P1 =  M1_TT593_CtWdSet2
        P2 =  M1_TT593_MinRaw
        P3 =  M1_TT593_MaxRaw
        P4 =  M1_TT593_MinEU
        P5 =  M1_TT593_MaxEU
        P6 =  M1_TT593_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT593_CtWdSet1
        P1  = M1_TT593_CtWdSet2
        P2  = M1_TT593_CtWd
        P3  = M1_TT593_CtWdSend
        P4  = M1_TT593_MinRaw
        P5  = M1_TT593_MaxRaw
        P6  = M1_TT593_MinEU
        P7  = M1_TT593_MaxEU
        P8  = M1_TT593_ScaleWidth
        P9  = M1_TT593_Raw
        P10 = M1_TT593_Vl
        P11 = M1_TT593_Percent
        P12 = M1_ChDtTrg228
        P13 = M1_TT593_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT594_CtWdSet1
        P1 =  M1_TT594_CtWdSet2
        P2 =  M1_TT594_MinRaw
        P3 =  M1_TT594_MaxRaw
        P4 =  M1_TT594_MinEU
        P5 =  M1_TT594_MaxEU
        P6 =  M1_TT594_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT594_CtWdSet1
        P1  = M1_TT594_CtWdSet2
        P2  = M1_TT594_CtWd
        P3  = M1_TT594_CtWdSend
        P4  = M1_TT594_MinRaw
        P5  = M1_TT594_MaxRaw
        P6  = M1_TT594_MinEU
        P7  = M1_TT594_MaxEU
        P8  = M1_TT594_ScaleWidth
        P9  = M1_TT594_Raw
        P10 = M1_TT594_Vl
        P11 = M1_TT594_Percent
        P12 = M1_ChDtTrg228
        P13 = M1_TT594_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT595_CtWdSet1
        P1 =  M1_TT595_CtWdSet2
        P2 =  M1_TT595_MinRaw
        P3 =  M1_TT595_MaxRaw
        P4 =  M1_TT595_MinEU
        P5 =  M1_TT595_MaxEU
        P6 =  M1_TT595_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT595_CtWdSet1
        P1  = M1_TT595_CtWdSet2
        P2  = M1_TT595_CtWd
        P3  = M1_TT595_CtWdSend
        P4  = M1_TT595_MinRaw
        P5  = M1_TT595_MaxRaw
        P6  = M1_TT595_MinEU
        P7  = M1_TT595_MaxEU
        P8  = M1_TT595_ScaleWidth
        P9  = M1_TT595_Raw
        P10 = M1_TT595_Vl
        P11 = M1_TT595_Percent
        P12 = M1_ChDtTrg229
        P13 = M1_TT595_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT596_CtWdSet1
        P1 =  M1_TT596_CtWdSet2
        P2 =  M1_TT596_MinRaw
        P3 =  M1_TT596_MaxRaw
        P4 =  M1_TT596_MinEU
        P5 =  M1_TT596_MaxEU
        P6 =  M1_TT596_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT596_CtWdSet1
        P1  = M1_TT596_CtWdSet2
        P2  = M1_TT596_CtWd
        P3  = M1_TT596_CtWdSend
        P4  = M1_TT596_MinRaw
        P5  = M1_TT596_MaxRaw
        P6  = M1_TT596_MinEU
        P7  = M1_TT596_MaxEU
        P8  = M1_TT596_ScaleWidth
        P9  = M1_TT596_Raw
        P10 = M1_TT596_Vl
        P11 = M1_TT596_Percent
        P12 = M1_ChDtTrg229
        P13 = M1_TT596_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM086_CtWdSet1
        P1 =  M1_RM086_CtWdSet2
        P2 =  M1_RM086_MinRaw
        P3 =  M1_RM086_MaxRaw
        P4 =  M1_RM086_MinEU
        P5 =  M1_RM086_MaxEU
        P6 =  M1_RM086_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM086_CtWdSet1
        P1  = M1_RM086_CtWdSet2
        P2  = M1_RM086_CtWd
        P3  = M1_RM086_CtWdSend
        P4  = M1_RM086_MinRaw
        P5  = M1_RM086_MaxRaw
        P6  = M1_RM086_MinEU
        P7  = M1_RM086_MaxEU
        P8  = M1_RM086_ScaleWidth
        P9  = M1_RM086_Raw
        P10 = M1_RM086_Vl
        P11 = M1_RM086_Percent
        P12 = M1_ChDtTrg229
        P13 = M1_RM086_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM087_CtWdSet1
        P1 =  M1_RM087_CtWdSet2
        P2 =  M1_RM087_MinRaw
        P3 =  M1_RM087_MaxRaw
        P4 =  M1_RM087_MinEU
        P5 =  M1_RM087_MaxEU
        P6 =  M1_RM087_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM087_CtWdSet1
        P1  = M1_RM087_CtWdSet2
        P2  = M1_RM087_CtWd
        P3  = M1_RM087_CtWdSend
        P4  = M1_RM087_MinRaw
        P5  = M1_RM087_MaxRaw
        P6  = M1_RM087_MinEU
        P7  = M1_RM087_MaxEU
        P8  = M1_RM087_ScaleWidth
        P9  = M1_RM087_Raw
        P10 = M1_RM087_Vl
        P11 = M1_RM087_Percent
        P12 = M1_ChDtTrg229
        P13 = M1_RM087_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT711_CtWdSet1
        P1 =  M1_TT711_CtWdSet2
        P2 =  M1_TT711_MinRaw
        P3 =  M1_TT711_MaxRaw
        P4 =  M1_TT711_MinEU
        P5 =  M1_TT711_MaxEU
        P6 =  M1_TT711_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT711_CtWdSet1
        P1  = M1_TT711_CtWdSet2
        P2  = M1_TT711_CtWd
        P3  = M1_TT711_CtWdSend
        P4  = M1_TT711_MinRaw
        P5  = M1_TT711_MaxRaw
        P6  = M1_TT711_MinEU
        P7  = M1_TT711_MaxEU
        P8  = M1_TT711_ScaleWidth
        P9  = M1_TT711_Raw
        P10 = M1_TT711_Vl
        P11 = M1_TT711_Percent
        P12 = M1_ChDtTrg230
        P13 = M1_TT711_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT712_CtWdSet1
        P1 =  M1_TT712_CtWdSet2
        P2 =  M1_TT712_MinRaw
        P3 =  M1_TT712_MaxRaw
        P4 =  M1_TT712_MinEU
        P5 =  M1_TT712_MaxEU
        P6 =  M1_TT712_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT712_CtWdSet1
        P1  = M1_TT712_CtWdSet2
        P2  = M1_TT712_CtWd
        P3  = M1_TT712_CtWdSend
        P4  = M1_TT712_MinRaw
        P5  = M1_TT712_MaxRaw
        P6  = M1_TT712_MinEU
        P7  = M1_TT712_MaxEU
        P8  = M1_TT712_ScaleWidth
        P9  = M1_TT712_Raw
        P10 = M1_TT712_Vl
        P11 = M1_TT712_Percent
        P12 = M1_ChDtTrg230
        P13 = M1_TT712_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT713_CtWdSet1
        P1 =  M1_TT713_CtWdSet2
        P2 =  M1_TT713_MinRaw
        P3 =  M1_TT713_MaxRaw
        P4 =  M1_TT713_MinEU
        P5 =  M1_TT713_MaxEU
        P6 =  M1_TT713_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT713_CtWdSet1
        P1  = M1_TT713_CtWdSet2
        P2  = M1_TT713_CtWd
        P3  = M1_TT713_CtWdSend
        P4  = M1_TT713_MinRaw
        P5  = M1_TT713_MaxRaw
        P6  = M1_TT713_MinEU
        P7  = M1_TT713_MaxEU
        P8  = M1_TT713_ScaleWidth
        P9  = M1_TT713_Raw
        P10 = M1_TT713_Vl
        P11 = M1_TT713_Percent
        P12 = M1_ChDtTrg230
        P13 = M1_TT713_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT714_CtWdSet1
        P1 =  M1_TT714_CtWdSet2
        P2 =  M1_TT714_MinRaw
        P3 =  M1_TT714_MaxRaw
        P4 =  M1_TT714_MinEU
        P5 =  M1_TT714_MaxEU
        P6 =  M1_TT714_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT714_CtWdSet1
        P1  = M1_TT714_CtWdSet2
        P2  = M1_TT714_CtWd
        P3  = M1_TT714_CtWdSend
        P4  = M1_TT714_MinRaw
        P5  = M1_TT714_MaxRaw
        P6  = M1_TT714_MinEU
        P7  = M1_TT714_MaxEU
        P8  = M1_TT714_ScaleWidth
        P9  = M1_TT714_Raw
        P10 = M1_TT714_Vl
        P11 = M1_TT714_Percent
        P12 = M1_ChDtTrg230
        P13 = M1_TT714_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT721_CtWdSet1
        P1 =  M1_TT721_CtWdSet2
        P2 =  M1_TT721_MinRaw
        P3 =  M1_TT721_MaxRaw
        P4 =  M1_TT721_MinEU
        P5 =  M1_TT721_MaxEU
        P6 =  M1_TT721_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT721_CtWdSet1
        P1  = M1_TT721_CtWdSet2
        P2  = M1_TT721_CtWd
        P3  = M1_TT721_CtWdSend
        P4  = M1_TT721_MinRaw
        P5  = M1_TT721_MaxRaw
        P6  = M1_TT721_MinEU
        P7  = M1_TT721_MaxEU
        P8  = M1_TT721_ScaleWidth
        P9  = M1_TT721_Raw
        P10 = M1_TT721_Vl
        P11 = M1_TT721_Percent
        P12 = M1_ChDtTrg231
        P13 = M1_TT721_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT722_CtWdSet1
        P1 =  M1_TT722_CtWdSet2
        P2 =  M1_TT722_MinRaw
        P3 =  M1_TT722_MaxRaw
        P4 =  M1_TT722_MinEU
        P5 =  M1_TT722_MaxEU
        P6 =  M1_TT722_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT722_CtWdSet1
        P1  = M1_TT722_CtWdSet2
        P2  = M1_TT722_CtWd
        P3  = M1_TT722_CtWdSend
        P4  = M1_TT722_MinRaw
        P5  = M1_TT722_MaxRaw
        P6  = M1_TT722_MinEU
        P7  = M1_TT722_MaxEU
        P8  = M1_TT722_ScaleWidth
        P9  = M1_TT722_Raw
        P10 = M1_TT722_Vl
        P11 = M1_TT722_Percent
        P12 = M1_ChDtTrg231
        P13 = M1_TT722_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT723_CtWdSet1
        P1 =  M1_TT723_CtWdSet2
        P2 =  M1_TT723_MinRaw
        P3 =  M1_TT723_MaxRaw
        P4 =  M1_TT723_MinEU
        P5 =  M1_TT723_MaxEU
        P6 =  M1_TT723_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT723_CtWdSet1
        P1  = M1_TT723_CtWdSet2
        P2  = M1_TT723_CtWd
        P3  = M1_TT723_CtWdSend
        P4  = M1_TT723_MinRaw
        P5  = M1_TT723_MaxRaw
        P6  = M1_TT723_MinEU
        P7  = M1_TT723_MaxEU
        P8  = M1_TT723_ScaleWidth
        P9  = M1_TT723_Raw
        P10 = M1_TT723_Vl
        P11 = M1_TT723_Percent
        P12 = M1_ChDtTrg231
        P13 = M1_TT723_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT724_CtWdSet1
        P1 =  M1_TT724_CtWdSet2
        P2 =  M1_TT724_MinRaw
        P3 =  M1_TT724_MaxRaw
        P4 =  M1_TT724_MinEU
        P5 =  M1_TT724_MaxEU
        P6 =  M1_TT724_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT724_CtWdSet1
        P1  = M1_TT724_CtWdSet2
        P2  = M1_TT724_CtWd
        P3  = M1_TT724_CtWdSend
        P4  = M1_TT724_MinRaw
        P5  = M1_TT724_MaxRaw
        P6  = M1_TT724_MinEU
        P7  = M1_TT724_MaxEU
        P8  = M1_TT724_ScaleWidth
        P9  = M1_TT724_Raw
        P10 = M1_TT724_Vl
        P11 = M1_TT724_Percent
        P12 = M1_ChDtTrg231
        P13 = M1_TT724_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT731_CtWdSet1
        P1 =  M1_TT731_CtWdSet2
        P2 =  M1_TT731_MinRaw
        P3 =  M1_TT731_MaxRaw
        P4 =  M1_TT731_MinEU
        P5 =  M1_TT731_MaxEU
        P6 =  M1_TT731_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT731_CtWdSet1
        P1  = M1_TT731_CtWdSet2
        P2  = M1_TT731_CtWd
        P3  = M1_TT731_CtWdSend
        P4  = M1_TT731_MinRaw
        P5  = M1_TT731_MaxRaw
        P6  = M1_TT731_MinEU
        P7  = M1_TT731_MaxEU
        P8  = M1_TT731_ScaleWidth
        P9  = M1_TT731_Raw
        P10 = M1_TT731_Vl
        P11 = M1_TT731_Percent
        P12 = M1_ChDtTrg232
        P13 = M1_TT731_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT732_CtWdSet1
        P1 =  M1_TT732_CtWdSet2
        P2 =  M1_TT732_MinRaw
        P3 =  M1_TT732_MaxRaw
        P4 =  M1_TT732_MinEU
        P5 =  M1_TT732_MaxEU
        P6 =  M1_TT732_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT732_CtWdSet1
        P1  = M1_TT732_CtWdSet2
        P2  = M1_TT732_CtWd
        P3  = M1_TT732_CtWdSend
        P4  = M1_TT732_MinRaw
        P5  = M1_TT732_MaxRaw
        P6  = M1_TT732_MinEU
        P7  = M1_TT732_MaxEU
        P8  = M1_TT732_ScaleWidth
        P9  = M1_TT732_Raw
        P10 = M1_TT732_Vl
        P11 = M1_TT732_Percent
        P12 = M1_ChDtTrg232
        P13 = M1_TT732_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT733_CtWdSet1
        P1 =  M1_TT733_CtWdSet2
        P2 =  M1_TT733_MinRaw
        P3 =  M1_TT733_MaxRaw
        P4 =  M1_TT733_MinEU
        P5 =  M1_TT733_MaxEU
        P6 =  M1_TT733_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT733_CtWdSet1
        P1  = M1_TT733_CtWdSet2
        P2  = M1_TT733_CtWd
        P3  = M1_TT733_CtWdSend
        P4  = M1_TT733_MinRaw
        P5  = M1_TT733_MaxRaw
        P6  = M1_TT733_MinEU
        P7  = M1_TT733_MaxEU
        P8  = M1_TT733_ScaleWidth
        P9  = M1_TT733_Raw
        P10 = M1_TT733_Vl
        P11 = M1_TT733_Percent
        P12 = M1_ChDtTrg232
        P13 = M1_TT733_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT734_CtWdSet1
        P1 =  M1_TT734_CtWdSet2
        P2 =  M1_TT734_MinRaw
        P3 =  M1_TT734_MaxRaw
        P4 =  M1_TT734_MinEU
        P5 =  M1_TT734_MaxEU
        P6 =  M1_TT734_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT734_CtWdSet1
        P1  = M1_TT734_CtWdSet2
        P2  = M1_TT734_CtWd
        P3  = M1_TT734_CtWdSend
        P4  = M1_TT734_MinRaw
        P5  = M1_TT734_MaxRaw
        P6  = M1_TT734_MinEU
        P7  = M1_TT734_MaxEU
        P8  = M1_TT734_ScaleWidth
        P9  = M1_TT734_Raw
        P10 = M1_TT734_Vl
        P11 = M1_TT734_Percent
        P12 = M1_ChDtTrg232
        P13 = M1_TT734_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT741_CtWdSet1
        P1 =  M1_TT741_CtWdSet2
        P2 =  M1_TT741_MinRaw
        P3 =  M1_TT741_MaxRaw
        P4 =  M1_TT741_MinEU
        P5 =  M1_TT741_MaxEU
        P6 =  M1_TT741_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT741_CtWdSet1
        P1  = M1_TT741_CtWdSet2
        P2  = M1_TT741_CtWd
        P3  = M1_TT741_CtWdSend
        P4  = M1_TT741_MinRaw
        P5  = M1_TT741_MaxRaw
        P6  = M1_TT741_MinEU
        P7  = M1_TT741_MaxEU
        P8  = M1_TT741_ScaleWidth
        P9  = M1_TT741_Raw
        P10 = M1_TT741_Vl
        P11 = M1_TT741_Percent
        P12 = M1_ChDtTrg233
        P13 = M1_TT741_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT742_CtWdSet1
        P1 =  M1_TT742_CtWdSet2
        P2 =  M1_TT742_MinRaw
        P3 =  M1_TT742_MaxRaw
        P4 =  M1_TT742_MinEU
        P5 =  M1_TT742_MaxEU
        P6 =  M1_TT742_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT742_CtWdSet1
        P1  = M1_TT742_CtWdSet2
        P2  = M1_TT742_CtWd
        P3  = M1_TT742_CtWdSend
        P4  = M1_TT742_MinRaw
        P5  = M1_TT742_MaxRaw
        P6  = M1_TT742_MinEU
        P7  = M1_TT742_MaxEU
        P8  = M1_TT742_ScaleWidth
        P9  = M1_TT742_Raw
        P10 = M1_TT742_Vl
        P11 = M1_TT742_Percent
        P12 = M1_ChDtTrg233
        P13 = M1_TT742_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT743_CtWdSet1
        P1 =  M1_TT743_CtWdSet2
        P2 =  M1_TT743_MinRaw
        P3 =  M1_TT743_MaxRaw
        P4 =  M1_TT743_MinEU
        P5 =  M1_TT743_MaxEU
        P6 =  M1_TT743_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT743_CtWdSet1
        P1  = M1_TT743_CtWdSet2
        P2  = M1_TT743_CtWd
        P3  = M1_TT743_CtWdSend
        P4  = M1_TT743_MinRaw
        P5  = M1_TT743_MaxRaw
        P6  = M1_TT743_MinEU
        P7  = M1_TT743_MaxEU
        P8  = M1_TT743_ScaleWidth
        P9  = M1_TT743_Raw
        P10 = M1_TT743_Vl
        P11 = M1_TT743_Percent
        P12 = M1_ChDtTrg233
        P13 = M1_TT743_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT744_CtWdSet1
        P1 =  M1_TT744_CtWdSet2
        P2 =  M1_TT744_MinRaw
        P3 =  M1_TT744_MaxRaw
        P4 =  M1_TT744_MinEU
        P5 =  M1_TT744_MaxEU
        P6 =  M1_TT744_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT744_CtWdSet1
        P1  = M1_TT744_CtWdSet2
        P2  = M1_TT744_CtWd
        P3  = M1_TT744_CtWdSend
        P4  = M1_TT744_MinRaw
        P5  = M1_TT744_MaxRaw
        P6  = M1_TT744_MinEU
        P7  = M1_TT744_MaxEU
        P8  = M1_TT744_ScaleWidth
        P9  = M1_TT744_Raw
        P10 = M1_TT744_Vl
        P11 = M1_TT744_Percent
        P12 = M1_ChDtTrg233
        P13 = M1_TT744_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT703_CtWdSet1
        P1 =  M1_TT703_CtWdSet2
        P2 =  M1_TT703_MinRaw
        P3 =  M1_TT703_MaxRaw
        P4 =  M1_TT703_MinEU
        P5 =  M1_TT703_MaxEU
        P6 =  M1_TT703_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT703_CtWdSet1
        P1  = M1_TT703_CtWdSet2
        P2  = M1_TT703_CtWd
        P3  = M1_TT703_CtWdSend
        P4  = M1_TT703_MinRaw
        P5  = M1_TT703_MaxRaw
        P6  = M1_TT703_MinEU
        P7  = M1_TT703_MaxEU
        P8  = M1_TT703_ScaleWidth
        P9  = M1_TT703_Raw
        P10 = M1_TT703_Vl
        P11 = M1_TT703_Percent
        P12 = M1_ChDtTrg234
        P13 = M1_TT703_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT704_CtWdSet1
        P1 =  M1_TT704_CtWdSet2
        P2 =  M1_TT704_MinRaw
        P3 =  M1_TT704_MaxRaw
        P4 =  M1_TT704_MinEU
        P5 =  M1_TT704_MaxEU
        P6 =  M1_TT704_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT704_CtWdSet1
        P1  = M1_TT704_CtWdSet2
        P2  = M1_TT704_CtWd
        P3  = M1_TT704_CtWdSend
        P4  = M1_TT704_MinRaw
        P5  = M1_TT704_MaxRaw
        P6  = M1_TT704_MinEU
        P7  = M1_TT704_MaxEU
        P8  = M1_TT704_ScaleWidth
        P9  = M1_TT704_Raw
        P10 = M1_TT704_Vl
        P11 = M1_TT704_Percent
        P12 = M1_ChDtTrg234
        P13 = M1_TT704_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_TT705_CtWdSet1
        P1 =  M1_TT705_CtWdSet2
        P2 =  M1_TT705_MinRaw
        P3 =  M1_TT705_MaxRaw
        P4 =  M1_TT705_MinEU
        P5 =  M1_TT705_MaxEU
        P6 =  M1_TT705_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_TT705_CtWdSet1
        P1  = M1_TT705_CtWdSet2
        P2  = M1_TT705_CtWd
        P3  = M1_TT705_CtWdSend
        P4  = M1_TT705_MinRaw
        P5  = M1_TT705_MaxRaw
        P6  = M1_TT705_MinEU
        P7  = M1_TT705_MaxEU
        P8  = M1_TT705_ScaleWidth
        P9  = M1_TT705_Raw
        P10 = M1_TT705_Vl
        P11 = M1_TT705_Percent
        P12 = M1_ChDtTrg234
        P13 = M1_TT705_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT651_CtWdSet1
        P1 =  M1_YT651_CtWdSet2
        P2 =  M1_YT651_MinRaw
        P3 =  M1_YT651_MaxRaw
        P4 =  M1_YT651_MinEU
        P5 =  M1_YT651_MaxEU
        P6 =  M1_YT651_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT651_CtWdSet1
        P1  = M1_YT651_CtWdSet2
        P2  = M1_YT651_CtWd
        P3  = M1_YT651_CtWdSend
        P4  = M1_YT651_MinRaw
        P5  = M1_YT651_MaxRaw
        P6  = M1_YT651_MinEU
        P7  = M1_YT651_MaxEU
        P8  = M1_YT651_ScaleWidth
        P9  = M1_YT651_Raw
        P10 = M1_YT651_Vl
        P11 = M1_YT651_Percent
        P12 = M1_ChDtTrg234
        P13 = M1_YT651_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_YT801_CtWdSet1
        P1 =  M1_YT801_CtWdSet2
        P2 =  M1_YT801_MinRaw
        P3 =  M1_YT801_MaxRaw
        P4 =  M1_YT801_MinEU
        P5 =  M1_YT801_MaxEU
        P6 =  M1_YT801_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_YT801_CtWdSet1
        P1  = M1_YT801_CtWdSet2
        P2  = M1_YT801_CtWd
        P3  = M1_YT801_CtWdSend
        P4  = M1_YT801_MinRaw
        P5  = M1_YT801_MaxRaw
        P6  = M1_YT801_MinEU
        P7  = M1_YT801_MaxEU
        P8  = M1_YT801_ScaleWidth
        P9  = M1_YT801_Raw
        P10 = M1_YT801_Vl
        P11 = M1_YT801_Percent
        P12 = M1_ChDtTrg235
        P13 = M1_YT801_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_PT601_CtWdSet1
        P1 =  M1_PT601_CtWdSet2
        P2 =  M1_PT601_MinRaw
        P3 =  M1_PT601_MaxRaw
        P4 =  M1_PT601_MinEU
        P5 =  M1_PT601_MaxEU
        P6 =  M1_PT601_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_PT601_CtWdSet1
        P1  = M1_PT601_CtWdSet2
        P2  = M1_PT601_CtWd
        P3  = M1_PT601_CtWdSend
        P4  = M1_PT601_MinRaw
        P5  = M1_PT601_MaxRaw
        P6  = M1_PT601_MinEU
        P7  = M1_PT601_MaxEU
        P8  = M1_PT601_ScaleWidth
        P9  = M1_PT601_Raw
        P10 = M1_PT601_Vl
        P11 = M1_PT601_Percent
        P12 = M1_ChDtTrg235
        P13 = M1_PT601_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM110_CtWdSet1
        P1 =  M1_RM110_CtWdSet2
        P2 =  M1_RM110_MinRaw
        P3 =  M1_RM110_MaxRaw
        P4 =  M1_RM110_MinEU
        P5 =  M1_RM110_MaxEU
        P6 =  M1_RM110_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM110_CtWdSet1
        P1  = M1_RM110_CtWdSet2
        P2  = M1_RM110_CtWd
        P3  = M1_RM110_CtWdSend
        P4  = M1_RM110_MinRaw
        P5  = M1_RM110_MaxRaw
        P6  = M1_RM110_MinEU
        P7  = M1_RM110_MaxEU
        P8  = M1_RM110_ScaleWidth
        P9  = M1_RM110_Raw
        P10 = M1_RM110_Vl
        P11 = M1_RM110_Percent
        P12 = M1_ChDtTrg235
        P13 = M1_RM110_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM111_CtWdSet1
        P1 =  M1_RM111_CtWdSet2
        P2 =  M1_RM111_MinRaw
        P3 =  M1_RM111_MaxRaw
        P4 =  M1_RM111_MinEU
        P5 =  M1_RM111_MaxEU
        P6 =  M1_RM111_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM111_CtWdSet1
        P1  = M1_RM111_CtWdSet2
        P2  = M1_RM111_CtWd
        P3  = M1_RM111_CtWdSend
        P4  = M1_RM111_MinRaw
        P5  = M1_RM111_MaxRaw
        P6  = M1_RM111_MinEU
        P7  = M1_RM111_MaxEU
        P8  = M1_RM111_ScaleWidth
        P9  = M1_RM111_Raw
        P10 = M1_RM111_Vl
        P11 = M1_RM111_Percent
        P12 = M1_ChDtTrg235
        P13 = M1_RM111_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT950_CtWdSet1
        P1 =  M1_CT950_CtWdSet2
        P2 =  M1_CT950_MinRaw
        P3 =  M1_CT950_MaxRaw
        P4 =  M1_CT950_MinEU
        P5 =  M1_CT950_MaxEU
        P6 =  M1_CT950_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT950_CtWdSet1
        P1  = M1_CT950_CtWdSet2
        P2  = M1_CT950_CtWd
        P3  = M1_CT950_CtWdSend
        P4  = M1_CT950_MinRaw
        P5  = M1_CT950_MaxRaw
        P6  = M1_CT950_MinEU
        P7  = M1_CT950_MaxEU
        P8  = M1_CT950_ScaleWidth
        P9  = M1_CT950_Raw
        P10 = M1_CT950_Vl
        P11 = M1_CT950_Percent
        P12 = M1_ChDtTrg236
        P13 = M1_CT950_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT950_CtWdSet1
        P1 =  M1_BT950_CtWdSet2
        P2 =  M1_BT950_MinRaw
        P3 =  M1_BT950_MaxRaw
        P4 =  M1_BT950_MinEU
        P5 =  M1_BT950_MaxEU
        P6 =  M1_BT950_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT950_CtWdSet1
        P1  = M1_BT950_CtWdSet2
        P2  = M1_BT950_CtWd
        P3  = M1_BT950_CtWdSend
        P4  = M1_BT950_MinRaw
        P5  = M1_BT950_MaxRaw
        P6  = M1_BT950_MinEU
        P7  = M1_BT950_MaxEU
        P8  = M1_BT950_ScaleWidth
        P9  = M1_BT950_Raw
        P10 = M1_BT950_Vl
        P11 = M1_BT950_Percent
        P12 = M1_ChDtTrg236
        P13 = M1_BT950_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT951_CtWdSet1
        P1 =  M1_CT951_CtWdSet2
        P2 =  M1_CT951_MinRaw
        P3 =  M1_CT951_MaxRaw
        P4 =  M1_CT951_MinEU
        P5 =  M1_CT951_MaxEU
        P6 =  M1_CT951_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT951_CtWdSet1
        P1  = M1_CT951_CtWdSet2
        P2  = M1_CT951_CtWd
        P3  = M1_CT951_CtWdSend
        P4  = M1_CT951_MinRaw
        P5  = M1_CT951_MaxRaw
        P6  = M1_CT951_MinEU
        P7  = M1_CT951_MaxEU
        P8  = M1_CT951_ScaleWidth
        P9  = M1_CT951_Raw
        P10 = M1_CT951_Vl
        P11 = M1_CT951_Percent
        P12 = M1_ChDtTrg236
        P13 = M1_CT951_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT951_CtWdSet1
        P1 =  M1_BT951_CtWdSet2
        P2 =  M1_BT951_MinRaw
        P3 =  M1_BT951_MaxRaw
        P4 =  M1_BT951_MinEU
        P5 =  M1_BT951_MaxEU
        P6 =  M1_BT951_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT951_CtWdSet1
        P1  = M1_BT951_CtWdSet2
        P2  = M1_BT951_CtWd
        P3  = M1_BT951_CtWdSend
        P4  = M1_BT951_MinRaw
        P5  = M1_BT951_MaxRaw
        P6  = M1_BT951_MinEU
        P7  = M1_BT951_MaxEU
        P8  = M1_BT951_ScaleWidth
        P9  = M1_BT951_Raw
        P10 = M1_BT951_Vl
        P11 = M1_BT951_Percent
        P12 = M1_ChDtTrg236
        P13 = M1_BT951_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT952_CtWdSet1
        P1 =  M1_CT952_CtWdSet2
        P2 =  M1_CT952_MinRaw
        P3 =  M1_CT952_MaxRaw
        P4 =  M1_CT952_MinEU
        P5 =  M1_CT952_MaxEU
        P6 =  M1_CT952_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT952_CtWdSet1
        P1  = M1_CT952_CtWdSet2
        P2  = M1_CT952_CtWd
        P3  = M1_CT952_CtWdSend
        P4  = M1_CT952_MinRaw
        P5  = M1_CT952_MaxRaw
        P6  = M1_CT952_MinEU
        P7  = M1_CT952_MaxEU
        P8  = M1_CT952_ScaleWidth
        P9  = M1_CT952_Raw
        P10 = M1_CT952_Vl
        P11 = M1_CT952_Percent
        P12 = M1_ChDtTrg237
        P13 = M1_CT952_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT952_CtWdSet1
        P1 =  M1_BT952_CtWdSet2
        P2 =  M1_BT952_MinRaw
        P3 =  M1_BT952_MaxRaw
        P4 =  M1_BT952_MinEU
        P5 =  M1_BT952_MaxEU
        P6 =  M1_BT952_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT952_CtWdSet1
        P1  = M1_BT952_CtWdSet2
        P2  = M1_BT952_CtWd
        P3  = M1_BT952_CtWdSend
        P4  = M1_BT952_MinRaw
        P5  = M1_BT952_MaxRaw
        P6  = M1_BT952_MinEU
        P7  = M1_BT952_MaxEU
        P8  = M1_BT952_ScaleWidth
        P9  = M1_BT952_Raw
        P10 = M1_BT952_Vl
        P11 = M1_BT952_Percent
        P12 = M1_ChDtTrg237
        P13 = M1_BT952_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT953_CtWdSet1
        P1 =  M1_CT953_CtWdSet2
        P2 =  M1_CT953_MinRaw
        P3 =  M1_CT953_MaxRaw
        P4 =  M1_CT953_MinEU
        P5 =  M1_CT953_MaxEU
        P6 =  M1_CT953_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT953_CtWdSet1
        P1  = M1_CT953_CtWdSet2
        P2  = M1_CT953_CtWd
        P3  = M1_CT953_CtWdSend
        P4  = M1_CT953_MinRaw
        P5  = M1_CT953_MaxRaw
        P6  = M1_CT953_MinEU
        P7  = M1_CT953_MaxEU
        P8  = M1_CT953_ScaleWidth
        P9  = M1_CT953_Raw
        P10 = M1_CT953_Vl
        P11 = M1_CT953_Percent
        P12 = M1_ChDtTrg237
        P13 = M1_CT953_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT953_CtWdSet1
        P1 =  M1_BT953_CtWdSet2
        P2 =  M1_BT953_MinRaw
        P3 =  M1_BT953_MaxRaw
        P4 =  M1_BT953_MinEU
        P5 =  M1_BT953_MaxEU
        P6 =  M1_BT953_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT953_CtWdSet1
        P1  = M1_BT953_CtWdSet2
        P2  = M1_BT953_CtWd
        P3  = M1_BT953_CtWdSend
        P4  = M1_BT953_MinRaw
        P5  = M1_BT953_MaxRaw
        P6  = M1_BT953_MinEU
        P7  = M1_BT953_MaxEU
        P8  = M1_BT953_ScaleWidth
        P9  = M1_BT953_Raw
        P10 = M1_BT953_Vl
        P11 = M1_BT953_Percent
        P12 = M1_ChDtTrg237
        P13 = M1_BT953_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT954_CtWdSet1
        P1 =  M1_CT954_CtWdSet2
        P2 =  M1_CT954_MinRaw
        P3 =  M1_CT954_MaxRaw
        P4 =  M1_CT954_MinEU
        P5 =  M1_CT954_MaxEU
        P6 =  M1_CT954_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT954_CtWdSet1
        P1  = M1_CT954_CtWdSet2
        P2  = M1_CT954_CtWd
        P3  = M1_CT954_CtWdSend
        P4  = M1_CT954_MinRaw
        P5  = M1_CT954_MaxRaw
        P6  = M1_CT954_MinEU
        P7  = M1_CT954_MaxEU
        P8  = M1_CT954_ScaleWidth
        P9  = M1_CT954_Raw
        P10 = M1_CT954_Vl
        P11 = M1_CT954_Percent
        P12 = M1_ChDtTrg238
        P13 = M1_CT954_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT954_CtWdSet1
        P1 =  M1_BT954_CtWdSet2
        P2 =  M1_BT954_MinRaw
        P3 =  M1_BT954_MaxRaw
        P4 =  M1_BT954_MinEU
        P5 =  M1_BT954_MaxEU
        P6 =  M1_BT954_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT954_CtWdSet1
        P1  = M1_BT954_CtWdSet2
        P2  = M1_BT954_CtWd
        P3  = M1_BT954_CtWdSend
        P4  = M1_BT954_MinRaw
        P5  = M1_BT954_MaxRaw
        P6  = M1_BT954_MinEU
        P7  = M1_BT954_MaxEU
        P8  = M1_BT954_ScaleWidth
        P9  = M1_BT954_Raw
        P10 = M1_BT954_Vl
        P11 = M1_BT954_Percent
        P12 = M1_ChDtTrg238
        P13 = M1_BT954_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT955_CtWdSet1
        P1 =  M1_CT955_CtWdSet2
        P2 =  M1_CT955_MinRaw
        P3 =  M1_CT955_MaxRaw
        P4 =  M1_CT955_MinEU
        P5 =  M1_CT955_MaxEU
        P6 =  M1_CT955_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT955_CtWdSet1
        P1  = M1_CT955_CtWdSet2
        P2  = M1_CT955_CtWd
        P3  = M1_CT955_CtWdSend
        P4  = M1_CT955_MinRaw
        P5  = M1_CT955_MaxRaw
        P6  = M1_CT955_MinEU
        P7  = M1_CT955_MaxEU
        P8  = M1_CT955_ScaleWidth
        P9  = M1_CT955_Raw
        P10 = M1_CT955_Vl
        P11 = M1_CT955_Percent
        P12 = M1_ChDtTrg238
        P13 = M1_CT955_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT955_CtWdSet1
        P1 =  M1_BT955_CtWdSet2
        P2 =  M1_BT955_MinRaw
        P3 =  M1_BT955_MaxRaw
        P4 =  M1_BT955_MinEU
        P5 =  M1_BT955_MaxEU
        P6 =  M1_BT955_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT955_CtWdSet1
        P1  = M1_BT955_CtWdSet2
        P2  = M1_BT955_CtWd
        P3  = M1_BT955_CtWdSend
        P4  = M1_BT955_MinRaw
        P5  = M1_BT955_MaxRaw
        P6  = M1_BT955_MinEU
        P7  = M1_BT955_MaxEU
        P8  = M1_BT955_ScaleWidth
        P9  = M1_BT955_Raw
        P10 = M1_BT955_Vl
        P11 = M1_BT955_Percent
        P12 = M1_ChDtTrg238
        P13 = M1_BT955_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT956_CtWdSet1
        P1 =  M1_CT956_CtWdSet2
        P2 =  M1_CT956_MinRaw
        P3 =  M1_CT956_MaxRaw
        P4 =  M1_CT956_MinEU
        P5 =  M1_CT956_MaxEU
        P6 =  M1_CT956_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT956_CtWdSet1
        P1  = M1_CT956_CtWdSet2
        P2  = M1_CT956_CtWd
        P3  = M1_CT956_CtWdSend
        P4  = M1_CT956_MinRaw
        P5  = M1_CT956_MaxRaw
        P6  = M1_CT956_MinEU
        P7  = M1_CT956_MaxEU
        P8  = M1_CT956_ScaleWidth
        P9  = M1_CT956_Raw
        P10 = M1_CT956_Vl
        P11 = M1_CT956_Percent
        P12 = M1_ChDtTrg239
        P13 = M1_CT956_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT956_CtWdSet1
        P1 =  M1_BT956_CtWdSet2
        P2 =  M1_BT956_MinRaw
        P3 =  M1_BT956_MaxRaw
        P4 =  M1_BT956_MinEU
        P5 =  M1_BT956_MaxEU
        P6 =  M1_BT956_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT956_CtWdSet1
        P1  = M1_BT956_CtWdSet2
        P2  = M1_BT956_CtWd
        P3  = M1_BT956_CtWdSend
        P4  = M1_BT956_MinRaw
        P5  = M1_BT956_MaxRaw
        P6  = M1_BT956_MinEU
        P7  = M1_BT956_MaxEU
        P8  = M1_BT956_ScaleWidth
        P9  = M1_BT956_Raw
        P10 = M1_BT956_Vl
        P11 = M1_BT956_Percent
        P12 = M1_ChDtTrg239
        P13 = M1_BT956_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT957_CtWdSet1
        P1 =  M1_CT957_CtWdSet2
        P2 =  M1_CT957_MinRaw
        P3 =  M1_CT957_MaxRaw
        P4 =  M1_CT957_MinEU
        P5 =  M1_CT957_MaxEU
        P6 =  M1_CT957_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT957_CtWdSet1
        P1  = M1_CT957_CtWdSet2
        P2  = M1_CT957_CtWd
        P3  = M1_CT957_CtWdSend
        P4  = M1_CT957_MinRaw
        P5  = M1_CT957_MaxRaw
        P6  = M1_CT957_MinEU
        P7  = M1_CT957_MaxEU
        P8  = M1_CT957_ScaleWidth
        P9  = M1_CT957_Raw
        P10 = M1_CT957_Vl
        P11 = M1_CT957_Percent
        P12 = M1_ChDtTrg239
        P13 = M1_CT957_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT957_CtWdSet1
        P1 =  M1_BT957_CtWdSet2
        P2 =  M1_BT957_MinRaw
        P3 =  M1_BT957_MaxRaw
        P4 =  M1_BT957_MinEU
        P5 =  M1_BT957_MaxEU
        P6 =  M1_BT957_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT957_CtWdSet1
        P1  = M1_BT957_CtWdSet2
        P2  = M1_BT957_CtWd
        P3  = M1_BT957_CtWdSend
        P4  = M1_BT957_MinRaw
        P5  = M1_BT957_MaxRaw
        P6  = M1_BT957_MinEU
        P7  = M1_BT957_MaxEU
        P8  = M1_BT957_ScaleWidth
        P9  = M1_BT957_Raw
        P10 = M1_BT957_Vl
        P11 = M1_BT957_Percent
        P12 = M1_ChDtTrg239
        P13 = M1_BT957_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT958_CtWdSet1
        P1 =  M1_CT958_CtWdSet2
        P2 =  M1_CT958_MinRaw
        P3 =  M1_CT958_MaxRaw
        P4 =  M1_CT958_MinEU
        P5 =  M1_CT958_MaxEU
        P6 =  M1_CT958_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT958_CtWdSet1
        P1  = M1_CT958_CtWdSet2
        P2  = M1_CT958_CtWd
        P3  = M1_CT958_CtWdSend
        P4  = M1_CT958_MinRaw
        P5  = M1_CT958_MaxRaw
        P6  = M1_CT958_MinEU
        P7  = M1_CT958_MaxEU
        P8  = M1_CT958_ScaleWidth
        P9  = M1_CT958_Raw
        P10 = M1_CT958_Vl
        P11 = M1_CT958_Percent
        P12 = M1_ChDtTrg240
        P13 = M1_CT958_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT958_CtWdSet1
        P1 =  M1_BT958_CtWdSet2
        P2 =  M1_BT958_MinRaw
        P3 =  M1_BT958_MaxRaw
        P4 =  M1_BT958_MinEU
        P5 =  M1_BT958_MaxEU
        P6 =  M1_BT958_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT958_CtWdSet1
        P1  = M1_BT958_CtWdSet2
        P2  = M1_BT958_CtWd
        P3  = M1_BT958_CtWdSend
        P4  = M1_BT958_MinRaw
        P5  = M1_BT958_MaxRaw
        P6  = M1_BT958_MinEU
        P7  = M1_BT958_MaxEU
        P8  = M1_BT958_ScaleWidth
        P9  = M1_BT958_Raw
        P10 = M1_BT958_Vl
        P11 = M1_BT958_Percent
        P12 = M1_ChDtTrg240
        P13 = M1_BT958_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM130_CtWdSet1
        P1 =  M1_RM130_CtWdSet2
        P2 =  M1_RM130_MinRaw
        P3 =  M1_RM130_MaxRaw
        P4 =  M1_RM130_MinEU
        P5 =  M1_RM130_MaxEU
        P6 =  M1_RM130_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM130_CtWdSet1
        P1  = M1_RM130_CtWdSet2
        P2  = M1_RM130_CtWd
        P3  = M1_RM130_CtWdSend
        P4  = M1_RM130_MinRaw
        P5  = M1_RM130_MaxRaw
        P6  = M1_RM130_MinEU
        P7  = M1_RM130_MaxEU
        P8  = M1_RM130_ScaleWidth
        P9  = M1_RM130_Raw
        P10 = M1_RM130_Vl
        P11 = M1_RM130_Percent
        P12 = M1_ChDtTrg240
        P13 = M1_RM130_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM131_CtWdSet1
        P1 =  M1_RM131_CtWdSet2
        P2 =  M1_RM131_MinRaw
        P3 =  M1_RM131_MaxRaw
        P4 =  M1_RM131_MinEU
        P5 =  M1_RM131_MaxEU
        P6 =  M1_RM131_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM131_CtWdSet1
        P1  = M1_RM131_CtWdSet2
        P2  = M1_RM131_CtWd
        P3  = M1_RM131_CtWdSend
        P4  = M1_RM131_MinRaw
        P5  = M1_RM131_MaxRaw
        P6  = M1_RM131_MinEU
        P7  = M1_RM131_MaxEU
        P8  = M1_RM131_ScaleWidth
        P9  = M1_RM131_Raw
        P10 = M1_RM131_Vl
        P11 = M1_RM131_Percent
        P12 = M1_ChDtTrg240
        P13 = M1_RM131_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM132_CtWdSet1
        P1 =  M1_RM132_CtWdSet2
        P2 =  M1_RM132_MinRaw
        P3 =  M1_RM132_MaxRaw
        P4 =  M1_RM132_MinEU
        P5 =  M1_RM132_MaxEU
        P6 =  M1_RM132_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM132_CtWdSet1
        P1  = M1_RM132_CtWdSet2
        P2  = M1_RM132_CtWd
        P3  = M1_RM132_CtWdSend
        P4  = M1_RM132_MinRaw
        P5  = M1_RM132_MaxRaw
        P6  = M1_RM132_MinEU
        P7  = M1_RM132_MaxEU
        P8  = M1_RM132_ScaleWidth
        P9  = M1_RM132_Raw
        P10 = M1_RM132_Vl
        P11 = M1_RM132_Percent
        P12 = M1_ChDtTrg241
        P13 = M1_RM132_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM133_CtWdSet1
        P1 =  M1_RM133_CtWdSet2
        P2 =  M1_RM133_MinRaw
        P3 =  M1_RM133_MaxRaw
        P4 =  M1_RM133_MinEU
        P5 =  M1_RM133_MaxEU
        P6 =  M1_RM133_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM133_CtWdSet1
        P1  = M1_RM133_CtWdSet2
        P2  = M1_RM133_CtWd
        P3  = M1_RM133_CtWdSend
        P4  = M1_RM133_MinRaw
        P5  = M1_RM133_MaxRaw
        P6  = M1_RM133_MinEU
        P7  = M1_RM133_MaxEU
        P8  = M1_RM133_ScaleWidth
        P9  = M1_RM133_Raw
        P10 = M1_RM133_Vl
        P11 = M1_RM133_Percent
        P12 = M1_ChDtTrg241
        P13 = M1_RM133_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM134_CtWdSet1
        P1 =  M1_RM134_CtWdSet2
        P2 =  M1_RM134_MinRaw
        P3 =  M1_RM134_MaxRaw
        P4 =  M1_RM134_MinEU
        P5 =  M1_RM134_MaxEU
        P6 =  M1_RM134_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM134_CtWdSet1
        P1  = M1_RM134_CtWdSet2
        P2  = M1_RM134_CtWd
        P3  = M1_RM134_CtWdSend
        P4  = M1_RM134_MinRaw
        P5  = M1_RM134_MaxRaw
        P6  = M1_RM134_MinEU
        P7  = M1_RM134_MaxEU
        P8  = M1_RM134_ScaleWidth
        P9  = M1_RM134_Raw
        P10 = M1_RM134_Vl
        P11 = M1_RM134_Percent
        P12 = M1_ChDtTrg241
        P13 = M1_RM134_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM135_CtWdSet1
        P1 =  M1_RM135_CtWdSet2
        P2 =  M1_RM135_MinRaw
        P3 =  M1_RM135_MaxRaw
        P4 =  M1_RM135_MinEU
        P5 =  M1_RM135_MaxEU
        P6 =  M1_RM135_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM135_CtWdSet1
        P1  = M1_RM135_CtWdSet2
        P2  = M1_RM135_CtWd
        P3  = M1_RM135_CtWdSend
        P4  = M1_RM135_MinRaw
        P5  = M1_RM135_MaxRaw
        P6  = M1_RM135_MinEU
        P7  = M1_RM135_MaxEU
        P8  = M1_RM135_ScaleWidth
        P9  = M1_RM135_Raw
        P10 = M1_RM135_Vl
        P11 = M1_RM135_Percent
        P12 = M1_ChDtTrg241
        P13 = M1_RM135_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM136_CtWdSet1
        P1 =  M1_RM136_CtWdSet2
        P2 =  M1_RM136_MinRaw
        P3 =  M1_RM136_MaxRaw
        P4 =  M1_RM136_MinEU
        P5 =  M1_RM136_MaxEU
        P6 =  M1_RM136_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM136_CtWdSet1
        P1  = M1_RM136_CtWdSet2
        P2  = M1_RM136_CtWd
        P3  = M1_RM136_CtWdSend
        P4  = M1_RM136_MinRaw
        P5  = M1_RM136_MaxRaw
        P6  = M1_RM136_MinEU
        P7  = M1_RM136_MaxEU
        P8  = M1_RM136_ScaleWidth
        P9  = M1_RM136_Raw
        P10 = M1_RM136_Vl
        P11 = M1_RM136_Percent
        P12 = M1_ChDtTrg242
        P13 = M1_RM136_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM137_CtWdSet1
        P1 =  M1_RM137_CtWdSet2
        P2 =  M1_RM137_MinRaw
        P3 =  M1_RM137_MaxRaw
        P4 =  M1_RM137_MinEU
        P5 =  M1_RM137_MaxEU
        P6 =  M1_RM137_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM137_CtWdSet1
        P1  = M1_RM137_CtWdSet2
        P2  = M1_RM137_CtWd
        P3  = M1_RM137_CtWdSend
        P4  = M1_RM137_MinRaw
        P5  = M1_RM137_MaxRaw
        P6  = M1_RM137_MinEU
        P7  = M1_RM137_MaxEU
        P8  = M1_RM137_ScaleWidth
        P9  = M1_RM137_Raw
        P10 = M1_RM137_Vl
        P11 = M1_RM137_Percent
        P12 = M1_ChDtTrg242
        P13 = M1_RM137_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM138_CtWdSet1
        P1 =  M1_RM138_CtWdSet2
        P2 =  M1_RM138_MinRaw
        P3 =  M1_RM138_MaxRaw
        P4 =  M1_RM138_MinEU
        P5 =  M1_RM138_MaxEU
        P6 =  M1_RM138_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM138_CtWdSet1
        P1  = M1_RM138_CtWdSet2
        P2  = M1_RM138_CtWd
        P3  = M1_RM138_CtWdSend
        P4  = M1_RM138_MinRaw
        P5  = M1_RM138_MaxRaw
        P6  = M1_RM138_MinEU
        P7  = M1_RM138_MaxEU
        P8  = M1_RM138_ScaleWidth
        P9  = M1_RM138_Raw
        P10 = M1_RM138_Vl
        P11 = M1_RM138_Percent
        P12 = M1_ChDtTrg242
        P13 = M1_RM138_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM139_CtWdSet1
        P1 =  M1_RM139_CtWdSet2
        P2 =  M1_RM139_MinRaw
        P3 =  M1_RM139_MaxRaw
        P4 =  M1_RM139_MinEU
        P5 =  M1_RM139_MaxEU
        P6 =  M1_RM139_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM139_CtWdSet1
        P1  = M1_RM139_CtWdSet2
        P2  = M1_RM139_CtWd
        P3  = M1_RM139_CtWdSend
        P4  = M1_RM139_MinRaw
        P5  = M1_RM139_MaxRaw
        P6  = M1_RM139_MinEU
        P7  = M1_RM139_MaxEU
        P8  = M1_RM139_ScaleWidth
        P9  = M1_RM139_Raw
        P10 = M1_RM139_Vl
        P11 = M1_RM139_Percent
        P12 = M1_ChDtTrg242
        P13 = M1_RM139_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM140_CtWdSet1
        P1 =  M1_RM140_CtWdSet2
        P2 =  M1_RM140_MinRaw
        P3 =  M1_RM140_MaxRaw
        P4 =  M1_RM140_MinEU
        P5 =  M1_RM140_MaxEU
        P6 =  M1_RM140_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM140_CtWdSet1
        P1  = M1_RM140_CtWdSet2
        P2  = M1_RM140_CtWd
        P3  = M1_RM140_CtWdSend
        P4  = M1_RM140_MinRaw
        P5  = M1_RM140_MaxRaw
        P6  = M1_RM140_MinEU
        P7  = M1_RM140_MaxEU
        P8  = M1_RM140_ScaleWidth
        P9  = M1_RM140_Raw
        P10 = M1_RM140_Vl
        P11 = M1_RM140_Percent
        P12 = M1_ChDtTrg243
        P13 = M1_RM140_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM141_CtWdSet1
        P1 =  M1_RM141_CtWdSet2
        P2 =  M1_RM141_MinRaw
        P3 =  M1_RM141_MaxRaw
        P4 =  M1_RM141_MinEU
        P5 =  M1_RM141_MaxEU
        P6 =  M1_RM141_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM141_CtWdSet1
        P1  = M1_RM141_CtWdSet2
        P2  = M1_RM141_CtWd
        P3  = M1_RM141_CtWdSend
        P4  = M1_RM141_MinRaw
        P5  = M1_RM141_MaxRaw
        P6  = M1_RM141_MinEU
        P7  = M1_RM141_MaxEU
        P8  = M1_RM141_ScaleWidth
        P9  = M1_RM141_Raw
        P10 = M1_RM141_Vl
        P11 = M1_RM141_Percent
        P12 = M1_ChDtTrg243
        P13 = M1_RM141_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM142_CtWdSet1
        P1 =  M1_RM142_CtWdSet2
        P2 =  M1_RM142_MinRaw
        P3 =  M1_RM142_MaxRaw
        P4 =  M1_RM142_MinEU
        P5 =  M1_RM142_MaxEU
        P6 =  M1_RM142_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM142_CtWdSet1
        P1  = M1_RM142_CtWdSet2
        P2  = M1_RM142_CtWd
        P3  = M1_RM142_CtWdSend
        P4  = M1_RM142_MinRaw
        P5  = M1_RM142_MaxRaw
        P6  = M1_RM142_MinEU
        P7  = M1_RM142_MaxEU
        P8  = M1_RM142_ScaleWidth
        P9  = M1_RM142_Raw
        P10 = M1_RM142_Vl
        P11 = M1_RM142_Percent
        P12 = M1_ChDtTrg243
        P13 = M1_RM142_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM143_CtWdSet1
        P1 =  M1_RM143_CtWdSet2
        P2 =  M1_RM143_MinRaw
        P3 =  M1_RM143_MaxRaw
        P4 =  M1_RM143_MinEU
        P5 =  M1_RM143_MaxEU
        P6 =  M1_RM143_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM143_CtWdSet1
        P1  = M1_RM143_CtWdSet2
        P2  = M1_RM143_CtWd
        P3  = M1_RM143_CtWdSend
        P4  = M1_RM143_MinRaw
        P5  = M1_RM143_MaxRaw
        P6  = M1_RM143_MinEU
        P7  = M1_RM143_MaxEU
        P8  = M1_RM143_ScaleWidth
        P9  = M1_RM143_Raw
        P10 = M1_RM143_Vl
        P11 = M1_RM143_Percent
        P12 = M1_ChDtTrg243
        P13 = M1_RM143_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT101_CtWdSet1
        P1 =  M1_CT101_CtWdSet2
        P2 =  M1_CT101_MinRaw
        P3 =  M1_CT101_MaxRaw
        P4 =  M1_CT101_MinEU
        P5 =  M1_CT101_MaxEU
        P6 =  M1_CT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT101_CtWdSet1
        P1  = M1_CT101_CtWdSet2
        P2  = M1_CT101_CtWd
        P3  = M1_CT101_CtWdSend
        P4  = M1_CT101_MinRaw
        P5  = M1_CT101_MaxRaw
        P6  = M1_CT101_MinEU
        P7  = M1_CT101_MaxEU
        P8  = M1_CT101_ScaleWidth
        P9  = M1_CT101_Raw
        P10 = M1_CT101_Vl
        P11 = M1_CT101_Percent
        P12 = M1_ChDtTrg244
        P13 = M1_CT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT201_CtWdSet1
        P1 =  M1_CT201_CtWdSet2
        P2 =  M1_CT201_MinRaw
        P3 =  M1_CT201_MaxRaw
        P4 =  M1_CT201_MinEU
        P5 =  M1_CT201_MaxEU
        P6 =  M1_CT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT201_CtWdSet1
        P1  = M1_CT201_CtWdSet2
        P2  = M1_CT201_CtWd
        P3  = M1_CT201_CtWdSend
        P4  = M1_CT201_MinRaw
        P5  = M1_CT201_MaxRaw
        P6  = M1_CT201_MinEU
        P7  = M1_CT201_MaxEU
        P8  = M1_CT201_ScaleWidth
        P9  = M1_CT201_Raw
        P10 = M1_CT201_Vl
        P11 = M1_CT201_Percent
        P12 = M1_ChDtTrg244
        P13 = M1_CT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT301_CtWdSet1
        P1 =  M1_CT301_CtWdSet2
        P2 =  M1_CT301_MinRaw
        P3 =  M1_CT301_MaxRaw
        P4 =  M1_CT301_MinEU
        P5 =  M1_CT301_MaxEU
        P6 =  M1_CT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT301_CtWdSet1
        P1  = M1_CT301_CtWdSet2
        P2  = M1_CT301_CtWd
        P3  = M1_CT301_CtWdSend
        P4  = M1_CT301_MinRaw
        P5  = M1_CT301_MaxRaw
        P6  = M1_CT301_MinEU
        P7  = M1_CT301_MaxEU
        P8  = M1_CT301_ScaleWidth
        P9  = M1_CT301_Raw
        P10 = M1_CT301_Vl
        P11 = M1_CT301_Percent
        P12 = M1_ChDtTrg244
        P13 = M1_CT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT401_CtWdSet1
        P1 =  M1_CT401_CtWdSet2
        P2 =  M1_CT401_MinRaw
        P3 =  M1_CT401_MaxRaw
        P4 =  M1_CT401_MinEU
        P5 =  M1_CT401_MaxEU
        P6 =  M1_CT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT401_CtWdSet1
        P1  = M1_CT401_CtWdSet2
        P2  = M1_CT401_CtWd
        P3  = M1_CT401_CtWdSend
        P4  = M1_CT401_MinRaw
        P5  = M1_CT401_MaxRaw
        P6  = M1_CT401_MinEU
        P7  = M1_CT401_MaxEU
        P8  = M1_CT401_ScaleWidth
        P9  = M1_CT401_Raw
        P10 = M1_CT401_Vl
        P11 = M1_CT401_Percent
        P12 = M1_ChDtTrg244
        P13 = M1_CT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT501_CtWdSet1
        P1 =  M1_CT501_CtWdSet2
        P2 =  M1_CT501_MinRaw
        P3 =  M1_CT501_MaxRaw
        P4 =  M1_CT501_MinEU
        P5 =  M1_CT501_MaxEU
        P6 =  M1_CT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT501_CtWdSet1
        P1  = M1_CT501_CtWdSet2
        P2  = M1_CT501_CtWd
        P3  = M1_CT501_CtWdSend
        P4  = M1_CT501_MinRaw
        P5  = M1_CT501_MaxRaw
        P6  = M1_CT501_MinEU
        P7  = M1_CT501_MaxEU
        P8  = M1_CT501_ScaleWidth
        P9  = M1_CT501_Raw
        P10 = M1_CT501_Vl
        P11 = M1_CT501_Percent
        P12 = M1_ChDtTrg245
        P13 = M1_CT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_MT101_CtWdSet1
        P1 =  M1_MT101_CtWdSet2
        P2 =  M1_MT101_MinRaw
        P3 =  M1_MT101_MaxRaw
        P4 =  M1_MT101_MinEU
        P5 =  M1_MT101_MaxEU
        P6 =  M1_MT101_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_MT101_CtWdSet1
        P1  = M1_MT101_CtWdSet2
        P2  = M1_MT101_CtWd
        P3  = M1_MT101_CtWdSend
        P4  = M1_MT101_MinRaw
        P5  = M1_MT101_MaxRaw
        P6  = M1_MT101_MinEU
        P7  = M1_MT101_MaxEU
        P8  = M1_MT101_ScaleWidth
        P9  = M1_MT101_Raw
        P10 = M1_MT101_Vl
        P11 = M1_MT101_Percent
        P12 = M1_ChDtTrg245
        P13 = M1_MT101_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_MT201_CtWdSet1
        P1 =  M1_MT201_CtWdSet2
        P2 =  M1_MT201_MinRaw
        P3 =  M1_MT201_MaxRaw
        P4 =  M1_MT201_MinEU
        P5 =  M1_MT201_MaxEU
        P6 =  M1_MT201_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_MT201_CtWdSet1
        P1  = M1_MT201_CtWdSet2
        P2  = M1_MT201_CtWd
        P3  = M1_MT201_CtWdSend
        P4  = M1_MT201_MinRaw
        P5  = M1_MT201_MaxRaw
        P6  = M1_MT201_MinEU
        P7  = M1_MT201_MaxEU
        P8  = M1_MT201_ScaleWidth
        P9  = M1_MT201_Raw
        P10 = M1_MT201_Vl
        P11 = M1_MT201_Percent
        P12 = M1_ChDtTrg245
        P13 = M1_MT201_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_MT301_CtWdSet1
        P1 =  M1_MT301_CtWdSet2
        P2 =  M1_MT301_MinRaw
        P3 =  M1_MT301_MaxRaw
        P4 =  M1_MT301_MinEU
        P5 =  M1_MT301_MaxEU
        P6 =  M1_MT301_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_MT301_CtWdSet1
        P1  = M1_MT301_CtWdSet2
        P2  = M1_MT301_CtWd
        P3  = M1_MT301_CtWdSend
        P4  = M1_MT301_MinRaw
        P5  = M1_MT301_MaxRaw
        P6  = M1_MT301_MinEU
        P7  = M1_MT301_MaxEU
        P8  = M1_MT301_ScaleWidth
        P9  = M1_MT301_Raw
        P10 = M1_MT301_Vl
        P11 = M1_MT301_Percent
        P12 = M1_ChDtTrg245
        P13 = M1_MT301_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_MT401_CtWdSet1
        P1 =  M1_MT401_CtWdSet2
        P2 =  M1_MT401_MinRaw
        P3 =  M1_MT401_MaxRaw
        P4 =  M1_MT401_MinEU
        P5 =  M1_MT401_MaxEU
        P6 =  M1_MT401_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_MT401_CtWdSet1
        P1  = M1_MT401_CtWdSet2
        P2  = M1_MT401_CtWd
        P3  = M1_MT401_CtWdSend
        P4  = M1_MT401_MinRaw
        P5  = M1_MT401_MaxRaw
        P6  = M1_MT401_MinEU
        P7  = M1_MT401_MaxEU
        P8  = M1_MT401_ScaleWidth
        P9  = M1_MT401_Raw
        P10 = M1_MT401_Vl
        P11 = M1_MT401_Percent
        P12 = M1_ChDtTrg246
        P13 = M1_MT401_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_MT501_CtWdSet1
        P1 =  M1_MT501_CtWdSet2
        P2 =  M1_MT501_MinRaw
        P3 =  M1_MT501_MaxRaw
        P4 =  M1_MT501_MinEU
        P5 =  M1_MT501_MaxEU
        P6 =  M1_MT501_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_MT501_CtWdSet1
        P1  = M1_MT501_CtWdSet2
        P2  = M1_MT501_CtWd
        P3  = M1_MT501_CtWdSend
        P4  = M1_MT501_MinRaw
        P5  = M1_MT501_MaxRaw
        P6  = M1_MT501_MinEU
        P7  = M1_MT501_MaxEU
        P8  = M1_MT501_ScaleWidth
        P9  = M1_MT501_Raw
        P10 = M1_MT501_Vl
        P11 = M1_MT501_Percent
        P12 = M1_ChDtTrg246
        P13 = M1_MT501_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT051_CtWdSet1
        P1 =  M1_BT051_CtWdSet2
        P2 =  M1_BT051_MinRaw
        P3 =  M1_BT051_MaxRaw
        P4 =  M1_BT051_MinEU
        P5 =  M1_BT051_MaxEU
        P6 =  M1_BT051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT051_CtWdSet1
        P1  = M1_BT051_CtWdSet2
        P2  = M1_BT051_CtWd
        P3  = M1_BT051_CtWdSend
        P4  = M1_BT051_MinRaw
        P5  = M1_BT051_MaxRaw
        P6  = M1_BT051_MinEU
        P7  = M1_BT051_MaxEU
        P8  = M1_BT051_ScaleWidth
        P9  = M1_BT051_Raw
        P10 = M1_BT051_Vl
        P11 = M1_BT051_Percent
        P12 = M1_ChDtTrg246
        P13 = M1_BT051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_BT052_CtWdSet1
        P1 =  M1_BT052_CtWdSet2
        P2 =  M1_BT052_MinRaw
        P3 =  M1_BT052_MaxRaw
        P4 =  M1_BT052_MinEU
        P5 =  M1_BT052_MaxEU
        P6 =  M1_BT052_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_BT052_CtWdSet1
        P1  = M1_BT052_CtWdSet2
        P2  = M1_BT052_CtWd
        P3  = M1_BT052_CtWdSend
        P4  = M1_BT052_MinRaw
        P5  = M1_BT052_MaxRaw
        P6  = M1_BT052_MinEU
        P7  = M1_BT052_MaxEU
        P8  = M1_BT052_ScaleWidth
        P9  = M1_BT052_Raw
        P10 = M1_BT052_Vl
        P11 = M1_BT052_Percent
        P12 = M1_ChDtTrg246
        P13 = M1_BT052_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT051_CtWdSet1
        P1 =  M1_CT051_CtWdSet2
        P2 =  M1_CT051_MinRaw
        P3 =  M1_CT051_MaxRaw
        P4 =  M1_CT051_MinEU
        P5 =  M1_CT051_MaxEU
        P6 =  M1_CT051_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT051_CtWdSet1
        P1  = M1_CT051_CtWdSet2
        P2  = M1_CT051_CtWd
        P3  = M1_CT051_CtWdSend
        P4  = M1_CT051_MinRaw
        P5  = M1_CT051_MaxRaw
        P6  = M1_CT051_MinEU
        P7  = M1_CT051_MaxEU
        P8  = M1_CT051_ScaleWidth
        P9  = M1_CT051_Raw
        P10 = M1_CT051_Vl
        P11 = M1_CT051_Percent
        P12 = M1_ChDtTrg247
        P13 = M1_CT051_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_CT052_CtWdSet1
        P1 =  M1_CT052_CtWdSet2
        P2 =  M1_CT052_MinRaw
        P3 =  M1_CT052_MaxRaw
        P4 =  M1_CT052_MinEU
        P5 =  M1_CT052_MaxEU
        P6 =  M1_CT052_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_CT052_CtWdSet1
        P1  = M1_CT052_CtWdSet2
        P2  = M1_CT052_CtWd
        P3  = M1_CT052_CtWdSend
        P4  = M1_CT052_MinRaw
        P5  = M1_CT052_MaxRaw
        P6  = M1_CT052_MinEU
        P7  = M1_CT052_MaxEU
        P8  = M1_CT052_ScaleWidth
        P9  = M1_CT052_Raw
        P10 = M1_CT052_Vl
        P11 = M1_CT052_Percent
        P12 = M1_ChDtTrg247
        P13 = M1_CT052_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM158_CtWdSet1
        P1 =  M1_RM158_CtWdSet2
        P2 =  M1_RM158_MinRaw
        P3 =  M1_RM158_MaxRaw
        P4 =  M1_RM158_MinEU
        P5 =  M1_RM158_MaxEU
        P6 =  M1_RM158_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM158_CtWdSet1
        P1  = M1_RM158_CtWdSet2
        P2  = M1_RM158_CtWd
        P3  = M1_RM158_CtWdSend
        P4  = M1_RM158_MinRaw
        P5  = M1_RM158_MaxRaw
        P6  = M1_RM158_MinEU
        P7  = M1_RM158_MaxEU
        P8  = M1_RM158_ScaleWidth
        P9  = M1_RM158_Raw
        P10 = M1_RM158_Vl
        P11 = M1_RM158_Percent
        P12 = M1_ChDtTrg247
        P13 = M1_RM158_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

OBJ: M1_Analog
    CPAR:
        P0 =  M1_RM159_CtWdSet1
        P1 =  M1_RM159_CtWdSet2
        P2 =  M1_RM159_MinRaw
        P3 =  M1_RM159_MaxRaw
        P4 =  M1_RM159_MinEU
        P5 =  M1_RM159_MaxEU
        P6 =  M1_RM159_Raw
    CFV: ELSE Q1;
    OPAR:
        P0  = M1_RM159_CtWdSet1
        P1  = M1_RM159_CtWdSet2
        P2  = M1_RM159_CtWd
        P3  = M1_RM159_CtWdSend
        P4  = M1_RM159_MinRaw
        P5  = M1_RM159_MaxRaw
        P6  = M1_RM159_MinEU
        P7  = M1_RM159_MaxEU
        P8  = M1_RM159_ScaleWidth
        P9  = M1_RM159_Raw
        P10 = M1_RM159_Vl
        P11 = M1_RM159_Percent
        P12 = M1_ChDtTrg247
        P13 = M1_RM159_ValTrig
    OFV0: P3  = IF S0 && (P0 != 0) && (P0 & 1) : P2 | (1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV1: P3  = IF S0 && (P0 != 0) && !(P0 & 1) : P2 & ~(1 << ((P0 >> 1)-1)) ; ELSE ;
    OFV2: P3  = IF S1 && (P1 != 0) && (P1 & 1) : P2 | (1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV3: P3  = IF S1 && (P1 != 0) && !(P1 & 1) : P2 & ~(1 << ((P1 >> 1)-1)) ; ELSE ;
    OFV4: P8  = IF ((S6 | S7) & 03 ) == 3 : ABS(P7-P6); ELSE ;
    OFV5: P10 = IF ((S4 | S5 | S6 | S7 | S9) & 03) == 3 : P6+(P9-P4)*(P7-P6)/(P5-P4); ELSE ;
    OFV6: P11 = IF (S9 & 03) == 3 : (P9-P4)*100/(P5-P4); ELSE ;
    OFV7: P12 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;
    OFV8: P13 = IF ((S4 | S5 | S6 | S7) & 03) == 3 : 1; ELSE ;

